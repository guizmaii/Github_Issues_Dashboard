{
  # system properties
  "activator": {
    # system properties
    "home": "/home/Jules/Scala/activator-1.2.2-minimal"
  },
  # merge of /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 1,reference.conf: 8
  "akka": {
    # merge of /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 6,reference.conf: 62
    "actor": {
      # reference.conf: 74
      # Timeout for ActorSystem.actorOf
      "creation-timeout": "20s",
      # merge of /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 7,reference.conf: 411
      "debug": {
        # reference.conf: 418
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
        "autoreceive": "off",
        # reference.conf: 427
        # enable DEBUG logging of subscription changes on the eventStream
        "event-stream": "off",
        # reference.conf: 424
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        "fsm": "off",
        # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 12
        # enable DEBUG logging of actor lifecycle changes
        "lifecycle": "on",
        # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 10
        # enable function of LoggingReceive, which is to log any received message at
        # DEBUG level
        "receive": "on",
        # reference.conf: 433
        # enable WARN logging of misconfigured routers
        "router-misconfiguration": "off",
        # reference.conf: 430
        # enable DEBUG logging of unhandled messages
        "unhandled": "off"
      },
      # reference.conf: 231
      "default-dispatcher": {
        # reference.conf: 327
        # For BalancingDispatcher: If the balancing dispatcher should attempt to
        # schedule idle actors using the same dispatcher when a message comes in,
        # and the dispatchers ExecutorService is not fully busy already.
        "attempt-teamwork": "on",
        # reference.conf: 256
        # This will be used if you have set "executor = "default-executor"".
        # If an ActorSystem is created with a given ExecutionContext, this
        # ExecutionContext will be used as the default executor for all
        # dispatchers in the ActorSystem configured with
        # executor = "default-executor". Note that "default-executor"
        # is the default value for executor, and therefore used if not
        # specified otherwise. If no ExecutionContext is given,
        # the executor configured in "fallback" will be used.
        "default-executor": {
          # reference.conf: 257
          "fallback": "fork-join-executor"
        },
        # reference.conf: 246
        # Which kind of ExecutorService to use for this dispatcher
        # Valid options:
        #  - "default-executor" requires a "default-executor" section
        #  - "fork-join-executor" requires a "fork-join-executor" section
        #  - "thread-pool-executor" requires a "thread-pool-executor" section
        #  - A FQCN of a class extending ExecutorServiceConfigurator
        "executor": "default-executor",
        # reference.conf: 261
        # This will be used if you have set "executor = "fork-join-executor""
        "fork-join-executor": {
          # reference.conf: 268
          # The parallelism factor is used to determine thread pool size using the
          # following formula: ceil(available processors * factor). Resulting size
          # is then bounded by the parallelism-min and parallelism-max values.
          "parallelism-factor": 3,
          # reference.conf: 271
          # Max number of threads to cap factor-based parallelism number to
          "parallelism-max": 64,
          # reference.conf: 263
          # Min number of threads to cap factor-based parallelism number to
          "parallelism-min": 8
        },
        # reference.conf: 332
        # If this dispatcher requires a specific type of mailbox, specify the
        # fully-qualified class name here; the actually created mailbox will
        # be a subtype of this type. The empty string signifies no requirement.
        "mailbox-requirement": "",
        # reference.conf: 315
        # How long time the dispatcher will wait for new actors until it shuts down
        "shutdown-timeout": "1s",
        # reference.conf: 275
        # This will be used if you have set "executor = "thread-pool-executor""
        "thread-pool-executor": {
          # reference.conf: 311
          # Allow core threads to time out
          "allow-core-timeout": "on",
          # reference.conf: 286
          # The core pool size factor is used to determine thread pool core size
          # using the following formula: ceil(available processors * factor).
          # Resulting size is then bounded by the core-pool-size-min and
          # core-pool-size-max values.
          "core-pool-size-factor": 3,
          # reference.conf: 289
          # Max number of threads to cap factor-based number to
          "core-pool-size-max": 64,
          # reference.conf: 280
          # Min number of threads to cap factor-based core number to
          "core-pool-size-min": 8,
          # reference.conf: 277
          # Keep alive time for threads
          "keep-alive-time": "60s",
          # reference.conf: 297
          # Max no of threads (if using a bounded task queue) is determined by
          # calculating: ceil(available processors * factor)
          "max-pool-size-factor": 3,
          # reference.conf: 301
          # Max number of threads to cap factor-based max number to
          # (if using a  bounded task queue)
          "max-pool-size-max": 64,
          # reference.conf: 293
          # Minimum number of threads to cap factor-based max number to
          # (if using a bounded task queue)
          "max-pool-size-min": 8,
          # reference.conf: 304
          # Specifies the bounded capacity of the task queue (< 1 == unbounded)
          "task-queue-size": -1,
          # reference.conf: 308
          # Specifies which type of task queue will be used, can be "array" or
          # "linked" (default)
          "task-queue-type": "linked"
        },
        # reference.conf: 319
        # Throughput defines the number of messages that are processed in a batch
        # before the thread is returned to the pool. Set to 1 for as fair as possible.
        "throughput": 5,
        # reference.conf: 322
        # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
        "throughput-deadline-time": "0ms",
        # reference.conf: 238
        # Must be one of the following
        # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
        # MessageDispatcherConfigurator with a public constructor with
        # both com.typesafe.config.Config parameter and
        # akka.dispatch.DispatcherPrerequisites parameters.
        # PinnedDispatcher must be used together with executor=thread-pool-executor.
        "type": "Dispatcher"
      },
      # reference.conf: 335
      "default-mailbox": {
        # reference.conf: 346
        # If the mailbox is bounded then it uses this setting to determine its
        # capacity. The provided value must be positive.
        # NOTICE:
        # Up to version 2.1 the mailbox type was determined based on this setting;
        # this is no longer the case, the type must explicitly be a bounded mailbox.
        "mailbox-capacity": 1000,
        # reference.conf: 351
        # If the mailbox is bounded then this is the timeout for enqueueing
        # in case the mailbox is full. Negative values signify infinite
        # timeout, which should be avoided as it bears the risk of dead-lock.
        "mailbox-push-timeout-time": "10s",
        # reference.conf: 339
        # FQCN of the MailboxType. The Class of the FQCN must have a public
        # constructor with
        # (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
        "mailbox-type": "akka.dispatch.UnboundedMailbox",
        # reference.conf: 357
        # For Actor with Stash: The default capacity of the stash.
        # If negative (or zero) then an unbounded stash is used (default)
        # If positive then a bounded stash is used and the capacity is set using
        # the property
        "stash-capacity": -1
      },
      # reference.conf: 116
      "deployment": {
        # reference.conf: 119
        # deployment id pattern - on the format: /parent/child etc.
        "default": {
          # reference.conf: 125
          # The id of the dispatcher to use for this actor.
          # If undefined or empty the dispatcher specified in code
          # (Props.withDispatcher) is used, or default-dispatcher if not
          # specified at all.
          "dispatcher": "",
          # reference.conf: 133
          # The id of the mailbox to use for this actor.
          # If undefined or empty the default mailbox of the configured dispatcher
          # is used or if there is no mailbox configuration the mailbox specified
          # in code (Props.withMailbox) is used.
          # If there is a mailbox defined in the configured dispatcher then that
          # overrides this setting.
          "mailbox": "",
          # reference.conf: 158
          # number of children to create in case of a router;
          # this setting is ignored if routees.paths is given
          "nr-of-instances": 1,
          # reference.conf: 184
          # Routers with dynamically resizable number of routees; this feature is
          # enabled by including (parts of) this section in the deployment
          "resizer": {
            # reference.conf: 222
            # Fraction of routees to be removed when the resizer reaches the
            # backoffThreshold.
            # For example, 0.1 would decrease 10% (rounded up), i.e. if current
            # capacity is 9 it will request an decrease of 1 routee.
            "backoff-rate": 0.1,
            # reference.conf: 216
            # Minimum fraction of busy routees before backing off.
            # For example, if this is 0.3, then we'll remove some routees only when
            # less than 30% of routees are busy, i.e. if current capacity is 10 and
            # 3 are busy then the capacity is unchanged, but if 2 or less are busy
            # the capacity is decreased.
            # Use 0.0 or negative to avoid removal of routees.
            "backoff-threshold": 0.3,
            # reference.conf: 186
            "enabled": "off",
            # reference.conf: 189
            # The fewest number of routees the router should ever have.
            "lower-bound": 1,
            # reference.conf: 226
            # Number of messages between resize operation.
            # Use 1 to resize before each message.
            "messages-per-resize": 10,
            # reference.conf: 203
            # Threshold used to evaluate if a routee is considered to be busy
            # (under pressure). Implementation depends on this value (default is 1).
            # 0:   number of routees currently processing a message.
            # 1:   number of routees currently processing a message has
            #      some messages in mailbox.
            # > 1: number of routees with at least the configured pressure-threshold
            #      messages in their mailbox. Note that estimating mailbox size of
            #      default UnboundedMailbox is O(N) operation.
            "pressure-threshold": 1,
            # reference.conf: 208
            # Percentage to increase capacity whenever all routees are busy.
            # For example, 0.2 would increase 20% (rounded up), i.e. if current
            # capacity is 6 it will request an increase of 2 more routees.
            "rampup-rate": 0.2,
            # reference.conf: 193
            # The most number of routees the router should ever have.
            # Must be greater than or equal to lower-bound.
            "upper-bound": 10
          },
          # reference.conf: 166
          "routees": {
            # reference.conf: 170
            # Alternatively to giving nr-of-instances you can specify the full
            # paths of those actors which should be routed to. This setting takes
            # precedence over nr-of-instances
            "paths": []
          },
          # reference.conf: 154
          # routing (load-balance) scheme to use
          # - available: "from-code", "round-robin", "random", "smallest-mailbox",
          #              "scatter-gather", "broadcast"
          # - or:        Fully qualified class name of the router class.
          #              The class must extend akka.routing.CustomRouterConfig and
          #              have a public constructor with com.typesafe.config.Config
          #              and optional akka.actor.DynamicAccess parameter.
          # - default is "from-code";
          # Whether or not an actor is transformed to a Router is decided in code
          # only (Props.withRouter). The type of router can be overridden in the
          # configuration; specifying "from-code" means that the values specified
          # in the code shall be used.
          # In case of routing, the actors to be routed to can be specified
          # in several ways:
          # - nr-of-instances: will create that many children
          # - routees.paths: will route messages to these paths using ActorSelection,
          #   i.e. will not create children
          # - resizer: dynamically resizable number of routees as specified in
          #   resizer below
          "router": "from-code",
          # reference.conf: 164
          # number of virtual nodes per node for consistent-hashing router
          "virtual-nodes-factor": 10,
          # reference.conf: 161
          # within is the timeout used for routers containing future calls
          "within": "5 seconds"
        }
      },
      # reference.conf: 455
      # Configuration items which are used by the akka.actor.ActorDSL._ methods
      "dsl": {
        # reference.conf: 461
        # Default timeout to assume for operations like Inbox.receive et al
        "default-timeout": "5s",
        # reference.conf: 458
        # Maximum queue size of the actor created by newInbox(); this protects
        # against faulty programs which use select() and consistently miss messages
        "inbox-size": 1000
      },
      # reference.conf: 71
      # The guardian "/user" will use this class to obtain its supervisorStrategy.
      # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
      # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
      "guardian-supervisor-strategy": "akka.actor.DefaultSupervisorStrategy",
      # reference.conf: 360
      "mailbox": {
        # reference.conf: 403
        "bounded-deque-based": {
          # reference.conf: 407
          # FQCN of the MailboxType, The Class of the FQCN must have a public
          # constructor with (akka.actor.ActorSystem.Settings,
          # com.typesafe.config.Config) parameters.
          "mailbox-type": "akka.dispatch.BoundedDequeBasedMailbox"
        },
        # reference.conf: 389
        "bounded-queue-based": {
          # reference.conf: 393
          # FQCN of the MailboxType, The Class of the FQCN must have a public
          # constructor with (akka.actor.ActorSystem.Settings,
          # com.typesafe.config.Config) parameters.
          "mailbox-type": "akka.dispatch.BoundedMailbox"
        },
        # reference.conf: 367
        # Mapping between message queue semantics and mailbox configurations.
        # Used by akka.dispatch.RequiresMessageQueue[T] to enforce different
        # mailbox types on actors.
        # If your Actor implements RequiresMessageQueue[T], then when you create
        # an instance of that actor its mailbox type will be decided by looking
        # up a mailbox configuration via T in this mapping
        "requirements": {
          # reference.conf: 377
          "akka.dispatch.BoundedDequeBasedMessageQueueSemantics": "akka.actor.mailbox.bounded-deque-based",
          # reference.conf: 371
          "akka.dispatch.BoundedMessageQueueSemantics": "akka.actor.mailbox.bounded-queue-based",
          # reference.conf: 373
          "akka.dispatch.DequeBasedMessageQueueSemantics": "akka.actor.mailbox.unbounded-deque-based",
          # reference.conf: 379
          "akka.dispatch.MultipleConsumerSemantics": "akka.actor.mailbox.unbounded-queue-based",
          # reference.conf: 375
          "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics": "akka.actor.mailbox.unbounded-deque-based",
          # reference.conf: 369
          "akka.dispatch.UnboundedMessageQueueSemantics": "akka.actor.mailbox.unbounded-queue-based"
        },
        # reference.conf: 396
        "unbounded-deque-based": {
          # reference.conf: 400
          # FQCN of the MailboxType, The Class of the FQCN must have a public
          # constructor with (akka.actor.ActorSystem.Settings,
          # com.typesafe.config.Config) parameters.
          "mailbox-type": "akka.dispatch.UnboundedDequeBasedMailbox"
        },
        # reference.conf: 382
        "unbounded-queue-based": {
          # reference.conf: 386
          # FQCN of the MailboxType, The Class of the FQCN must have a public
          # constructor with (akka.actor.ActorSystem.Settings,
          # com.typesafe.config.Config) parameters.
          "mailbox-type": "akka.dispatch.UnboundedMailbox"
        }
      },
      # reference.conf: 66
      # FQCN of the ActorRefProvider to be used; the below is the built-in default,
      # another one is akka.remote.RemoteActorRefProvider in the akka-remote bundle.
      "provider": "akka.actor.LocalActorRefProvider",
      # reference.conf: 78
      # Frequency with which stopping actors are prodded in case they had to be
      # removed from their parents
      "reaper-interval": "5s",
      # reference.conf: 100
      "router": {
        # reference.conf: 100
        # Mapping between ´deployment.router' short names to fully qualified class names
        "type-mapping": {
          # reference.conf: 106
          "balancing-pool": "akka.routing.BalancingPool",
          # reference.conf: 109
          "broadcast-group": "akka.routing.BroadcastGroup",
          # reference.conf: 108
          "broadcast-pool": "akka.routing.BroadcastPool",
          # reference.conf: 113
          "consistent-hashing-group": "akka.routing.ConsistentHashingGroup",
          # reference.conf: 112
          "consistent-hashing-pool": "akka.routing.ConsistentHashingPool",
          # reference.conf: 101
          "from-code": "akka.routing.NoRouter",
          # reference.conf: 105
          "random-group": "akka.routing.RandomGroup",
          # reference.conf: 104
          "random-pool": "akka.routing.RandomPool",
          # reference.conf: 103
          "round-robin-group": "akka.routing.RoundRobinGroup",
          # reference.conf: 102
          "round-robin-pool": "akka.routing.RoundRobinPool",
          # reference.conf: 111
          "scatter-gather-group": "akka.routing.ScatterGatherFirstCompletedGroup",
          # reference.conf: 110
          "scatter-gather-pool": "akka.routing.ScatterGatherFirstCompletedPool",
          # reference.conf: 107
          "smallest-mailbox-pool": "akka.routing.SmallestMailboxPool"
        }
      },
      # reference.conf: 449
      # Class to Serializer binding. You only need to specify the name of an
      # interface or abstract base class of the messages. In case of ambiguity it
      # is using the most specific configured class, or giving a warning and
      # choosing the “first” one.
      #
      # To disable one of the default serializers, assign its class to "none", like
      # "java.io.Serializable" = none
      "serialization-bindings": {
        # reference.conf: 450
        "[B": "bytes",
        # reference.conf: 451
        "java.io.Serializable": "java"
      },
      # reference.conf: 87
      # Serializes and deserializes creators (in Props) to ensure that they can be
      # sent over the network, this is only intended for testing. Purely local deployments
      # as marked with deploy.scope == LocalScope are exempt from verification.
      "serialize-creators": "off",
      # reference.conf: 82
      # Serializes and deserializes (non-primitive) messages to ensure immutability,
      # this is only intended for testing.
      "serialize-messages": "off",
      # reference.conf: 437
      # Entries for pluggable serializers and their bindings.
      "serializers": {
        # reference.conf: 439
        "bytes": "akka.serialization.ByteArraySerializer",
        # reference.conf: 438
        "java": "akka.serialization.JavaSerializer"
      },
      # reference.conf: 94
      "typed": {
        # reference.conf: 96
        # Default timeout for typed actor methods with non-void return type
        "timeout": "5s"
      },
      # reference.conf: 92
      # Timeout for send operations to top-level actors which are in the process
      # of being started. This is only relevant if using a bounded mailbox or the
      # CallingThreadDispatcher for a top-level actor.
      "unstarted-push-timeout": "10s"
    },
    # reference.conf: 56
    # Toggles whether threads created by this ActorSystem should be daemons or not
    "daemonic": "off",
    # reference.conf: 53
    # List FQCN of extensions which shall be loaded at actor system startup.
    # Should be on the format: 'extensions = ["foo", "bar"]' etc.
    # See the Akka Documentation for more info about Extensions
    "extensions": [],
    # reference.conf: 13
    # Home directory of Akka, modules in the deploy directory will be loaded
    "home": "",
    # reference.conf: 504
    "io": {
      # reference.conf: 508
      # By default the select loops run on dedicated threads, hence using a
      # PinnedDispatcher
      "pinned-dispatcher": {
        # reference.conf: 510
        "executor": "thread-pool-executor",
        # reference.conf: 511
        "thread-pool-executor": {
          # reference.conf: 511
          "allow-core-pool-timeout": "off"
        },
        # reference.conf: 509
        "type": "PinnedDispatcher"
      },
      # reference.conf: 514
      "tcp": {
        # reference.conf: 536
        # The maximum number of connection that are accepted in one go,
        # higher numbers decrease latency, lower numbers increase fairness on
        # the worker-dispatcher
        "batch-accept-limit": 10,
        # reference.conf: 544
        # The maximal number of direct buffers kept in the direct buffer pool for
        # reuse.
        "direct-buffer-pool-limit": 1000,
        # reference.conf: 540
        # The number of bytes per direct buffer in the pool used to read or write
        # network data from the kernel.
        "direct-buffer-size": "128 KiB",
        # reference.conf: 574
        # Fully qualified config path which holds the dispatcher configuration
        # on which file IO tasks are scheduled
        "file-io-dispatcher": "akka.actor.default-dispatcher",
        # reference.conf: 582
        # The maximum number of bytes (or "unlimited") to transfer in one batch
        # when using `WriteFile` command which uses `FileChannel.transferTo` to
        # pipe files to a TCP socket. On some OS like Linux `FileChannel.transferTo`
        # may block for a long time when network IO is faster than file IO.
        # Decreasing the value may improve fairness while increasing may improve
        # throughput.
        "file-io-transferTo-limit": "512 KiB",
        # reference.conf: 587
        # The number of times to retry the `finishConnect` call after being notified about
        # OP_CONNECT. Retries are needed if the OP_CONNECT notification doesn't imply that
        # `finishConnect` will succeed, which is the case on Android.
        "finish-connect-retries": 5,
        # reference.conf: 570
        # Fully qualified config path which holds the dispatcher configuration
        # for the selector management actors
        "management-dispatcher": "akka.actor.default-dispatcher",
        # reference.conf: 526
        # Maximum number of open channels supported by this TCP module; there is
        # no intrinsic general limit, this setting is meant to enable DoS
        # protection by limiting the number of concurrently connected clients.
        # Also note that this is a "soft" limit; in certain cases the implementation
        # will accept a few connections more or a few less than the number configured
        # here. Must be an integer > 0 or "unlimited".
        "max-channels": 256000,
        # reference.conf: 553
        # The maximum number of bytes delivered by a `Received` message. Before
        # more data is read from the network the connection actor will try to
        # do other work.
        "max-received-message-size": "unlimited",
        # reference.conf: 518
        # The number of selectors to stripe the served channels over; each of
        # these will use one select loop on the selector-dispatcher.
        "nr-of-selectors": 1,
        # reference.conf: 548
        # The duration a connection actor waits for a `Register` message from
        # its commander before aborting the connection.
        "register-timeout": "5s",
        # reference.conf: 531
        # When trying to assign a new connection to a selector and the chosen
        # selector is at full capacity, retry selector choosing and assignment
        # this many times before giving up
        "selector-association-retries": 10,
        # reference.conf: 562
        # Fully qualified config path which holds the dispatcher configuration
        # to be used for running the select() calls in the selectors
        "selector-dispatcher": "akka.io.pinned-dispatcher",
        # reference.conf: 558
        # Enable fine grained logging of what goes on inside the implementation.
        # Be aware that this may log more than once per message sent to the actors
        # of the tcp implementation.
        "trace-logging": "off",
        # reference.conf: 566
        # Fully qualified config path which holds the dispatcher configuration
        # for the read/write worker actors
        "worker-dispatcher": "akka.actor.default-dispatcher"
      },
      # reference.conf: 590
      "udp": {
        # reference.conf: 626
        # The maximal number of direct buffers kept in the direct buffer pool for
        # reuse.
        "direct-buffer-pool-limit": 1000,
        # reference.conf: 622
        # The number of bytes per direct buffer in the pool used to read or write
        # network data from the kernel.
        "direct-buffer-size": "128 KiB",
        # reference.conf: 648
        # Fully qualified config path which holds the dispatcher configuration
        # for the selector management actors
        "management-dispatcher": "akka.actor.default-dispatcher",
        # reference.conf: 599
        # Maximum number of open channels supported by this UDP module Generally
        # UDP does not require a large number of channels, therefore it is
        # recommended to keep this setting low.
        "max-channels": 4096,
        # reference.conf: 594
        # The number of selectors to stripe the served channels over; each of
        # these will use one select loop on the selector-dispatcher.
        "nr-of-selectors": 1,
        # reference.conf: 618
        # The maximum number of datagrams that are read in one go,
        # higher numbers decrease latency, lower numbers increase fairness on
        # the worker-dispatcher
        "receive-throughput": 3,
        # reference.conf: 631
        # The maximum number of bytes delivered by a `Received` message. Before
        # more data is read from the network the connection actor will try to
        # do other work.
        "received-message-size-limit": "unlimited",
        # reference.conf: 608
        # The select loop can be used in two modes:
        # - setting "infinite" will select without a timeout, hogging a thread
        # - setting a positive timeout will do a bounded select call,
        #   enabling sharing of a single thread between multiple selectors
        #   (in this case you will have to use a different configuration for the
        #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
        # - setting it to zero means polling, i.e. calling selectNow()
        "select-timeout": "infinite",
        # reference.conf: 613
        # When trying to assign a new connection to a selector and the chosen
        # selector is at full capacity, retry selector choosing and assignment
        # this many times before giving up
        "selector-association-retries": 10,
        # reference.conf: 640
        # Fully qualified config path which holds the dispatcher configuration
        # to be used for running the select() calls in the selectors
        "selector-dispatcher": "akka.io.pinned-dispatcher",
        # reference.conf: 636
        # Enable fine grained logging of what goes on inside the implementation.
        # Be aware that this may log more than once per message sent to the actors
        # of the tcp implementation.
        "trace-logging": "off",
        # reference.conf: 644
        # Fully qualified config path which holds the dispatcher configuration
        # for the read/write worker actors
        "worker-dispatcher": "akka.actor.default-dispatcher"
      },
      # reference.conf: 651
      "udp-connected": {
        # reference.conf: 687
        # The maximal number of direct buffers kept in the direct buffer pool for
        # reuse.
        "direct-buffer-pool-limit": 1000,
        # reference.conf: 683
        # The number of bytes per direct buffer in the pool used to read or write
        # network data from the kernel.
        "direct-buffer-size": "128 KiB",
        # reference.conf: 709
        # Fully qualified config path which holds the dispatcher configuration
        # for the selector management actors
        "management-dispatcher": "akka.actor.default-dispatcher",
        # reference.conf: 660
        # Maximum number of open channels supported by this UDP module Generally
        # UDP does not require a large number of channels, therefore it is
        # recommended to keep this setting low.
        "max-channels": 4096,
        # reference.conf: 655
        # The number of selectors to stripe the served channels over; each of
        # these will use one select loop on the selector-dispatcher.
        "nr-of-selectors": 1,
        # reference.conf: 679
        # The maximum number of datagrams that are read in one go,
        # higher numbers decrease latency, lower numbers increase fairness on
        # the worker-dispatcher
        "receive-throughput": 3,
        # reference.conf: 692
        # The maximum number of bytes delivered by a `Received` message. Before
        # more data is read from the network the connection actor will try to
        # do other work.
        "received-message-size-limit": "unlimited",
        # reference.conf: 669
        # The select loop can be used in two modes:
        # - setting "infinite" will select without a timeout, hogging a thread
        # - setting a positive timeout will do a bounded select call,
        #   enabling sharing of a single thread between multiple selectors
        #   (in this case you will have to use a different configuration for the
        #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
        # - setting it to zero means polling, i.e. calling selectNow()
        "select-timeout": "infinite",
        # reference.conf: 674
        # When trying to assign a new connection to a selector and the chosen
        # selector is at full capacity, retry selector choosing and assignment
        # this many times before giving up
        "selector-association-retries": 10,
        # reference.conf: 701
        # Fully qualified config path which holds the dispatcher configuration
        # to be used for running the select() calls in the selectors
        "selector-dispatcher": "akka.io.pinned-dispatcher",
        # reference.conf: 697
        # Enable fine grained logging of what goes on inside the implementation.
        # Be aware that this may log more than once per message sent to the actors
        # of the tcp implementation.
        "trace-logging": "off",
        # reference.conf: 705
        # Fully qualified config path which holds the dispatcher configuration
        # for the read/write worker actors
        "worker-dispatcher": "akka.actor.default-dispatcher"
      }
    },
    # reference.conf: 60
    # JVM shutdown, System.exit(-1), in case of a fatal error,
    # such as OutOfMemoryError
    "jvm-exit-on-fatal-error": "on",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 5
    "log-config-on-start": "on",
    # reference.conf: 43
    # Log at info level when messages are sent to dead letters.
    # Possible values:
    # on: all dead letters are logged
    # off: no logging of dead letters
    # n: positive integer, number of dead letters that will be logged
    "log-dead-letters": 10,
    # reference.conf: 48
    # Possibility to turn off logging of dead letters while the actor system
    # is shutting down. Logging is only done when enabled by 'log-dead-letters'
    # setting.
    "log-dead-letters-during-shutdown": "on",
    # reference.conf: 22
    # Loggers are created and registered synchronously during ActorSystem
    # start-up, and since they are actors, this timeout is used to bound the
    # waiting time
    "logger-startup-timeout": "5s",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 3
    # Use Play’s logging engine
    "loggers": [
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 3
      "akka.event.slf4j.Slf4jLogger"
    ],
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/akka.conf: 4
    "loglevel": "DEBUG",
    # reference.conf: 469
    # Used to set the behavior of the scheduler.
    # Changing the default values may change the system behavior drastically so make
    # sure you know what you're doing! See the Scheduler section of the Akka
    # Documentation for more details.
    "scheduler": {
      # reference.conf: 495
      # This setting selects the timer implementation which shall be loaded at
      # system start-up.
      # The class given here must implement the akka.actor.Scheduler interface
      # and offer a public constructor which takes three arguments:
      #  1) com.typesafe.config.Config
      #  2) akka.event.LoggingAdapter
      #  3) java.util.concurrent.ThreadFactory
      "implementation": "akka.actor.LightArrayRevolverScheduler",
      # reference.conf: 501
      # When shutting down the scheduler, there will typically be a thread which
      # needs to be stopped, and this timeout determines how long to wait for
      # that to happen. In case of timeout the shutdown of the actor system will
      # proceed without running possibly still enqueued tasks.
      "shutdown-timeout": "5s",
      # reference.conf: 479
      # The LightArrayRevolverScheduler is used as the default scheduler in the
      # system. It does not execute the scheduled tasks on exact time, but on every
      # tick, it will run everything that is (over)due. You can increase or decrease
      # the accuracy of the execution timing by specifying smaller or larger tick
      # duration. If you are scheduling a lot of tasks you should consider increasing
      # the ticks per wheel.
      # Note that it might take up to 1 tick to stop the Timer, so setting the
      # tick-duration to a high value will make shutting down the actor system
      # take longer.
      "tick-duration": "10ms",
      # reference.conf: 486
      # The timer uses a circular wheel of buckets to store the timer tasks.
      # This should be set such that the majority of scheduled timeouts (for high
      # scheduling frequency) will be shorter than one rotation of the wheel
      # (ticks-per-wheel * ticks-duration)
      # THIS MUST BE A POWER OF TWO!
      "ticks-per-wheel": 512
    },
    # reference.conf: 32
    # Log level for the very basic logger activated during ActorSystem startup.
    # This logger prints the log messages to stdout (System.out).
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    "stdout-loglevel": "WARNING",
    # reference.conf: 10
    # Akka version, checked against the runtime version of Akka.
    "version": "2.3.3"
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 15-19
  "application": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 19
    # The application languages
    # ~~~~~
    "langs": "fr, en",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 15
    # Secret key
    # ~~~~~
    # The secret key is used to secure cryptographics functions.
    #
    # This must be changed for production, but we recommend not changing it in this file.
    #
    # See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
    "secret": "<SPkI<rCaBN0qZ_5Y63@/4swP^0[tef?x`rdpMHlUp@ZGJAL85;S1U_3xJ9KV7@>"
  },
  # system properties
  "awt": {
    # system properties
    "toolkit": "sun.awt.X11.XToolkit"
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 43-46
  "db": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 43-46
    "default": {
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 43
      # Database configuration
      # ~~~~~
      # You can declare as many datasources as you want.
      # By convention, the default datasource is named `default`
      #
      "driver": "org.h2.Driver",
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 46
      "password": "",
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 44
      "url": "jdbc:h2:mem:play",
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 45
      "user": "sa"
    }
  },
  # system properties
  "file": {
    # system properties
    "encoding": {
      # system properties
      "pkg": "sun.io"
    },
    # system properties
    "separator": "/"
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/github.conf: 2-3
  "github": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/github.conf: 2-3
    "client": {
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/github.conf: 2
      # # Github Credentials
      "id": "fa71bc86ca0ccf12d408",
      # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/github.conf: 3
      "secret": "77145341d407a2f2600ec3a06bc9a702dc4fb57f"
    }
  },
  # system properties
  "java": {
    # system properties
    "awt": {
      # system properties
      "graphicsenv": "sun.awt.X11GraphicsEnvironment",
      # system properties
      "printerjob": "sun.print.PSPrinterJob"
    },
    # system properties
    "class": {
      # system properties
      "path": "/home/Jules/Scala/activator-1.2.2-minimal/activator-launch-1.2.2.jar",
      # system properties
      "version": "51.0"
    },
    # system properties
    "endorsed": {
      # system properties
      "dirs": "/usr/java/jdk1.7.0_55/jre/lib/endorsed"
    },
    # system properties
    "ext": {
      # system properties
      "dirs": "/usr/java/jdk1.7.0_55/jre/lib/ext:/usr/java/packages/lib/ext"
    },
    # system properties
    "home": "/usr/java/jdk1.7.0_55/jre",
    # system properties
    "io": {
      # system properties
      "tmpdir": "/tmp"
    },
    # system properties
    "library": {
      # system properties
      "path": "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib:/home/Jules/IAGL/workspace/Github_Issues_Dashboard/target/native_libraries/64bits"
    },
    # system properties
    "runtime": {
      # system properties
      "name": "Java(TM) SE Runtime Environment",
      # system properties
      "version": "1.7.0_55-b13"
    },
    # system properties
    "specification": {
      # system properties
      "name": "Java Platform API Specification",
      # system properties
      "vendor": "Oracle Corporation",
      # system properties
      "version": "1.7"
    },
    # system properties
    "vendor": {
      # system properties
      "url": {
        # system properties
        "bug": "http://bugreport.sun.com/bugreport/"
      }
    },
    # system properties
    "version": "1.7.0_55",
    # system properties
    "vm": {
      # system properties
      "info": "mixed mode",
      # system properties
      "name": "Java HotSpot(TM) 64-Bit Server VM",
      # system properties
      "specification": {
        # system properties
        "name": "Java Virtual Machine Specification",
        # system properties
        "vendor": "Oracle Corporation",
        # system properties
        "version": "1.7"
      },
      # system properties
      "vendor": "Oracle Corporation",
      # system properties
      "version": "24.55-b03"
    }
  },
  # system properties
  "jline": {
    # system properties
    "esc": {
      # system properties
      "timeout": "0"
    },
    # system properties
    "shutdownhook": "false"
  },
  # system properties
  "line": {
    # system properties
    "separator": "\n"
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 63-71
  "logger": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 71
    "akka": "DEBUG",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 69
    # Logger provided to your application:
    "application": "DEBUG",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 66
    # Logger used by the framework:
    "play": "INFO",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 63
    # Root logger:
    "root": "ERROR"
  },
  # system properties
  "os": {
    # system properties
    "arch": "amd64",
    # system properties
    "name": "Linux",
    # system properties
    "version": "3.14.7-200.fc20.x86_64"
  },
  # system properties
  "path": {
    # system properties
    "separator": ":"
  },
  # reference.conf: 10
  "play": {
    # reference.conf: 12
    "akka": {
      # reference.conf: 16
      "actor": {
        # reference.conf: 19
        "default-dispatcher": {
          # reference.conf: 20
          "fork-join-executor": {
            # reference.conf: 21
            "parallelism-factor": 1,
            # reference.conf: 22
            "parallelism-max": 24
          }
        },
        # reference.conf: 17
        "retrieveBodyParserTimeout": "1 second"
      },
      # reference.conf: 13
      "loggers": [
        # reference.conf: 13
        "akka.event.Logging$DefaultLogger",
        # reference.conf: 13
        "akka.event.slf4j.Slf4jLogger"
      ],
      # reference.conf: 14
      "loglevel": "WARNING"
    }
  },
  # reference.conf: 8
  "promise": {
    # reference.conf: 8
    "akka": {
      # reference.conf: 8
      "actor": {
        # reference.conf: 8
        "typed": {
          # reference.conf: 8
          # default timeout for promises
          "timeout": "5s"
        }
      }
    }
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/redis.conf: 2-3
  "redis": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/redis.conf: 2
    # # Redis configuration
    "host": "localhost",
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/redis.conf: 3
    "port": 6379
  },
  # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 50
  "slick": {
    # /home/Jules/IAGL/workspace/Github_Issues_Dashboard/conf/application.conf: 50
    # Slick configuration
    # ~~~~~
    "default": "models.*"
  },
  # system properties
  "sun": {
    # system properties
    "arch": {
      # system properties
      "data": {
        # system properties
        "model": "64"
      }
    },
    # system properties
    "boot": {
      # system properties
      "class": {
        # system properties
        "path": "/usr/java/jdk1.7.0_55/jre/lib/resources.jar:/usr/java/jdk1.7.0_55/jre/lib/rt.jar:/usr/java/jdk1.7.0_55/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_55/jre/lib/jsse.jar:/usr/java/jdk1.7.0_55/jre/lib/jce.jar:/usr/java/jdk1.7.0_55/jre/lib/charsets.jar:/usr/java/jdk1.7.0_55/jre/lib/jfr.jar:/usr/java/jdk1.7.0_55/jre/classes"
      },
      # system properties
      "library": {
        # system properties
        "path": "/usr/java/jdk1.7.0_55/jre/lib/amd64"
      }
    },
    # system properties
    "cpu": {
      # system properties
      "endian": "little",
      # system properties
      "isalist": ""
    },
    # system properties
    "desktop": "gnome",
    # system properties
    "io": {
      # system properties
      "unicode": {
        # system properties
        "encoding": "UnicodeLittle"
      }
    },
    # system properties
    "java": {
      # system properties
      "command": "/home/Jules/Scala/activator-1.2.2-minimal/activator-launch-1.2.2.jar",
      # system properties
      "launcher": "SUN_STANDARD"
    },
    # system properties
    "jnu": {
      # system properties
      "encoding": "UTF-8"
    },
    # system properties
    "management": {
      # system properties
      "compiler": "HotSpot 64-Bit Tiered Compilers"
    },
    # system properties
    "nio": {
      # system properties
      "ch": {
        # system properties
        "bugLevel": ""
      }
    },
    # system properties
    "os": {
      # system properties
      "patch": {
        # system properties
        "level": "unknown"
      }
    }
  },
  # system properties
  "user": {
    # system properties
    "country": "FR",
    # system properties
    "dir": "/home/Jules/IAGL/workspace/Github_Issues_Dashboard",
    # system properties
    "home": "/home/Jules",
    # system properties
    "language": "fr",
    # system properties
    "name": "Jules",
    # system properties
    "timezone": "Europe/Paris"
  }
}
