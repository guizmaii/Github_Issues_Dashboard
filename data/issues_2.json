[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/61",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/61/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/61/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/61/events",
  "html_url" : "https://github.com/junit-team/junit/issues/61",
  "id" : 93881,
  "number" : 61,
  "title" : "Categories don't work on classes",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2009-12-08T02:10:27Z",
  "updated_at" : "2009-12-08T20:11:55Z",
  "closed_at" : "2009-12-08T20:11:55Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/62",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/62/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/62/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/62/events",
  "html_url" : "https://github.com/junit-team/junit/issues/62",
  "id" : 94397,
  "number" : 62,
  "title" : "Missing Warnings for Theories",
  "user" : {
    "login" : "notnoop",
    "id" : 136429,
    "avatar_url" : "https://avatars.githubusercontent.com/u/136429?",
    "gravatar_id" : "8716def45299b7028b85f3f95a15f15a",
    "url" : "https://api.github.com/users/notnoop",
    "html_url" : "https://github.com/notnoop",
    "followers_url" : "https://api.github.com/users/notnoop/followers",
    "following_url" : "https://api.github.com/users/notnoop/following{/other_user}",
    "gists_url" : "https://api.github.com/users/notnoop/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/notnoop/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/notnoop/subscriptions",
    "organizations_url" : "https://api.github.com/users/notnoop/orgs",
    "repos_url" : "https://api.github.com/users/notnoop/repos",
    "events_url" : "https://api.github.com/users/notnoop/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/notnoop/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2009-12-08T21:39:02Z",
  "updated_at" : "2012-11-16T18:40:06Z",
  "closed_at" : "2012-11-16T18:40:06Z",
  "body" : "Theories runner warn if @DataPoint targets an instance field (as opposed to a static field) with an Error (\"DataPoint field f must be static).\r\n\r\nHowever, if @DataPoint targets a non-public field, the field is ignored silently.  In the following test junit runner ignores `ignoredSilently` nonpublic static field:\r\n\r\n    @RunWith(Theories.class)\r\n    public class TestTheory1 {\r\n        @DataPoint static String ignoredSilently = null;\r\n        @DataPoint public static String field = \"m\";\r\n        @Theory public void nonNull(String s) { Assert.assertNotNull(s); }\r\n    }\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/63",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/63/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/63/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/63/events",
  "html_url" : "https://github.com/junit-team/junit/issues/63",
  "id" : 94946,
  "number" : 63,
  "title" : "README.html is stuck at 4.6",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-12-09T19:18:34Z",
  "updated_at" : "2011-03-02T14:22:52Z",
  "closed_at" : "2011-03-02T14:22:52Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/64",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/64/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/64/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/64/events",
  "html_url" : "https://github.com/junit-team/junit/issues/64",
  "id" : 95229,
  "number" : 64,
  "title" : "Theories doesn't honor parameterized types",
  "user" : {
    "login" : "notnoop",
    "id" : 136429,
    "avatar_url" : "https://avatars.githubusercontent.com/u/136429?",
    "gravatar_id" : "8716def45299b7028b85f3f95a15f15a",
    "url" : "https://api.github.com/users/notnoop",
    "html_url" : "https://github.com/notnoop",
    "followers_url" : "https://api.github.com/users/notnoop/followers",
    "following_url" : "https://api.github.com/users/notnoop/following{/other_user}",
    "gists_url" : "https://api.github.com/users/notnoop/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/notnoop/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/notnoop/subscriptions",
    "organizations_url" : "https://api.github.com/users/notnoop/orgs",
    "repos_url" : "https://api.github.com/users/notnoop/repos",
    "events_url" : "https://api.github.com/users/notnoop/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/notnoop/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 18,
  "created_at" : "2009-12-10T07:46:16Z",
  "updated_at" : "2014-04-03T20:26:52Z",
  "closed_at" : null,
  "body" : "When generating parameter lists from field DataPoints, only the raw type gets considered, not the generic type.\r\n\r\nConsider the following failing test:\r\n    @RunWith(Theories.class)\r\n    public class TheoryGenerics {\r\n        @DataPoint public static List<String> strings = Arrays.asList(\"what\");\r\n        @DataPoint public static List<Integer> ints = Arrays.asList(1);\r\n    \r\n        @Theory\r\n        public void regex(List<String> strings, List<Integer> ints) {\r\n            Assert.assertThat(strings.get(0), Is.is(String.class));\r\n            Assert.assertThat(ints.get(0), Is.is(Integer.class));\r\n        }\r\n    }\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/65",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/65/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/65/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/65/events",
  "html_url" : "https://github.com/junit-team/junit/issues/65",
  "id" : 95232,
  "number" : 65,
  "title" : "Theories could use DataPoint naming",
  "user" : {
    "login" : "notnoop",
    "id" : 136429,
    "avatar_url" : "https://avatars.githubusercontent.com/u/136429?",
    "gravatar_id" : "8716def45299b7028b85f3f95a15f15a",
    "url" : "https://api.github.com/users/notnoop",
    "html_url" : "https://github.com/notnoop",
    "followers_url" : "https://api.github.com/users/notnoop/followers",
    "following_url" : "https://api.github.com/users/notnoop/following{/other_user}",
    "gists_url" : "https://api.github.com/users/notnoop/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/notnoop/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/notnoop/subscriptions",
    "organizations_url" : "https://api.github.com/users/notnoop/orgs",
    "repos_url" : "https://api.github.com/users/notnoop/repos",
    "events_url" : "https://api.github.com/users/notnoop/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/notnoop/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2009-12-10T07:57:28Z",
  "updated_at" : "2013-10-10T22:13:50Z",
  "closed_at" : "2013-10-10T22:13:50Z",
  "body" : "It'll be great to be able to filter through possible data points by name, in addition to the Java type.  String types are commonly used for various purposes.\r\n\r\nConsider the following use case.\r\n\r\n    @RunWith(Theories.class)\r\n    public class DataPointNames {\r\n        @DataPoint public static String regex1 = \".*\";\r\n        @DataPoint public static String sample1 = \"(\";\r\n    \r\n        @Theory\r\n        public void consistentMatcher(String regex, String input) {\r\n            assumeThat(input, isRegex());\r\n            boolean a = input.matches(regex);\r\n            boolean b = Pattern.matches(regex, input);\r\n            Assert.assertEquals(a, b);\r\n        }\r\n    }\r\n\r\nIt'll be great if we can express it as:\r\n\r\n    @RunWith(Theories.class)\r\n    public class DataPointNames {\r\n        @DataPoint(\"regex\") public static String regex1 = \".*\";\r\n        @DataPoint(\"input\") public static String sample1 = \"(\";\r\n    \r\n        @Theory\r\n        public void consistentMatcher(\r\n                @DataPoint(\"regex\") String regex,\r\n                @DataPoint(\"input\") String input) {\r\n            boolean a = input.matches(regex);\r\n            boolean b = Pattern.matches(regex, input);\r\n            Assert.assertEquals(a, b);\r\n        }\r\n    }\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/66",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/66/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/66/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/66/events",
  "html_url" : "https://github.com/junit-team/junit/issues/66",
  "id" : 95322,
  "number" : 66,
  "title" : "Take over maintenance of the maven repo?",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 24,
  "created_at" : "2009-12-10T14:00:37Z",
  "updated_at" : "2010-11-20T11:02:02Z",
  "closed_at" : "2010-11-20T02:01:17Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/67",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/67/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/67/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/67/events",
  "html_url" : "https://github.com/junit-team/junit/issues/67",
  "id" : 96539,
  "number" : 67,
  "title" : "@since missing from JUnit javadocs",
  "user" : {
    "login" : "bshannon",
    "id" : 166819,
    "avatar_url" : "https://avatars.githubusercontent.com/u/166819?",
    "gravatar_id" : "08ae160ed6a6351af0962b9164117042",
    "url" : "https://api.github.com/users/bshannon",
    "html_url" : "https://github.com/bshannon",
    "followers_url" : "https://api.github.com/users/bshannon/followers",
    "following_url" : "https://api.github.com/users/bshannon/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bshannon/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bshannon/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bshannon/subscriptions",
    "organizations_url" : "https://api.github.com/users/bshannon/orgs",
    "repos_url" : "https://api.github.com/users/bshannon/repos",
    "events_url" : "https://api.github.com/users/bshannon/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bshannon/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/javadoc",
    "name" : "javadoc",
    "color" : "e102d8"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-12-13T01:57:48Z",
  "updated_at" : "2012-06-08T06:21:33Z",
  "closed_at" : "2012-06-08T06:21:33Z",
  "body" : "The JUnit javadocs are missing the @since entries that tell when an API is added.\r\nThis is especially important when viewing the javadocs on the web; you need to know\r\nwhich minimum version of JUnit to request with Maven to get the API you're looking at.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/68",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/68/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/68/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/68/events",
  "html_url" : "https://github.com/junit-team/junit/issues/68",
  "id" : 98660,
  "number" : 68,
  "title" : "Incorporate krosenvold's ResultConcurrencyTest patch?",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-12-16T19:43:26Z",
  "updated_at" : "2011-03-02T14:24:36Z",
  "closed_at" : "2011-03-02T14:24:36Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/69",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/69/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/69/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/69/events",
  "html_url" : "https://github.com/junit-team/junit/issues/69",
  "id" : 98750,
  "number" : 69,
  "title" : "Global rules",
  "user" : {
    "login" : "brolund",
    "id" : 87684,
    "avatar_url" : "https://avatars.githubusercontent.com/u/87684?",
    "gravatar_id" : "58d99e391130383a77a54785f306da0e",
    "url" : "https://api.github.com/users/brolund",
    "html_url" : "https://github.com/brolund",
    "followers_url" : "https://api.github.com/users/brolund/followers",
    "following_url" : "https://api.github.com/users/brolund/following{/other_user}",
    "gists_url" : "https://api.github.com/users/brolund/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/brolund/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/brolund/subscriptions",
    "organizations_url" : "https://api.github.com/users/brolund/orgs",
    "repos_url" : "https://api.github.com/users/brolund/repos",
    "events_url" : "https://api.github.com/users/brolund/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/brolund/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2009-12-16T22:24:29Z",
  "updated_at" : "2012-05-31T18:42:17Z",
  "closed_at" : "2012-05-31T18:42:17Z",
  "body" : "\"Global rules\" are rules that are declared in one place and applied to all test cases/tests/suites in a test run.\r\n\r\n\"One place\" could be a properties file, named by convention, e.g. \"/global-junit-rules.properties\", or they could be declared in a test suite and propagated (see http://github.com/KentBeck/junit/issues#issue/40), or in some other way.\r\n\r\nFrom forum thread\r\nhttp://tech.groups.yahoo.com/group/junit/message/22133\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/70",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/70/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/70/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/70/events",
  "html_url" : "https://github.com/junit-team/junit/issues/70",
  "id" : 99768,
  "number" : 70,
  "title" : "Why are negative votes accumulating?",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-12-18T14:57:16Z",
  "updated_at" : "2011-03-02T14:25:44Z",
  "closed_at" : "2011-03-02T14:25:44Z",
  "body" : "See conversation on http://github.com/KentBeck/junit/issues/#issue/69"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/71",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/71/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/71/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/71/events",
  "html_url" : "https://github.com/junit-team/junit/issues/71",
  "id" : 109395,
  "number" : 71,
  "title" : "Optimize, or delete, the sourceforge project page.",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/lowhanging",
    "name" : "lowhanging",
    "color" : "d4c5f9"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 12,
  "created_at" : "2010-01-08T19:20:11Z",
  "updated_at" : "2014-03-26T08:43:04Z",
  "closed_at" : null,
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/72",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/72/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/72/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/72/events",
  "html_url" : "https://github.com/junit-team/junit/issues/72",
  "id" : 111232,
  "number" : 72,
  "title" : "Parametarized runner should have a way of supplying a description string per test",
  "user" : {
    "login" : "ghost",
    "id" : 10137,
    "avatar_url" : "https://avatars.githubusercontent.com/u/10137?",
    "gravatar_id" : "ac0c4949f8df628b3f77a42a3b814c4d",
    "url" : "https://api.github.com/users/ghost",
    "html_url" : "https://github.com/ghost",
    "followers_url" : "https://api.github.com/users/ghost/followers",
    "following_url" : "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ghost/subscriptions",
    "organizations_url" : "https://api.github.com/users/ghost/orgs",
    "repos_url" : "https://api.github.com/users/ghost/repos",
    "events_url" : "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ghost/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2010-01-12T10:07:15Z",
  "updated_at" : "2012-05-31T17:26:33Z",
  "closed_at" : "2012-05-31T17:26:33Z",
  "body" : "At the moment, a slight problem with the Parametarized runner is that when you run one, all you see in the junit sidebar in eclipse for each execution of the test method is the array index the parameters came from.\r\n\r\nWhilst it's true that you can make each test system.out.println a more useful description of itself, it would be good to have some way of providing a string per test to be printed next to the array index.\r\n\r\nSuggestion: make a new runner, DescriptiveParametarized, where the toString() of the first object in the parameters list is printed next to the array index for each test, and this object is not passed to the test constructor.\r\n\r\nIf nobody thinks this idea is crazy, I'm happy to attempt a patch."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/73",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/73/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/73/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/73/events",
  "html_url" : "https://github.com/junit-team/junit/issues/73",
  "id" : 116506,
  "number" : 73,
  "title" : "can't run with two runners",
  "user" : {
    "login" : "bshannon",
    "id" : 166819,
    "avatar_url" : "https://avatars.githubusercontent.com/u/166819?",
    "gravatar_id" : "08ae160ed6a6351af0962b9164117042",
    "url" : "https://api.github.com/users/bshannon",
    "html_url" : "https://github.com/bshannon",
    "followers_url" : "https://api.github.com/users/bshannon/followers",
    "following_url" : "https://api.github.com/users/bshannon/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bshannon/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bshannon/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bshannon/subscriptions",
    "organizations_url" : "https://api.github.com/users/bshannon/orgs",
    "repos_url" : "https://api.github.com/users/bshannon/repos",
    "events_url" : "https://api.github.com/users/bshannon/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bshannon/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-01-20T17:02:30Z",
  "updated_at" : "2014-02-12T15:32:28Z",
  "closed_at" : "2010-05-04T02:33:36Z",
  "body" : "I created a Suite that allows me to run tests in a separate class loader.\r\nI use it like this:\r\n\r\n@RunWith(ClassLoaderSuite.class)\r\n@SuiteClasses({ MyTest1.class, MyTest2.class })\r\n@TestClass(ClassToTest.class)\r\npublic class MyTestSuite {\r\n}\r\n\r\nIf I want one of those tests to be parameterized, should I expect to\r\nbe able to do:\r\n\r\n@RunWith(Parameterized.class)\r\npublic class MyTest1 {\r\n...\r\n}\r\n\r\nIt doesn't seem to work.\r\n\r\nWhat would I have to do in ClassLoaderSuite to make this work?\r\n\r\nFYI, you can find ClassLoaderSuite.java at:\r\nhttp://kenai.com/projects/javamail/sources/mercurial/content/mail/src/test/java/com/sun/mail/test/ClassLoaderSuite.java?rev=231\r\n\r\nHere's how to reproduce the problem using JavaMail:\r\n\r\nYou can find JavaMail at http://kenai.com/projects/javamail.\r\nYou'll need to check out the source code using Mercurial.\r\nYou'll find instruction here:\r\nhttp://kenai.com/projects/javamail/pages/BuildInstructions\r\n\r\nMost of the tests are in the workspace at\r\nmail/src/test/java/javax/mail/internet.\r\n\r\nHere's what I did to test this...\r\n\r\nInternetAddressTest.java is a parameterized test.  Copy it to IA.java,\r\nthen change IA.java so that all instances of \"InternetAddressTest\"\r\nare changed to \"IA\".  Edit the constructor or the data() method to\r\ninclude a println so you can see when the test is actually being run.\r\n\r\nParameterListTestSuite.java uses my ClassLoaderSuite, and contains a\r\nlist of tests to run in a separate class loader.  Edit it and add\r\nIA.class to the list.\r\n\r\nNow run \"mvn\" in the \"mail\" directory.  The IA.java test won't\r\nbe run.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/74",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/74/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/74/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/74/events",
  "html_url" : "https://github.com/junit-team/junit/issues/74",
  "id" : 117414,
  "number" : 74,
  "title" : "Categories + Parameterized",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2010-01-21T20:44:33Z",
  "updated_at" : "2014-02-12T15:32:11Z",
  "closed_at" : "2011-09-16T14:17:04Z",
  "body" : "Hi,\r\nI am trying to use the new experimental Categories Feature. Unfortunately it doesn't seem to be compatible with Parameterized Tests. I run the following in eclipse, but since these are\r\n \r\nWhen defining  Tests and TestSuite as below, the execution of the suite results in errors/failures. The exact error depends on the order in which the tests are specified in the Suite (see below).\r\n \r\nSo I guess my points/ questions are:\r\n- The behavior of a TestSuite should not depend on the order of contained Tests\r\n- If a Runner isn't supported by a Suite Runner, this should result in an instructive error message\r\n- Is there a Category compatible version of the Parameterized runner?\r\n \r\nThanx\r\nJens\r\n \r\n \r\n \r\nWith the normal Test first I get this call stack on the console:\r\n \r\nJUnit version 4.8.1\r\nException in thread \"main\" java.lang.NullPointerException\r\n at org.junit.runner.Description.createSuiteDescription(Description.java:\r\n72)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.parentDes\r\ncription(Categories.java:127)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.categorie\r\ns(Categories.java:121)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.hasCorrec\r\ntCategoryAnnotation(Categories.java:106)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.shouldRun\r\n(Categories.java:97)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.shouldRun\r\n(Categories.java:100)\r\n at org.junit.runners.ParentRunner.shouldRun(ParentRunner.java:299)\r\n at org.junit.runners.ParentRunner.getFilteredChildren(ParentRunner.java:\r\n277)\r\n at org.junit.runners.ParentRunner.getDescription(ParentRunner.java:225)\r\n at org.junit.runners.Suite.describeChild(Suite.java:123)\r\n at org.junit.runners.Suite.describeChild(Suite.java:24)\r\n at org.junit.runners.ParentRunner.getDescription(ParentRunner.java:226)\r\n at org.junit.runner.JUnitCore.run(JUnitCore.java:156)\r\n at org.junit.runner.JUnitCore.run(JUnitCore.java:136)\r\n at org.junit.runner.JUnitCore.run(JUnitCore.java:117)\r\n at org.junit.runner.JUnitCore.runMain(JUnitCore.java:98)\r\n at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:53)\r\n at org.junit.runner.JUnitCore.main(JUnitCore.java:45)\r\n \r\n------------------------------------------------------------------------------------\r\nWith the Parameterized Test first, I get a Failure Trace (which also isn't very instructive):\r\n \r\nJUnit version 4.8.1\r\n.E\r\nTime: 0,006\r\nThere was 1 failure:\r\n1) initializationError(de.schauderhaft.junit.categories.ParameterTokenSuite)\r\njava.lang.NullPointerException\r\n at org.junit.runner.Description.createSuiteDescription(Description.java:\r\n72)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.parentDes\r\ncription(Categories.java:127)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.categorie\r\ns(Categories.java:121)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.hasCorrec\r\ntCategoryAnnotation(Categories.java:106)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.shouldRun\r\n(Categories.java:97)\r\n at org.junit.experimental.categories.Categories$CategoryFilter.shouldRun\r\n(Categories.java:100)\r\n at org.junit.runners.ParentRunner.shouldRun(ParentRunner.java:299)\r\n at org.junit.runners.ParentRunner.filter(ParentRunner.java:254)\r\n at org.junit.experimental.categories.Categories.(Categories.java:1\r\n42)\r\n at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Sou\r\nrce)\r\n at java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBui\r\nlder.java:35)\r\n at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(Annotated\r\nBuilder.java:24)\r\n at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilde\r\nr.java:57)\r\n at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForC\r\nlass(AllDefaultPossibilitiesBuilder.java:29)\r\n at org.junit.runner.Computer.getRunner(Computer.java:38)\r\n at org.junit.runner.Computer$1.runnerForClass(Computer.java:29)\r\n at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilde\r\nr.java:57)\r\n at org.junit.runners.model.RunnerBuilder.runners(RunnerBuilder.java:93)\r\n at org.junit.runners.model.RunnerBuilder.runners(RunnerBuilder.java:84)\r\n at org.junit.runners.Suite.(Suite.java:79)\r\n at org.junit.runner.Computer.getSuite(Computer.java:26)\r\n at org.junit.runner.Request.classes(Request.java:69)\r\n at org.junit.runner.JUnitCore.run(JUnitCore.java:117)\r\n at org.junit.runner.JUnitCore.runMain(JUnitCore.java:98)\r\n at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:53)\r\n at org.junit.runner.JUnitCore.main(JUnitCore.java:45)\r\nFAILURES!!!\r\nTests run: 1,  Failures: 1\r\n \r\n \r\nClass Definitions ------------------------------------------------------------------------------------\r\n \r\npackage de.schauderhaft.junit.categories;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.junit.runners.Parameterized;\r\nimport org.junit.runners.Parameterized.Parameters;\r\n@RunWith(Parameterized.class)\r\npublic class ParameterizedTestA {\r\npublic ParameterizedTestA(String a) {\r\n }\r\n@Parameters\r\n public static Collection getParameters() {\r\n return Collections.singletonList(new String[] { \"a\" });\r\n }\r\n@Test\r\n public void testSomething() {\r\n Assert.assertTrue(true);\r\n }\r\n------------------------------------------------------------------------------------\r\npackage de.schauderhaft.junit.categories;\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\nimport org.junit.experimental.categories.Category;\r\n@Category(Token.class)\r\npublic class SomeTestB {\r\n@Test\r\n public void testSomething() {\r\n Assert.assertTrue(true);\r\n }\r\n}\r\n \r\n------------------------------------------------------------------------------------\r\n\r\npackage de.schauderhaft.junit.categories;\r\nimport org.junit.experimental.categories.Categories;\r\nimport org.junit.experimental.categories.Categories.IncludeCategory;\r\nimport org.junit.runner.RunWith;\r\nimport org.junit.runners.Suite.SuiteClasses;\r\n@RunWith(Categories.class)\r\n@IncludeCategory(Token.class)\r\n@SuiteClasses( { SomeTestB.class, ParameterizedTestA.class }) // switch order of classes for slightly different behaviour\r\npublic class ParameterTokenSuite {\r\n}\r\n \r\n}\r\n------------------------------------------------------------------------------------\r\n \r\n \r\n\r\n--"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/75",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/75/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/75/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/75/events",
  "html_url" : "https://github.com/junit-team/junit/issues/75",
  "id" : 117917,
  "number" : 75,
  "title" : "junit-4.8.1 is missing in the central Maven repository",
  "user" : {
    "login" : "aradzie",
    "id" : 44386,
    "avatar_url" : "https://avatars.githubusercontent.com/u/44386?",
    "gravatar_id" : "1b62bd461e3970c8c4103e13eb5af98f",
    "url" : "https://api.github.com/users/aradzie",
    "html_url" : "https://github.com/aradzie",
    "followers_url" : "https://api.github.com/users/aradzie/followers",
    "following_url" : "https://api.github.com/users/aradzie/following{/other_user}",
    "gists_url" : "https://api.github.com/users/aradzie/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/aradzie/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/aradzie/subscriptions",
    "organizations_url" : "https://api.github.com/users/aradzie/orgs",
    "repos_url" : "https://api.github.com/users/aradzie/repos",
    "events_url" : "https://api.github.com/users/aradzie/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/aradzie/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-01-22T16:02:02Z",
  "updated_at" : "2011-03-02T20:18:27Z",
  "closed_at" : "2011-03-02T20:18:27Z",
  "body" : "It would be very helpful to have junit distributed as a Maven artifact in the central repo."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/76",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/76/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/76/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/76/events",
  "html_url" : "https://github.com/junit-team/junit/issues/76",
  "id" : 124280,
  "number" : 76,
  "title" : "@DataPoints does not allow you to map Classes to Theories",
  "user" : {
    "login" : "bloritsch",
    "id" : 194574,
    "avatar_url" : "https://avatars.githubusercontent.com/u/194574?",
    "gravatar_id" : "3197567065bddc5fcfbdd495ef878461",
    "url" : "https://api.github.com/users/bloritsch",
    "html_url" : "https://github.com/bloritsch",
    "followers_url" : "https://api.github.com/users/bloritsch/followers",
    "following_url" : "https://api.github.com/users/bloritsch/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bloritsch/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bloritsch/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bloritsch/subscriptions",
    "organizations_url" : "https://api.github.com/users/bloritsch/orgs",
    "repos_url" : "https://api.github.com/users/bloritsch/repos",
    "events_url" : "https://api.github.com/users/bloritsch/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bloritsch/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 7,
  "created_at" : "2010-02-02T14:41:42Z",
  "updated_at" : "2014-04-08T19:49:46Z",
  "closed_at" : null,
  "body" : "Just to see how things map, I attempted to do something like this:\r\n\r\n    @RunWith(Theories.class)\r\n    public class TrackableTestCase {\r\n      @DataPoints\r\n      public static Class[] collectTargets() {\r\n        Class[] targets = new Class[] {\r\n            User.class, Incident.class\r\n        };\r\n\r\n        return targets;\r\n      }\r\n\r\n      @Theory\r\n      public void examineClass(Class klass) {\r\n        System.out.println(klass.getName());\r\n      }\r\n    }\r\n\r\nThe problem of course is that the Theories runner couldn't map the\r\ndatapoints to the Theory:\r\njava.lang.AssertionError: Never found parameters that satisfied method\r\nassumptions. Violated assumptions: []\r\n\r\nWhen I did the same thing with Strings, I had no problems. I did find\r\nout that the return type had to be an array and not a list. The\r\nTheories runner just couldn't map the classes to the theory that took\r\nthe class. Additionally, when I had both the class data points and the\r\nstring data points, the Theories runner attempted to map the whole array\r\nof strings to the examineClass theory above. Unsurprisingly there was a\r\nclass cast exception there.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/77",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/77/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/77/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/77/events",
  "html_url" : "https://github.com/junit-team/junit/issues/77",
  "id" : 126775,
  "number" : 77,
  "title" : "Enhancement : Support for messages while using @Test(expected=xyzException)",
  "user" : {
    "login" : "Laxmikant",
    "id" : 198145,
    "avatar_url" : "https://avatars.githubusercontent.com/u/198145?",
    "gravatar_id" : "9b5c84c5af649669f3377311925e0e1b",
    "url" : "https://api.github.com/users/Laxmikant",
    "html_url" : "https://github.com/Laxmikant",
    "followers_url" : "https://api.github.com/users/Laxmikant/followers",
    "following_url" : "https://api.github.com/users/Laxmikant/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Laxmikant/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Laxmikant/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Laxmikant/subscriptions",
    "organizations_url" : "https://api.github.com/users/Laxmikant/orgs",
    "repos_url" : "https://api.github.com/users/Laxmikant/repos",
    "events_url" : "https://api.github.com/users/Laxmikant/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Laxmikant/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2010-02-06T01:30:23Z",
  "updated_at" : "2014-01-29T05:40:33Z",
  "closed_at" : "2014-01-29T05:40:33Z",
  "body" : "Currently if a test case is expected to throw an exception, the test case be annotated as following:\r\n    \r\n       @Test (expected=XyzException.class)\r\n\r\nBut there is no support for testing the message from exception. The enhancement we are looking for would be like this :\r\n\r\n       @Test (expected=XyzException.class, MessageType=Exact, Message=\"This function is not support\")\r\n\r\nHere the MessageType is an enum with three values:\r\n  - Exact : Validate the exception message for exact string provided in 'Message' attribute\r\n  - Contains : Validate that exception message contains the string provided in 'Message' attribute\r\n  - Match : Validate that exception message matches (regex notation) with the regular expression provided in 'Message' attribute.\r\n\r\nWe do have an implementation for this under JUnit 4.8.1 and would like to know if we can contribute it or if there are already plans for adding this kind of feature.\r\n\r\nAppreciate your time in looking into this issue.\r\n\r\nThanks,\r\nLaxmikant\r\nStaff Engineer Ebay"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/78",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/78/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/78/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/78/events",
  "html_url" : "https://github.com/junit-team/junit/issues/78",
  "id" : 128065,
  "number" : 78,
  "title" : "@Theories usability",
  "user" : {
    "login" : "bloritsch",
    "id" : 194574,
    "avatar_url" : "https://avatars.githubusercontent.com/u/194574?",
    "gravatar_id" : "3197567065bddc5fcfbdd495ef878461",
    "url" : "https://api.github.com/users/bloritsch",
    "html_url" : "https://github.com/bloritsch",
    "followers_url" : "https://api.github.com/users/bloritsch/followers",
    "following_url" : "https://api.github.com/users/bloritsch/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bloritsch/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bloritsch/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bloritsch/subscriptions",
    "organizations_url" : "https://api.github.com/users/bloritsch/orgs",
    "repos_url" : "https://api.github.com/users/bloritsch/repos",
    "events_url" : "https://api.github.com/users/bloritsch/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bloritsch/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 7,
  "created_at" : "2010-02-08T14:52:59Z",
  "updated_at" : "2012-09-06T14:37:13Z",
  "closed_at" : "2012-09-06T14:37:13Z",
  "body" : "With some of the testing I want to do with theories, I need to know what the parameters were that caused the failure.  To that end, I would like to have the @Theories run in a mode that creates separate tests for each combination of parameters.  For example:\r\n\r\n_Java_\r\n@RunWith(Theories.class)\r\npublic class MyTheories {\r\n    @DataPoints\r\n    int[] generateFibonacciSeries() {\r\n        return new int[] {1,1,2,3,5,8,11};\r\n    }\r\n\r\n    @Theory(runDiscrete=true)\r\n    public void myTheory(int a, int b) {\r\n        // do testing on (a, b)\r\n    }\r\n}\r\n_\r\n\r\nThe main issue I have is that the theories are reported as one test, even though there are several tests each with their own parameters happening.  I am forced to use System.out.println() within the Theory to find out what the last combination was that caused the failure.  Not to mention, the framework stops testing that theory once the first combination causes a failure.  I want all the combinations to be run so that I can correct multiple problems at once, or I can derive a pattern to the failures.\r\n\r\nThe way I want the \"runDiscretely\" option to operate is to create a new test for each combination.  Something like the following:\r\n\r\nmyTheory(1,1)\r\nmyTheory(1,2)\r\nmyTheory(1,3)\r\n\r\netc.\r\n\r\nThe name of the test would be derived from the toString() of the parameter passed in.  That way when I want to test the contracts of every class that implements an interface, or extends a subclass, I can find out exactly what failed--and have the confidence that all the failures were reported separately."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/79",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/79/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/79/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/79/events",
  "html_url" : "https://github.com/junit-team/junit/issues/79",
  "id" : 128242,
  "number" : 79,
  "title" : "TestName rule -- allow reference to test name in @Before/@After",
  "user" : {
    "login" : "pholser",
    "id" : 77261,
    "avatar_url" : "https://avatars.githubusercontent.com/u/77261?",
    "gravatar_id" : "2f1e1064ae4295d285234c59f5dcb541",
    "url" : "https://api.github.com/users/pholser",
    "html_url" : "https://github.com/pholser",
    "followers_url" : "https://api.github.com/users/pholser/followers",
    "following_url" : "https://api.github.com/users/pholser/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pholser/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pholser/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pholser/subscriptions",
    "organizations_url" : "https://api.github.com/users/pholser/orgs",
    "repos_url" : "https://api.github.com/users/pholser/repos",
    "events_url" : "https://api.github.com/users/pholser/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pholser/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2010-02-08T19:57:32Z",
  "updated_at" : "2010-02-09T19:19:15Z",
  "closed_at" : "2010-02-09T03:05:39Z",
  "body" : "Currently, rule TestName is implemented in such a way that a @Before method cannot refer to the test name. This is because the test's name is captured in #starting(), rather than in #apply. Unless there's a good reason to keep things the way that they are, I'd propose the following re-implementation of TestName:\r\n\r\npublic class TestName implements MethodRule {\r\n    private String name;\r\n\r\n    @Override\r\n    public Statement apply(Statement base, FrameworkMethod method, Object target) {\r\n        name = method.getMethod().getDeclaringClass().getName() + '#' + method.getName();\r\n        return base;\r\n    }\r\n\r\n    public String getMethodName() {\r\n        return name;\r\n    }\r\n}\r\n\r\nwith test:\r\n\r\npublic class TestNameTest {\r\n    @Rule\r\n    public TestName name = new TestName();\r\n\r\n    private final String expectedName = getClass().getName() + \"#x\";\r\n\r\n    @Before\r\n    public void setUp() {\r\n        assertEquals(expectedName, name.getMethodName());\r\n    }\r\n\r\n    @Test\r\n    public void x() {\r\n        assertEquals(expectedName, name.getMethodName());\r\n    }\r\n\r\n    @After\r\n    public void tearDown() {\r\n        assertEquals(expectedName, name.getMethodName());\r\n    }\r\n}\r\n\r\nNote that this version implements MethodRule rather than extending TestWatchman, thus removing the only subclass of TestWatchman in the framework (4.7, anyway)."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/80",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/80/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/80/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/80/events",
  "html_url" : "https://github.com/junit-team/junit/issues/80",
  "id" : 129026,
  "number" : 80,
  "title" : "Add SPI support (Service Provider Interface, from Java 6) to enable external RunListener",
  "user" : {
    "login" : "rliesenfeld",
    "id" : 200378,
    "avatar_url" : "https://avatars.githubusercontent.com/u/200378?",
    "gravatar_id" : "5be766827c5f7d3c077e92f75b7f9104",
    "url" : "https://api.github.com/users/rliesenfeld",
    "html_url" : "https://github.com/rliesenfeld",
    "followers_url" : "https://api.github.com/users/rliesenfeld/followers",
    "following_url" : "https://api.github.com/users/rliesenfeld/following{/other_user}",
    "gists_url" : "https://api.github.com/users/rliesenfeld/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/rliesenfeld/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/rliesenfeld/subscriptions",
    "organizations_url" : "https://api.github.com/users/rliesenfeld/orgs",
    "repos_url" : "https://api.github.com/users/rliesenfeld/repos",
    "events_url" : "https://api.github.com/users/rliesenfeld/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/rliesenfeld/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 34,
  "created_at" : "2010-02-09T17:12:29Z",
  "updated_at" : "2013-11-15T00:42:37Z",
  "closed_at" : "2013-11-15T00:42:37Z",
  "body" : "The @RunWith annotation has been widely successful in enabling the integration of other testing tools with JUnit. For example, the following testing libraries (among others) use it: jMock, Mockito, JMockit, PowerMock, Unitils, Spring Test.\n\nHowever, this mechanism requires the annotation be applied to each and every test class, and does not support the use of more than one custom runner for the same test class.\n\nI would like to propose a simple enhancement to JUnit's ability to integrate with other testing tools: add support for the automatic discovery of org.junit.runner.notification.RunListener implementations, through the standard Service Provider API available in Java SE 6 (the java.util.ServiceLoader class).\n\nI am the creator of the JMockit testing toolking (http://code.google.com/p/jmockit), which already implements sophisticated integration with the JUnit test runner. However, to provide the best user experience I need JMockit to get initialized before JUnit starts running the first test. I have achieved this, but not in a clean way. The mechanism I propose would provide such a clean solution, which I believe might also be useful to other testing libraries which integrate with JUnit.\n\nThe desired SPI support can be achieved with the addition of the following four lines of code to the constructor of org.junit.runner.JUnitCore (alternatively, it could be done inside the RunNotifier class):\n\n    if (\"1.6 1.7\".contains(System.getProperty(\"java.specification.version\"))) {\n        ServiceLoader<RunListener> serviceLoader = ServiceLoader.load(RunListener.class);\n        for (RunListener listener : serviceLoader)\n            fNotifier.addListener(listener);\n    }\n\nThe code above requires Java 6, but it would not interfere with test suites compiled for and running under Java 5 (or older).\n\nThanks"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/81",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/81/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/81/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/81/events",
  "html_url" : "https://github.com/junit-team/junit/issues/81",
  "id" : 131590,
  "number" : 81,
  "title" : "javadoc is missing junit.* packages",
  "user" : {
    "login" : "groovycookbook",
    "id" : 105032,
    "avatar_url" : "https://avatars.githubusercontent.com/u/105032?",
    "gravatar_id" : "f38ba493700113c4c10bc76f84c3af3d",
    "url" : "https://api.github.com/users/groovycookbook",
    "html_url" : "https://github.com/groovycookbook",
    "followers_url" : "https://api.github.com/users/groovycookbook/followers",
    "following_url" : "https://api.github.com/users/groovycookbook/following{/other_user}",
    "gists_url" : "https://api.github.com/users/groovycookbook/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/groovycookbook/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/groovycookbook/subscriptions",
    "organizations_url" : "https://api.github.com/users/groovycookbook/orgs",
    "repos_url" : "https://api.github.com/users/groovycookbook/repos",
    "events_url" : "https://api.github.com/users/groovycookbook/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/groovycookbook/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/javadoc",
    "name" : "javadoc",
    "color" : "e102d8"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2010-02-12T11:57:24Z",
  "updated_at" : "2014-01-24T07:37:03Z",
  "closed_at" : null,
  "body" : "Having a look here:\r\n\r\nhttp://kentbeck.github.com/junit/javadoc/latest/\r\n\r\nThe junit.* packages seem to be missing."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/82",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/82/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/82/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/82/events",
  "html_url" : "https://github.com/junit-team/junit/issues/82",
  "id" : 135432,
  "number" : 82,
  "title" : "Performance issue: @DataPoints called N+1 times for each theory",
  "user" : {
    "login" : "bloritsch",
    "id" : 194574,
    "avatar_url" : "https://avatars.githubusercontent.com/u/194574?",
    "gravatar_id" : "3197567065bddc5fcfbdd495ef878461",
    "url" : "https://api.github.com/users/bloritsch",
    "html_url" : "https://github.com/bloritsch",
    "followers_url" : "https://api.github.com/users/bloritsch/followers",
    "following_url" : "https://api.github.com/users/bloritsch/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bloritsch/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bloritsch/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bloritsch/subscriptions",
    "organizations_url" : "https://api.github.com/users/bloritsch/orgs",
    "repos_url" : "https://api.github.com/users/bloritsch/repos",
    "events_url" : "https://api.github.com/users/bloritsch/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bloritsch/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2010-02-18T17:07:38Z",
  "updated_at" : "2013-11-15T01:15:51Z",
  "closed_at" : "2013-11-15T01:15:51Z",
  "body" : "I created a set of theories to verify the equals(), hashCode()\r\nrelationship. While I had the equals and reciprocal equals working\r\nproperly, I was surprised at the unintended hashCode collisions I had in\r\nmy code. More importantly I was surprised at how often the @DataPoints\r\nmethod was called to set up the tests. It was called no less than 61\r\ntimes for 60 discrete data points. That seems a bit excessive to me.\r\n\r\nI set up a bunch of data with the assumption that it was set up once,\r\nand then the contents were copied as needed. Essentially the expensive\r\nset up work is done 61 times, accounting for a large portion of the 37\r\nseconds it takes to run all my tests. If the @DataPoints method is only\r\ncalled once, and the values are copied as necessary, then the\r\nimplementation would be much faster.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/83",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/83/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/83/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/83/events",
  "html_url" : "https://github.com/junit-team/junit/issues/83",
  "id" : 137816,
  "number" : 83,
  "title" : "Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); } ",
  "user" : {
    "login" : "memelet",
    "id" : 22981,
    "avatar_url" : "https://avatars.githubusercontent.com/u/22981?",
    "gravatar_id" : "f63101f020882308be56dbabf4f4882b",
    "url" : "https://api.github.com/users/memelet",
    "html_url" : "https://github.com/memelet",
    "followers_url" : "https://api.github.com/users/memelet/followers",
    "following_url" : "https://api.github.com/users/memelet/following{/other_user}",
    "gists_url" : "https://api.github.com/users/memelet/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/memelet/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/memelet/subscriptions",
    "organizations_url" : "https://api.github.com/users/memelet/orgs",
    "repos_url" : "https://api.github.com/users/memelet/repos",
    "events_url" : "https://api.github.com/users/memelet/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/memelet/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2010-02-22T17:44:11Z",
  "updated_at" : "2013-01-03T10:23:58Z",
  "closed_at" : "2012-06-01T06:22:25Z",
  "body" : "This is to support Scala. See http://old.nabble.com/Cannot-use-%40Rule-in-Scala-tt27552231.html#a27552231"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/84",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/84/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/84/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/84/events",
  "html_url" : "https://github.com/junit-team/junit/issues/84",
  "id" : 138379,
  "number" : 84,
  "title" : "Fix cookbook text",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2010-02-23T15:06:30Z",
  "updated_at" : "2010-05-04T02:42:35Z",
  "closed_at" : "2010-05-04T02:42:35Z",
  "body" : "From: Steve Claflin <steve@steveclaflin.com>\r\nDate: February 17, 2010 8:34:27 AM CST\r\nTo: junit@objectmentor.com\r\nSubject: Error on Cookbook page\r\n\r\nPage has the following:\r\n\r\nRunning Tests\r\nHow do you run your tests and collect their results?\r\n\r\nOnce you have tests, you'll want to run them. JUnit provides tools to define the suite to be run and to display its results. To run tests and see the results on the console, run this from a Java program:\r\n\r\n   org.junit.runner.JUnitCore.runClasses(TestClass1.class, ...);\r\n\r\nor this from the command line, with both your test class and junit on the classpath:\r\n\r\n   java org.junit.runner.JUnitCore TestClass1.class [...other test classes...]\r\n\r\n----------------------------------\r\n\r\nThe last line does not work as is; it works without the .class on TestClass.  I haven't tried the other approaches that mention TestClass.class"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/85",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/85/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/85/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/85/events",
  "html_url" : "https://github.com/junit-team/junit/issues/85",
  "id" : 139499,
  "number" : 85,
  "title" : "Junit4 test suite run Output is overridden by another test suite that calls the same test class",
  "user" : {
    "login" : "Smoalla",
    "id" : 210368,
    "avatar_url" : "https://avatars.githubusercontent.com/u/210368?",
    "gravatar_id" : "2f8be59017df3ec16e706238128e6ca4",
    "url" : "https://api.github.com/users/Smoalla",
    "html_url" : "https://github.com/Smoalla",
    "followers_url" : "https://api.github.com/users/Smoalla/followers",
    "following_url" : "https://api.github.com/users/Smoalla/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Smoalla/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Smoalla/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Smoalla/subscriptions",
    "organizations_url" : "https://api.github.com/users/Smoalla/orgs",
    "repos_url" : "https://api.github.com/users/Smoalla/repos",
    "events_url" : "https://api.github.com/users/Smoalla/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Smoalla/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/needs-more-info",
    "name" : "needs-more-info",
    "color" : "4ae6c7"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2010-02-25T02:07:15Z",
  "updated_at" : "2014-04-28T19:01:05Z",
  "closed_at" : null,
  "body" : "I have a Junit4 Master test suite that calls 2 other Junit4 test suites. These 2 test suites execute the same test class in order to cover some particular setting.\r\nThe Junit4 runner considers the 2 test suites as only 1 test suite running twice. Here the output of the first test suite run is overridden by the second run in the same test suite rather than treating the 2 test suites as independent.\r\n \r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/86",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/86/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/86/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/86/events",
  "html_url" : "https://github.com/junit-team/junit/issues/86",
  "id" : 141613,
  "number" : 86,
  "title" : "more Assert.assertArrayEquals(boolean[] expecteds, boolean[] actuals)",
  "user" : {
    "login" : "Horcrux7",
    "id" : 212693,
    "avatar_url" : "https://avatars.githubusercontent.com/u/212693?",
    "gravatar_id" : "b571b7a4b16a254529dafed740fd786b",
    "url" : "https://api.github.com/users/Horcrux7",
    "html_url" : "https://github.com/Horcrux7",
    "followers_url" : "https://api.github.com/users/Horcrux7/followers",
    "following_url" : "https://api.github.com/users/Horcrux7/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Horcrux7/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Horcrux7/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Horcrux7/subscriptions",
    "organizations_url" : "https://api.github.com/users/Horcrux7/orgs",
    "repos_url" : "https://api.github.com/users/Horcrux7/repos",
    "events_url" : "https://api.github.com/users/Horcrux7/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Horcrux7/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : {
    "url" : "https://api.github.com/repos/junit-team/junit/milestones/2",
    "labels_url" : "https://api.github.com/repos/junit-team/junit/milestones/2/labels",
    "id" : 202012,
    "number" : 2,
    "title" : "4.12",
    "description" : null,
    "creator" : {
      "login" : "marcphilipp",
      "id" : 214207,
      "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
      "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
      "url" : "https://api.github.com/users/marcphilipp",
      "html_url" : "https://github.com/marcphilipp",
      "followers_url" : "https://api.github.com/users/marcphilipp/followers",
      "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
      "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
      "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
      "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
      "repos_url" : "https://api.github.com/users/marcphilipp/repos",
      "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
      "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
      "type" : "User",
      "site_admin" : false
    },
    "open_issues" : 4,
    "closed_issues" : 42,
    "state" : "open",
    "created_at" : "2012-10-26T09:58:06Z",
    "updated_at" : "2014-05-15T07:23:02Z",
    "due_on" : null
  },
  "comments" : 9,
  "created_at" : "2010-02-28T19:03:49Z",
  "updated_at" : "2014-01-07T01:33:24Z",
  "closed_at" : "2014-01-07T01:33:24Z",
  "body" : "Please add more Assert.assertArrayEquals methods like:\r\n\r\nassertArrayEquals(boolean[] expecteds, boolean[] actuals)\r\nassertArrayEquals(float[] expecteds, float[] actuals)\r\nassertArrayEquals(double[] expecteds, double[] actuals)\r\n\r\nassertArrayEquals(String message, boolean[] expecteds, boolean[] actuals)\r\nassertArrayEquals(String message, float[] expecteds, float[] actuals)\r\nassertArrayEquals(String message, double[] expecteds, double[] actuals)\r\n\r\nI see no cause because this is not implemented in Assert see at http://www.junit.org/apidocs/org/junit/Assert.html for details.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/87",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/87/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/87/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/87/events",
  "html_url" : "https://github.com/junit-team/junit/issues/87",
  "id" : 142373,
  "number" : 87,
  "title" : "Test issue",
  "user" : {
    "login" : "dsafftemp",
    "id" : 213182,
    "avatar_url" : "https://avatars.githubusercontent.com/u/213182?",
    "gravatar_id" : "bdbc2d826127b7a7347da63555baea78",
    "url" : "https://api.github.com/users/dsafftemp",
    "html_url" : "https://github.com/dsafftemp",
    "followers_url" : "https://api.github.com/users/dsafftemp/followers",
    "following_url" : "https://api.github.com/users/dsafftemp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsafftemp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsafftemp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsafftemp/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsafftemp/orgs",
    "repos_url" : "https://api.github.com/users/dsafftemp/repos",
    "events_url" : "https://api.github.com/users/dsafftemp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsafftemp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-03-01T14:42:22Z",
  "updated_at" : "2011-03-04T15:57:24Z",
  "closed_at" : "2011-03-04T15:57:24Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/88",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/88/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/88/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/88/events",
  "html_url" : "https://github.com/junit-team/junit/issues/88",
  "id" : 142395,
  "number" : 88,
  "title" : "Findbugs warning",
  "user" : {
    "login" : "mtov",
    "id" : 213200,
    "avatar_url" : "https://avatars.githubusercontent.com/u/213200?",
    "gravatar_id" : "13beaa3b7239eca3319d54c6a9f3a85a",
    "url" : "https://api.github.com/users/mtov",
    "html_url" : "https://github.com/mtov",
    "followers_url" : "https://api.github.com/users/mtov/followers",
    "following_url" : "https://api.github.com/users/mtov/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mtov/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mtov/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mtov/subscriptions",
    "organizations_url" : "https://api.github.com/users/mtov/orgs",
    "repos_url" : "https://api.github.com/users/mtov/repos",
    "events_url" : "https://api.github.com/users/mtov/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mtov/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-03-01T15:42:26Z",
  "updated_at" : "2012-04-23T18:28:33Z",
  "closed_at" : "2012-04-23T18:28:33Z",
  "body" : "Dear all,\r\n\r\nWe are conducting an study about the relevance of the warnings reported by the FindBugs tool  when executed over several open-source systems.\r\n\r\nParticularly, in the case of JUnit, we would like to confirm the relevance of the following warning reported by the tool (for JUnit 4.7):\r\n\r\n> package: org.junit.experimental.theories.suppliers.\r\n> method: TestedOnSupplier.getValueSources \r\n> \r\n> for (final int i : ints) {\r\n>    list.add(PotentialAssignment.forValue(Arrays.asList(ints).toString(), i));\r\n> }\r\n\r\nFindbugs is complaining that \"this code passes a primitive array (ints) to a function that takes a variable number of object arguments (asList). This creates an array of length one to hold the primitive array and passes it to the function.\"\r\n\r\nSince this warning seemed relevant to us, we would like to confirm our classification with JUnit's developers.\r\n\r\nBest regards,\r\n\r\nMarco Tulio Valente\r\nBrazil"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/89",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/89/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/89/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/89/events",
  "html_url" : "https://github.com/junit-team/junit/issues/89",
  "id" : 143153,
  "number" : 89,
  "title" : "Fibonacci example in Javadocs of Parameterized uses a strange object array item",
  "user" : {
    "login" : "andi5",
    "id" : 42928,
    "avatar_url" : "https://avatars.githubusercontent.com/u/42928?",
    "gravatar_id" : "5d0748f4034fe6eff460d27504ea7c11",
    "url" : "https://api.github.com/users/andi5",
    "html_url" : "https://github.com/andi5",
    "followers_url" : "https://api.github.com/users/andi5/followers",
    "following_url" : "https://api.github.com/users/andi5/following{/other_user}",
    "gists_url" : "https://api.github.com/users/andi5/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/andi5/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/andi5/subscriptions",
    "organizations_url" : "https://api.github.com/users/andi5/orgs",
    "repos_url" : "https://api.github.com/users/andi5/repos",
    "events_url" : "https://api.github.com/users/andi5/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/andi5/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-03-02T15:32:18Z",
  "updated_at" : "2014-02-12T15:32:04Z",
  "closed_at" : "2011-08-11T17:40:19Z",
  "body" : "http://kentbeck.github.com/junit/javadoc/latest/org/junit/runners/Parameterized.html\r\n[...]\r\n        @Parameters\r\n        public static List<Object[]> data() {\r\n                return Arrays.asList(new Object[][] {\r\n                                Fibonacci,\r\n                                { { 0, 0 }, { 1, 1 }, { 2, 1 }, { 3, 2 }, { 4, 3 }, { 5, 5 },\r\n                                                { 6, 8 } } });\r\n        }\r\n[...]\r\nI suppose that the line \"Fibonacci,\" is a typo and should disappear. Otherwise please explain its existence.\r\nThanks.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/90",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/90/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/90/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/90/events",
  "html_url" : "https://github.com/junit-team/junit/issues/90",
  "id" : 143831,
  "number" : 90,
  "title" : "Use development branch between releases?",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-03-03T14:12:08Z",
  "updated_at" : "2011-03-04T16:02:53Z",
  "closed_at" : "2011-03-04T16:02:53Z",
  "body" : ""
} ]