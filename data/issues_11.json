[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/332",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/332/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/332/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/332/events",
  "html_url" : "https://github.com/junit-team/junit/issues/332",
  "id" : 1804363,
  "number" : 332,
  "title" : "4.9 and 4.10 \"junit\" artifacts in Maven Central have hamcrest as dependency defined while in \"junit\" artifact the hamcrest classes are already included",
  "user" : {
    "login" : "Vampire",
    "id" : 325196,
    "avatar_url" : "https://avatars.githubusercontent.com/u/325196?",
    "gravatar_id" : "7badf6e89094b134dd4eb65792b7f734",
    "url" : "https://api.github.com/users/Vampire",
    "html_url" : "https://github.com/Vampire",
    "followers_url" : "https://api.github.com/users/Vampire/followers",
    "following_url" : "https://api.github.com/users/Vampire/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Vampire/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Vampire/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Vampire/subscriptions",
    "organizations_url" : "https://api.github.com/users/Vampire/orgs",
    "repos_url" : "https://api.github.com/users/Vampire/repos",
    "events_url" : "https://api.github.com/users/Vampire/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Vampire/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/hamcrest",
    "name" : "hamcrest",
    "color" : "0b02e1"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/maven",
    "name" : "maven",
    "color" : "0b02e1"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "milestone" : null,
  "comments" : 53,
  "created_at" : "2011-10-03T16:54:00Z",
  "updated_at" : "2012-09-23T14:10:31Z",
  "closed_at" : "2012-09-23T14:10:31Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/333",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/333/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/333/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/333/events",
  "html_url" : "https://github.com/junit-team/junit/issues/333",
  "id" : 1817955,
  "number" : 333,
  "title" : "build.xml is broken after merges (invalid XML)",
  "user" : {
    "login" : "jenisys",
    "id" : 371945,
    "avatar_url" : "https://avatars.githubusercontent.com/u/371945?",
    "gravatar_id" : "3c3e5d70005d0fa4e748b71d0518b07d",
    "url" : "https://api.github.com/users/jenisys",
    "html_url" : "https://github.com/jenisys",
    "followers_url" : "https://api.github.com/users/jenisys/followers",
    "following_url" : "https://api.github.com/users/jenisys/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jenisys/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jenisys/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jenisys/subscriptions",
    "organizations_url" : "https://api.github.com/users/jenisys/orgs",
    "repos_url" : "https://api.github.com/users/jenisys/repos",
    "events_url" : "https://api.github.com/users/jenisys/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jenisys/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-04T21:10:41Z",
  "updated_at" : "2011-10-07T13:25:39Z",
  "closed_at" : "2011-10-07T13:25:39Z",
  "body" : "build.xml is broken on main trunk after merges\r\nafter \"Merge branch 4.10\" changes by dsaff on 2011-09-29.\r\n\r\n```\r\n...\r\n<<<<<<< HEAD\r\n  <property name=\"version-base\" value=\"4.11\" />\r\n  <property name=\"version-status\" value=\"-SNAPSHOT\" />\r\n=======\r\n  <property name=\"version-base\" value=\"4.10\" />\r\n  <property name=\"version-status\" value=\"\" />\r\n>>>>>>> 4.10\r\n...\r\n```"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/334",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/334/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/334/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/334/events",
  "html_url" : "https://github.com/junit-team/junit/pull/334",
  "id" : 1842501,
  "number" : 334,
  "title" : "Fix for #333 build.xml is broken after merge",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-10-07T11:23:44Z",
  "updated_at" : "2011-10-07T13:25:55Z",
  "closed_at" : "2011-10-07T13:25:38Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/334",
    "html_url" : "https://github.com/junit-team/junit/pull/334",
    "diff_url" : "https://github.com/junit-team/junit/pull/334.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/334.patch"
  },
  "body" : "I was building, so I thought I would fix this."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/335",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/335/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/335/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/335/events",
  "html_url" : "https://github.com/junit-team/junit/issues/335",
  "id" : 1860131,
  "number" : 335,
  "title" : "Bug: Categorized test methods inherit categories declared on type of a test.",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-10-10T01:24:15Z",
  "updated_at" : "2011-10-10T15:29:16Z",
  "closed_at" : "2011-10-10T14:46:43Z",
  "body" : "The problem is in method\r\ncategories(:Description): List\r\nwhich makes a join of both child and parent.\r\n\r\n\r\nThe Fix should be like this:\r\nIf parent has @Category annotation and the child does not, then inherit it;\r\nOtherwise use the annotation on the child only.\r\n\r\nhttps://github.com/KentBeck/junit/blob/master/src/main/java/org/junit/experimental/categories/Categories.java\r\n\r\n<code>\r\nprivate List<Class<?>> categories(Description description) {\t\r\nArrayList<Class<?>> categories= new ArrayList<Class<?>>();\r\ncategories.addAll(Arrays.asList(directCategories(description)));\r\ncategories.addAll(Arrays.asList(directCategories(parentDescription(description))));\r\nreturn categories;\r\n}\r\n</code>\r\n\r\nshould be modified to:\r\n<code>\r\nprivate List<Class<?>> categories(Description description) {\t\r\nArrayList<Class<?>> categories= new ArrayList<Class<?>>();\r\ncategories.addAll(Arrays.asList(directCategories(description)));\r\nif (categories.isEmpty())\r\ncategories.addAll(Arrays.asList(directCategories(parentDescription(description))));\r\nreturn categories;\r\n}\r\n</code>\r\n\r\nThis can happen in a scenario, where you have e.g. a test annotated by both {Cars, Buses} as a public transport. This test has a test-case ourBus() annotated by a category Bus, and the test is launched by a suite annotated by category Cars.\r\nWhat will happen is that the suite which has only an interrest to cars will also test ourBus() test case which is of course unwanted. This has happened due to the ArrayList joined categories on type of test and method.\r\nThere must be XOR and not the today's OR."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/336",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/336/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/336/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/336/events",
  "html_url" : "https://github.com/junit-team/junit/issues/336",
  "id" : 1860213,
  "number" : 336,
  "title" : "IncludeCategory and ExcludeCategory should have plural in descriptive method value(): []",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-10T01:53:32Z",
  "updated_at" : "2013-09-20T00:53:18Z",
  "closed_at" : "2013-09-20T00:53:18Z",
  "body" : "It's used on suite and therefore it is reasonable to test against categories rather than one category.\r\nThe Category annotation already uses the plural. Backward compatibility is guaranteed.\r\n\r\nIf we accept this, it would be just easy to proceed with code changes in Catefories which would then expect a set of categories in fExcluded here instead of a sibgle value, and in an implementation of feature 307 as well. So I have already implemented symetric changes for both the fIncluded and fExcluded variables in Categories which is suited to both features in the same manner.\r\n\r\n\r\nA static method\r\npublic static createCategoryFilter(Set<Class<?>> includes, Set<Class<?>> excludes):CategoryFilter\r\n\r\nshould be added as an advantage to maven-surefire-plugin."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/337",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/337/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/337/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/337/events",
  "html_url" : "https://github.com/junit-team/junit/pull/337",
  "id" : 1863044,
  "number" : 337,
  "title" : "A fix for the issue #335",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2011-10-10T10:43:31Z",
  "updated_at" : "2013-12-24T12:47:59Z",
  "closed_at" : "2011-10-12T01:57:38Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/337",
    "html_url" : "https://github.com/junit-team/junit/pull/337",
    "diff_url" : "https://github.com/junit-team/junit/pull/337.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/337.patch"
  },
  "body" : "Hi All,\r\n\r\nI have pushed one commit for fix in issue #335 regarding categories.\r\nhttps://github.com/KentBeck/junit/issues/335\r\n\r\nThis way I would like to ask you to make a code review before submitting to KentBeck master branch.\r\nSelected tests of categories passed!\r\nhttps://github.com/Tibor17/junit/tree/master/src/test/java/org/junit/tests/experimental/categories\r\n\r\nThx, Tibor"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/338",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/338/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/338/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/338/events",
  "html_url" : "https://github.com/junit-team/junit/issues/338",
  "id" : 1864648,
  "number" : 338,
  "title" : "Categories javadoc does not specify the behavior of categories on parents and children.",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/categories",
    "name" : "categories",
    "color" : "0b02e1"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/javadoc",
    "name" : "javadoc",
    "color" : "e102d8"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-10-10T14:46:06Z",
  "updated_at" : "2013-09-18T20:05:30Z",
  "closed_at" : "2013-09-18T20:05:30Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/339",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/339/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/339/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/339/events",
  "html_url" : "https://github.com/junit-team/junit/issues/339",
  "id" : 1866146,
  "number" : 339,
  "title" : "Fields annotated with @Rule should be checked to be non-static",
  "user" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2011-10-10T17:21:21Z",
  "updated_at" : "2013-12-26T11:12:02Z",
  "closed_at" : "2011-10-17T20:43:28Z",
  "body" : "Currently (in 4.10) fields annotated with `@ClassRule` are checked to be static (like methods annotated with `@BeforeClass`/`@AfterClass`).\r\n\r\nFields annotated with `@Rule` are *not* checked to be non-static. However, methods annotated with `@Before`/`@After` *are* checked to be non-static.\r\n\r\nIMHO this is inconsistent. I don't see any reason why one would allow static fields with `@Rule` annotation. If you agree, I would be glad to supply a patch via pull request."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/340",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/340/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/340/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/340/events",
  "html_url" : "https://github.com/junit-team/junit/pull/340",
  "id" : 1876732,
  "number" : 340,
  "title" : "Support for Multiple Include/Exclude Categories",
  "user" : {
    "login" : "matheeeny",
    "id" : 266679,
    "avatar_url" : "https://avatars.githubusercontent.com/u/266679?",
    "gravatar_id" : "2f7cf85a25e3861f076cddd15a0850f6",
    "url" : "https://api.github.com/users/matheeeny",
    "html_url" : "https://github.com/matheeeny",
    "followers_url" : "https://api.github.com/users/matheeeny/followers",
    "following_url" : "https://api.github.com/users/matheeeny/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matheeeny/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matheeeny/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matheeeny/subscriptions",
    "organizations_url" : "https://api.github.com/users/matheeeny/orgs",
    "repos_url" : "https://api.github.com/users/matheeeny/repos",
    "events_url" : "https://api.github.com/users/matheeeny/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matheeeny/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2011-10-11T15:34:38Z",
  "updated_at" : "2012-05-09T20:50:13Z",
  "closed_at" : "2012-05-09T19:08:39Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/340",
    "html_url" : "https://github.com/junit-team/junit/pull/340",
    "diff_url" : "https://github.com/junit-team/junit/pull/340.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/340.patch"
  },
  "body" : "This addresses [issue 146](https://github.com/KentBeck/junit/issues/146)\r\n\r\n+ Changed the IncludeCategory and ExcludeCategory annotations to take an array of Class<?> for their value.\r\n+ Added logic to `hasCorrectCategoryAnnotation(Description description)` that uses the arrays instead of the single values.\r\n+ Updated existing unit tests and added new test that verifies correct exclusion of multiple categories\r\n+ Set the describe method for category to perform as it currently does for single category filters and to list all filters comma delimited when there are multiples\r\n\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/341",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/341/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/341/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/341/events",
  "html_url" : "https://github.com/junit-team/junit/pull/341",
  "id" : 1883680,
  "number" : 341,
  "title" : "Configurable Categories (issue #307)",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2011-10-12T02:21:27Z",
  "updated_at" : "2011-10-29T02:37:13Z",
  "closed_at" : "2011-10-29T02:37:13Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/341",
    "html_url" : "https://github.com/junit-team/junit/pull/341",
    "diff_url" : "https://github.com/junit-team/junit/pull/341.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/341.patch"
  },
  "body" : "This is the implementation for a feature of Configurable Categories\r\nhttps://github.com/KentBeck/junit/issues/307\r\n\r\nYou can make a narrow list of tests in your build process according to build specifics.\r\nSee the test CategoriesConfiguredBySystemPropertiesTest.\r\nThere the suite accepts almost all tests of platforms, and the system properties suppress some of them.\r\n\r\nHere we use a Set<Class> of categories which was necessary in this feature. Not using single values in variables fIncluded either fExcluded in Categories class. See their comments in code.\r\n\r\nThis way we have built also a prerequisite for #336. See 'TODO' and 'FIX for issue #336' in class Categories."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/342",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/342/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/342/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/342/events",
  "html_url" : "https://github.com/junit-team/junit/issues/342",
  "id" : 1917116,
  "number" : 342,
  "title" : "TemporaryFolder.newFile(String) throws IllegalStateException in junit-4.10",
  "user" : {
    "login" : "vyazelenko",
    "id" : 696855,
    "avatar_url" : "https://avatars.githubusercontent.com/u/696855?",
    "gravatar_id" : "918b95dfe7cd201152960b8329523d0e",
    "url" : "https://api.github.com/users/vyazelenko",
    "html_url" : "https://github.com/vyazelenko",
    "followers_url" : "https://api.github.com/users/vyazelenko/followers",
    "following_url" : "https://api.github.com/users/vyazelenko/following{/other_user}",
    "gists_url" : "https://api.github.com/users/vyazelenko/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/vyazelenko/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/vyazelenko/subscriptions",
    "organizations_url" : "https://api.github.com/users/vyazelenko/orgs",
    "repos_url" : "https://api.github.com/users/vyazelenko/repos",
    "events_url" : "https://api.github.com/users/vyazelenko/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/vyazelenko/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2011-10-15T11:00:51Z",
  "updated_at" : "2011-10-24T15:21:47Z",
  "closed_at" : "2011-10-24T15:21:47Z",
  "body" : "Before Junit 4.10 I was using TemporaryFolder API to create files and directories directly in the test without usage of @Rule annotation. Since new release the code doesn't work anymore as IllegalStateException is thrown.\r\n\r\nThe cause of the error is the fact that 2 (newFile(String) and newFolder(String...)) out of 4 methods in TemporaryFolder class call getRoot() method which checks if folder variable is not null and if it is it throws IllegalStateException.\r\n\r\nI can imagine that by design TemporaryFolder should not be used directly but only via @Rule. However then API must be symmetric in usage of getRoot(), so either all four methods should call it or none should. "
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/343",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/343/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/343/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/343/events",
  "html_url" : "https://github.com/junit-team/junit/pull/343",
  "id" : 1921339,
  "number" : 343,
  "title" : "@Rule fields/methods must not be static",
  "user" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-16T12:20:02Z",
  "updated_at" : "2013-12-26T11:12:02Z",
  "closed_at" : "2011-10-17T20:43:27Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/343",
    "html_url" : "https://github.com/junit-team/junit/pull/343",
    "diff_url" : "https://github.com/junit-team/junit/pull/343.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/343.patch"
  },
  "body" : "Fixes #339"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/344",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/344/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/344/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/344/events",
  "html_url" : "https://github.com/junit-team/junit/pull/344",
  "id" : 1934386,
  "number" : 344,
  "title" : "Fixes for issue #342",
  "user" : {
    "login" : "vyazelenko",
    "id" : 696855,
    "avatar_url" : "https://avatars.githubusercontent.com/u/696855?",
    "gravatar_id" : "918b95dfe7cd201152960b8329523d0e",
    "url" : "https://api.github.com/users/vyazelenko",
    "html_url" : "https://github.com/vyazelenko",
    "followers_url" : "https://api.github.com/users/vyazelenko/followers",
    "following_url" : "https://api.github.com/users/vyazelenko/following{/other_user}",
    "gists_url" : "https://api.github.com/users/vyazelenko/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/vyazelenko/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/vyazelenko/subscriptions",
    "organizations_url" : "https://api.github.com/users/vyazelenko/orgs",
    "repos_url" : "https://api.github.com/users/vyazelenko/repos",
    "events_url" : "https://api.github.com/users/vyazelenko/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/vyazelenko/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-10-17T22:43:15Z",
  "updated_at" : "2011-10-24T15:21:45Z",
  "closed_at" : "2011-10-24T15:21:45Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/344",
    "html_url" : "https://github.com/junit-team/junit/pull/344",
    "diff_url" : "https://github.com/junit-team/junit/pull/344.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/344.patch"
  },
  "body" : "Here are fixed in TemporaryFolder as discussed in issue #342. As well as new test case TemporaryFolderUsageTest."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/345",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/345/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/345/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/345/events",
  "html_url" : "https://github.com/junit-team/junit/issues/345",
  "id" : 1999659,
  "number" : 345,
  "title" : "Allow running tests tagged with certain words",
  "user" : {
    "login" : "swapsapar",
    "id" : 862755,
    "avatar_url" : "https://avatars.githubusercontent.com/u/862755?",
    "gravatar_id" : "e7fcb72940f3e0b29acaa0cc5e137ec5",
    "url" : "https://api.github.com/users/swapsapar",
    "html_url" : "https://github.com/swapsapar",
    "followers_url" : "https://api.github.com/users/swapsapar/followers",
    "following_url" : "https://api.github.com/users/swapsapar/following{/other_user}",
    "gists_url" : "https://api.github.com/users/swapsapar/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/swapsapar/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/swapsapar/subscriptions",
    "organizations_url" : "https://api.github.com/users/swapsapar/orgs",
    "repos_url" : "https://api.github.com/users/swapsapar/repos",
    "events_url" : "https://api.github.com/users/swapsapar/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/swapsapar/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-19T22:58:30Z",
  "updated_at" : "2012-02-03T19:46:30Z",
  "closed_at" : "2012-02-03T19:46:30Z",
  "body" : "This is an enhancement change request. The idea here is to tag the tests with certain keywords e.g. \"quality\", \"integration\", \"prod\" etc. This tagging would be done using annotation.\r\n\r\n\r\nThen allow the JUnit to run all the tests that are tagged with certain keywords. e.g. run all the tests that are tagged with key \"quality\".\r\n\r\nThis change requests is inspired from following posts.\r\nhttp://www.coderanch.com/t/535150/Testing/create-new-suit-only-selected\r\nhttp://tech.groups.yahoo.com/group/junit/message/23396\r\nhttp://code.google.com/p/junit-plus/\r\n\r\nI could not find a decent solution to above problem and though of adding this as a enhancement to JUnit 4.x \r\nI have a solution ready and currently trying to figure out how to work with git.\r\n\r\n\r\nThis is the first time I'm writing a Issue or even contributing to the open source so feel free to comment, correct, suggest or provice feedback of any type.\r\n\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/346",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/346/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/346/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/346/events",
  "html_url" : "https://github.com/junit-team/junit/pull/346",
  "id" : 2009451,
  "number" : 346,
  "title" : "Fix for #345 with a new TestCase",
  "user" : {
    "login" : "swapsapar",
    "id" : 862755,
    "avatar_url" : "https://avatars.githubusercontent.com/u/862755?",
    "gravatar_id" : "e7fcb72940f3e0b29acaa0cc5e137ec5",
    "url" : "https://api.github.com/users/swapsapar",
    "html_url" : "https://github.com/swapsapar",
    "followers_url" : "https://api.github.com/users/swapsapar/followers",
    "following_url" : "https://api.github.com/users/swapsapar/following{/other_user}",
    "gists_url" : "https://api.github.com/users/swapsapar/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/swapsapar/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/swapsapar/subscriptions",
    "organizations_url" : "https://api.github.com/users/swapsapar/orgs",
    "repos_url" : "https://api.github.com/users/swapsapar/repos",
    "events_url" : "https://api.github.com/users/swapsapar/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/swapsapar/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-10-20T21:09:07Z",
  "updated_at" : "2012-02-03T19:45:18Z",
  "closed_at" : "2012-02-03T19:45:12Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/346",
    "html_url" : "https://github.com/junit-team/junit/pull/346",
    "diff_url" : "https://github.com/junit-team/junit/pull/346.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/346.patch"
  },
  "body" : "https://github.com/KentBeck/junit/issues/345\r\n\r\nThe above requested feature is added with these commits. Now we can execute the (a dynamic set of) tests using the tags.\r\n\r\n1. Create a new testcase with tests tagged with different keywords e.g. production, quality, integration etc\r\n2. Lauch JUnit with a new VM param e.g.\r\n$ java -Dorg.junit.runtags=\"quality\" -cp target/main:target/test/java:lib/hamcrest-core-1.1.jar org.junit.runner.JUnitCore org.junit.tags.TaggedTest\r\nJUnit version 4.11-SNAPSHOT\r\n.I..II\r\nTime: 0.008\r\n\r\nOK (3 tests)\r\n\r\n3. All the tests annotated with @RunTags are executed only if the tag passed via VM parameter matches.\r\n\r\nAdded a new testcase TagCheckTest to validate the new functionality.\r\n\r\nThis is the first time I'm trying to contribute to an open source project. Also my first time with git and github. Please feel free to comment, correct, suggest or provide feedback of any type.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/347",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/347/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/347/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/347/events",
  "html_url" : "https://github.com/junit-team/junit/pull/347",
  "id" : 2009572,
  "number" : 347,
  "title" : "Fix for #345 with a new TestCase",
  "user" : {
    "login" : "swapsapar",
    "id" : 862755,
    "avatar_url" : "https://avatars.githubusercontent.com/u/862755?",
    "gravatar_id" : "e7fcb72940f3e0b29acaa0cc5e137ec5",
    "url" : "https://api.github.com/users/swapsapar",
    "html_url" : "https://github.com/swapsapar",
    "followers_url" : "https://api.github.com/users/swapsapar/followers",
    "following_url" : "https://api.github.com/users/swapsapar/following{/other_user}",
    "gists_url" : "https://api.github.com/users/swapsapar/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/swapsapar/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/swapsapar/subscriptions",
    "organizations_url" : "https://api.github.com/users/swapsapar/orgs",
    "repos_url" : "https://api.github.com/users/swapsapar/repos",
    "events_url" : "https://api.github.com/users/swapsapar/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/swapsapar/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-10-20T21:22:22Z",
  "updated_at" : "2012-02-24T00:23:09Z",
  "closed_at" : "2012-02-24T00:23:06Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/347",
    "html_url" : "https://github.com/junit-team/junit/pull/347",
    "diff_url" : "https://github.com/junit-team/junit/pull/347.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/347.patch"
  },
  "body" : "Fix for #345 with a new TestCase\r\nhttps://github.com/KentBeck/junit/issues/345\r\n\r\nThe above requested feature is added with these commits. Now we can execute the (a dynamic set of) tests using the tags.\r\n\r\nCreate a new testcase with tests tagged with different keywords e.g. production, quality, integration etc\r\nLauch JUnit with a new VM param e.g. $ java -Dorg.junit.runtags=\"quality\" -cp target/main:target/test/java:lib/hamcrest-core-1.1.jar org.junit.runner.JUnitCore org.junit.tags.TaggedTest JUnit version 4.11-SNAPSHOT .I..II Time: 0.008\r\nOK (3 tests)\r\n\r\nAll the tests annotated with @RunTags are executed only if the tag passed via VM parameter matches.\r\nAdded a new testcase TagCheckTest to validate the new functionality.\r\n\r\nThis is the first time I'm trying to contribute to an open source project. Also my first time with git and github. Please feel free to comment, correct, suggest or provide feedback of any type."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/348",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/348/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/348/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/348/events",
  "html_url" : "https://github.com/junit-team/junit/pull/348",
  "id" : 2010854,
  "number" : 348,
  "title" : "Use Iterable for the parameters of Parameterized (fixes gh-104).",
  "user" : {
    "login" : "stefanbirkner",
    "id" : 711349,
    "avatar_url" : "https://avatars.githubusercontent.com/u/711349?",
    "gravatar_id" : "fa5767c967d4733b5937d4e9c265ee4b",
    "url" : "https://api.github.com/users/stefanbirkner",
    "html_url" : "https://github.com/stefanbirkner",
    "followers_url" : "https://api.github.com/users/stefanbirkner/followers",
    "following_url" : "https://api.github.com/users/stefanbirkner/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stefanbirkner/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stefanbirkner/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stefanbirkner/subscriptions",
    "organizations_url" : "https://api.github.com/users/stefanbirkner/orgs",
    "repos_url" : "https://api.github.com/users/stefanbirkner/repos",
    "events_url" : "https://api.github.com/users/stefanbirkner/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stefanbirkner/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-20T23:36:12Z",
  "updated_at" : "2014-02-12T15:24:32Z",
  "closed_at" : "2011-12-31T13:03:42Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/348",
    "html_url" : "https://github.com/junit-team/junit/pull/348",
    "diff_url" : "https://github.com/junit-team/junit/pull/348.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/348.patch"
  },
  "body" : "The method annotated with @Parameterized returns an Iterable<Object[]>\r\n(was List<Object[]> before). The test fails with a meaningful exception\r\notherwise."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/349",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/349/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/349/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/349/events",
  "html_url" : "https://github.com/junit-team/junit/issues/349",
  "id" : 2013696,
  "number" : 349,
  "title" : "junit-dep and maven: wrong dependency scope",
  "user" : {
    "login" : "alexeev",
    "id" : 93481,
    "avatar_url" : "https://avatars.githubusercontent.com/u/93481?",
    "gravatar_id" : "795f247c04ace95a6186d43b72631fbc",
    "url" : "https://api.github.com/users/alexeev",
    "html_url" : "https://github.com/alexeev",
    "followers_url" : "https://api.github.com/users/alexeev/followers",
    "following_url" : "https://api.github.com/users/alexeev/following{/other_user}",
    "gists_url" : "https://api.github.com/users/alexeev/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/alexeev/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/alexeev/subscriptions",
    "organizations_url" : "https://api.github.com/users/alexeev/orgs",
    "repos_url" : "https://api.github.com/users/alexeev/repos",
    "events_url" : "https://api.github.com/users/alexeev/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/alexeev/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "milestone" : null,
  "comments" : 11,
  "created_at" : "2011-10-21T09:23:35Z",
  "updated_at" : "2014-05-17T15:56:26Z",
  "closed_at" : "2012-04-21T19:11:34Z",
  "body" : "The junit-dep module has the compile-scope dependency on hamcrest-core lib. I think it's wrong, since the build-in hamcrest-version appears in the classpath and can lead to conflicts. Maven configuration\r\n\r\n<pre>\r\n&lt;dependency&gt;\r\n  &lt;groupId&gt;junit&lt;/groupId&gt;\r\n  &lt;artifactId&gt;junit-dep&lt;/artifactId&gt;\r\n  &lt;version&gt;4.10&lt;/version&gt;\r\n  &lt;scope&gt;test&lt;/scope&gt;\r\n&lt;/dependency&gt;\r\n&lt;dependency&gt;\r\n  &lt;groupId&gt;org.hamcrest&lt;/groupId&gt;\r\n  &lt;artifactId&gt;hamcrest-all&lt;/artifactId&gt;\r\n  &lt;version&gt;1.2&lt;/version&gt;\r\n  &lt;scope&gt;test&lt;/scope&gt;\r\n&lt;/dependency&gt;\r\n</pre>\r\n\r\nresults in Compile- and Runtime- availability of \r\n- junit-dep-4.10\r\n- hamcrest-core-1.1\r\n- hamcrest-all-1.2\r\n\r\n\r\nIt would be better to set the dependency-scope of  hamcrest-core to \"provided\" in the junit-dep module. The Maven configuration above would then result in:\r\n- junit-dep-4.10\r\n- hamcrest-all-1.2\r\n\r\nAt the moment we help ourself with exclusions as a workaround, in order to get a proper Compile- and Runtime classpath."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/350",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/350/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/350/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/350/events",
  "html_url" : "https://github.com/junit-team/junit/issues/350",
  "id" : 2018273,
  "number" : 350,
  "title" : "@Rule should not require MethodRule in 4.10, regression?",
  "user" : {
    "login" : "Art-B",
    "id" : 1143795,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1143795?",
    "gravatar_id" : "a5f7ff911c368f70c10417b8de5c8c2c",
    "url" : "https://api.github.com/users/Art-B",
    "html_url" : "https://github.com/Art-B",
    "followers_url" : "https://api.github.com/users/Art-B/followers",
    "following_url" : "https://api.github.com/users/Art-B/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Art-B/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Art-B/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Art-B/subscriptions",
    "organizations_url" : "https://api.github.com/users/Art-B/orgs",
    "repos_url" : "https://api.github.com/users/Art-B/repos",
    "events_url" : "https://api.github.com/users/Art-B/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Art-B/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-10-21T18:39:09Z",
  "updated_at" : "2011-10-21T19:48:26Z",
  "closed_at" : "2011-10-21T19:48:26Z",
  "body" : "I believe this is a regression. I was investigating an issue I was having where a test would fail on a build server but pass locally when I realised I was using 4.9 locally and 4.10 on the server. It was complaining the my @Rule field \"must implement MethodRule\" and I started to suspect a regression, especially since MethodRule is supposedly deprecated. This field was implementing TestRule which should've worked ( as far as I understant rules). As such I decided to test this using the example code from http://kentbeck.github.com/junit/javadoc/latest/org/junit/rules/RuleChain.html\r\n\r\nWhich I updated to be compilable (the example is missing some parentheses for example, could someone update that as well with this fragment?) which gave me the same error. So either there is a regression, or the example is wrong, or I am stupid and missing something: those are all equally possible.\r\n\r\n\timport org.junit.Rule;\r\n\timport org.junit.Test;\r\n\timport org.junit.rules.RuleChain;\r\n\timport org.junit.rules.TestRule;\r\n\timport org.junit.runner.Description;\r\n\timport org.junit.runners.model.Statement;\r\n\timport static org.junit.Assert.assertTrue;\r\n\r\n\r\n\tpublic class UseRuleChain {\r\n\t\t@Rule\r\n\t\tpublic TestRule chain= RuleChain\r\n\t\t\t\t\t\t\t   .outerRule(new LoggingRule(\"outer rule\"))\r\n\t\t\t\t\t\t\t   .around(new LoggingRule(\"middle rule\"))\r\n\t\t\t\t\t\t\t   .around(new LoggingRule(\"inner rule\"));\r\n\r\n\t\t@Test\r\n\t\tpublic void example() {\r\n\t\t\t\tassertTrue(true);\r\n\t\t}\r\n\t\t\r\n\t\tstatic class LoggingRule implements TestRule{\r\n\t\t\tString s;\r\n\t\t\tpublic LoggingRule( String s ){\r\n\t\t\t\tthis.s = s;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic Statement apply( Statement arg0, Description arg1 ){\r\n\t\t\t\tSystem.out.println( this.s );\r\n\t\t\t\treturn arg0;\r\n\t\t\t}\r\n\t\t}\r\n\t}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/351",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/351/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/351/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/351/events",
  "html_url" : "https://github.com/junit-team/junit/issues/351",
  "id" : 2031969,
  "number" : 351,
  "title" : "missing current instance in TestRule apply()",
  "user" : {
    "login" : "RainerW",
    "id" : 118649,
    "avatar_url" : "https://avatars.githubusercontent.com/u/118649?",
    "gravatar_id" : "b3ae51ffe455df09a0418d84a8905f04",
    "url" : "https://api.github.com/users/RainerW",
    "html_url" : "https://github.com/RainerW",
    "followers_url" : "https://api.github.com/users/RainerW/followers",
    "following_url" : "https://api.github.com/users/RainerW/following{/other_user}",
    "gists_url" : "https://api.github.com/users/RainerW/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/RainerW/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/RainerW/subscriptions",
    "organizations_url" : "https://api.github.com/users/RainerW/orgs",
    "repos_url" : "https://api.github.com/users/RainerW/repos",
    "events_url" : "https://api.github.com/users/RainerW/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/RainerW/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/rules",
    "name" : "rules",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 27,
  "created_at" : "2011-10-24T09:45:33Z",
  "updated_at" : "2014-05-18T14:44:11Z",
  "closed_at" : null,
  "body" : "I switched form 4.8 to 4.10 and decided to change my MethodRule's to TestRule ... bad idea.\r\n\r\nI'm missing a way to get the FrameworkMethod, and the current test instance, they are missing now in the apply method:\r\n\r\nold:\r\n  public Statement apply(final Statement base, final FrameworkMethod method, Object target)\r\n\r\nnew:\r\n  public Statement apply(final Statement base, final Description description)\r\n\r\nHow can i get them? I debugged and the actual Statement instance is of type InvokeMethod, this would have what i need, but dosn't have getter for the private fields.\r\n\r\nSo, at the moment i can just keep using MethodRule, but i'm afraid this will not work in further versions anymore. \r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/352",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/352/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/352/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/352/events",
  "html_url" : "https://github.com/junit-team/junit/pull/352",
  "id" : 2059773,
  "number" : 352,
  "title" : "CustomizableJUnit4ClassRunner",
  "user" : {
    "login" : "vasiliygagin",
    "id" : 1062317,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1062317?",
    "gravatar_id" : "79e12494dc371e1dd5095c64dfdfcd1c",
    "url" : "https://api.github.com/users/vasiliygagin",
    "html_url" : "https://github.com/vasiliygagin",
    "followers_url" : "https://api.github.com/users/vasiliygagin/followers",
    "following_url" : "https://api.github.com/users/vasiliygagin/following{/other_user}",
    "gists_url" : "https://api.github.com/users/vasiliygagin/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/vasiliygagin/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/vasiliygagin/subscriptions",
    "organizations_url" : "https://api.github.com/users/vasiliygagin/orgs",
    "repos_url" : "https://api.github.com/users/vasiliygagin/repos",
    "events_url" : "https://api.github.com/users/vasiliygagin/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/vasiliygagin/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-10-26T18:22:47Z",
  "updated_at" : "2011-10-26T23:32:36Z",
  "closed_at" : "2011-10-26T23:32:36Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/352",
    "html_url" : "https://github.com/junit-team/junit/pull/352",
    "diff_url" : "https://github.com/junit-team/junit/pull/352.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/352.patch"
  },
  "body" : "I have implemented CustomizableJUnit4ClassRunner. Not sure if you will lake the idea.\r\nI did not dare to modify BlockJUnitRunner, because change is too big.\r\nIn short changes are:\r\n1) CustomizableJUnit4ClassRunner is an equivalent of BlockJUnitRunner. Can be customized via TestFactory support different test discovery mechanisms.\r\n2) added TestFactory interface and its implementation ReflectionTestFactory. That is there tests based on @test are dicovered.\r\n3) added @TestFactories annotation, to specify multiple test factories. If omitted ReflectionTestFactory is used by default. Could be part of @RunWith.\r\n4) Added FrameworkTest interface. Since supporting tests not based on FrameworkMethod, needed something else.\r\n5) Added AnnotatedFrameworkTest, the implementation of FrameworkTest. This is created by ReflectionTestFactory. FrameworkMethod specific code got moved here and Statement creation.\r\n6) Not related by makes things clear: Instead of using RunBefores and RunAfters with @before and @after, adapted them to TestRule with new classes BeforeRule and AfterRule.\r\n\r\nWhole thing if used simply as @RunWith(CustomizableJUnit4ClassRunner.class) should behave exactly as BlockJUnitRunner would. Except that some deprecated code was eliminated, namely MethodRules.\r\n\r\nIf any part of this makes any sense, please let me now I can, clean it up add some test cases."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/353",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/353/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/353/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/353/events",
  "html_url" : "https://github.com/junit-team/junit/pull/353",
  "id" : 2062912,
  "number" : 353,
  "title" : "New CustomizableJUnit4ClassRunner. Allows pluggable TestFactories.",
  "user" : {
    "login" : "vasiliygagin",
    "id" : 1062317,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1062317?",
    "gravatar_id" : "79e12494dc371e1dd5095c64dfdfcd1c",
    "url" : "https://api.github.com/users/vasiliygagin",
    "html_url" : "https://github.com/vasiliygagin",
    "followers_url" : "https://api.github.com/users/vasiliygagin/followers",
    "following_url" : "https://api.github.com/users/vasiliygagin/following{/other_user}",
    "gists_url" : "https://api.github.com/users/vasiliygagin/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/vasiliygagin/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/vasiliygagin/subscriptions",
    "organizations_url" : "https://api.github.com/users/vasiliygagin/orgs",
    "repos_url" : "https://api.github.com/users/vasiliygagin/repos",
    "events_url" : "https://api.github.com/users/vasiliygagin/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/vasiliygagin/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2011-10-26T23:31:10Z",
  "updated_at" : "2012-04-25T20:39:55Z",
  "closed_at" : "2012-04-25T20:39:54Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/353",
    "html_url" : "https://github.com/junit-team/junit/pull/353",
    "diff_url" : "https://github.com/junit-team/junit/pull/353.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/353.patch"
  },
  "body" : "I have implemented CustomizableJUnit4ClassRunner. Not sure if you will lake the idea.\r\nI did not dare to modify BlockJUnitRunner, because change is too big.\r\nIn short changes are:\r\n1) CustomizableJUnit4ClassRunner is an equivalent of BlockJUnitRunner. Can be customized via TestFactory support different test discovery mechanisms.\r\n2) added TestFactory interface and its implementation ReflectionTestFactory. That is there tests based on @test are dicovered.\r\n3) added @TestFactories annotation, to specify multiple test factories. If omitted ReflectionTestFactory is used by default. Could be part of @RunWith.\r\n4) Added FrameworkTest interface. Since supporting tests not based on FrameworkMethod, needed something else.\r\n5) Added AnnotatedFrameworkTest, the implementation of FrameworkTest. This is created by ReflectionTestFactory. FrameworkMethod specific code got moved here and Statement creation.\r\n6) Not related by makes things clear: Instead of using RunBefores and RunAfters with @before and @after, adapted them to TestRule with new classes BeforeRule and AfterRule.\r\n\r\nWhole thing if used simply as @RunWith(CustomizableJUnit4ClassRunner.class) should behave exactly as BlockJUnitRunner would. Except that some deprecated code was eliminated, namely MethodRules.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/354",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/354/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/354/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/354/events",
  "html_url" : "https://github.com/junit-team/junit/pull/354",
  "id" : 2086361,
  "number" : 354,
  "title" : "Configurable Categories (issue #307)",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2011-10-29T08:58:42Z",
  "updated_at" : "2012-07-14T21:22:32Z",
  "closed_at" : "2012-07-14T19:02:45Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/354",
    "html_url" : "https://github.com/junit-team/junit/pull/354",
    "diff_url" : "https://github.com/junit-team/junit/pull/354.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/354.patch"
  },
  "body" : "This is the implementation for a feature of Configurable Categories\r\nhttps://github.com/KentBeck/junit/issues/307\r\n\r\nYou can make a narrow list of tests in your build process according to build specifics.\r\nSee the test CategoriesConfiguredBySystemPropertiesTest.\r\nThere the suite accepts almost all tests of platforms, and the system properties suppress some of them.\r\n\r\nHere we use a Set of categories which was necessary in this feature. Not using single values in variables fIncluded either fExcluded in Categories class. See their comments in code.\r\n\r\nThis way we have built also a prerequisite for #336."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/355",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/355/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/355/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/355/events",
  "html_url" : "https://github.com/junit-team/junit/issues/355",
  "id" : 2091966,
  "number" : 355,
  "title" : "Improve Assume to allow passing custom message (details)",
  "user" : {
    "login" : "dweiss",
    "id" : 199470,
    "avatar_url" : "https://avatars.githubusercontent.com/u/199470?",
    "gravatar_id" : "3dbfa61ff0ef4f9122da3777f5d8f479",
    "url" : "https://api.github.com/users/dweiss",
    "html_url" : "https://github.com/dweiss",
    "followers_url" : "https://api.github.com/users/dweiss/followers",
    "following_url" : "https://api.github.com/users/dweiss/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dweiss/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dweiss/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dweiss/subscriptions",
    "organizations_url" : "https://api.github.com/users/dweiss/orgs",
    "repos_url" : "https://api.github.com/users/dweiss/repos",
    "events_url" : "https://api.github.com/users/dweiss/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dweiss/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2011-10-30T20:06:32Z",
  "updated_at" : "2012-08-28T16:51:09Z",
  "closed_at" : "2012-08-28T16:51:09Z",
  "body" : "Assume.* and AssumptionViolatedException are now currently pretty restricted in what can be passed as the \"cause\" of a failed assumption -- either a throwable, a Matcher or a simple boolean. Making it more aligned with Asserts (message, boolean) is a nice touch.\r\n\r\nMotivation: real use case scenarios in Apache Lucene project."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/356",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/356/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/356/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/356/events",
  "html_url" : "https://github.com/junit-team/junit/pull/356",
  "id" : 2091976,
  "number" : 356,
  "title" : "Issue 355: Improve Assume to allow passing custom message (details).",
  "user" : {
    "login" : "dweiss",
    "id" : 199470,
    "avatar_url" : "https://avatars.githubusercontent.com/u/199470?",
    "gravatar_id" : "3dbfa61ff0ef4f9122da3777f5d8f479",
    "url" : "https://api.github.com/users/dweiss",
    "html_url" : "https://github.com/dweiss",
    "followers_url" : "https://api.github.com/users/dweiss/followers",
    "following_url" : "https://api.github.com/users/dweiss/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dweiss/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dweiss/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dweiss/subscriptions",
    "organizations_url" : "https://api.github.com/users/dweiss/orgs",
    "repos_url" : "https://api.github.com/users/dweiss/repos",
    "events_url" : "https://api.github.com/users/dweiss/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dweiss/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-10-30T20:09:23Z",
  "updated_at" : "2011-10-30T20:11:06Z",
  "closed_at" : "2011-10-30T20:11:06Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/356",
    "html_url" : "https://github.com/junit-team/junit/pull/356",
    "diff_url" : "https://github.com/junit-team/junit/pull/356.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/356.patch"
  },
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/357",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/357/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/357/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/357/events",
  "html_url" : "https://github.com/junit-team/junit/issues/357",
  "id" : 2092101,
  "number" : 357,
  "title" : "Incompatibility of 4.9/4.10 MethodRule",
  "user" : {
    "login" : "KyleRogers",
    "id" : 990538,
    "avatar_url" : "https://avatars.githubusercontent.com/u/990538?",
    "gravatar_id" : "714ae7f5f223d9a510fdd628559fe4fa",
    "url" : "https://api.github.com/users/KyleRogers",
    "html_url" : "https://github.com/KyleRogers",
    "followers_url" : "https://api.github.com/users/KyleRogers/followers",
    "following_url" : "https://api.github.com/users/KyleRogers/following{/other_user}",
    "gists_url" : "https://api.github.com/users/KyleRogers/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/KyleRogers/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/KyleRogers/subscriptions",
    "organizations_url" : "https://api.github.com/users/KyleRogers/orgs",
    "repos_url" : "https://api.github.com/users/KyleRogers/repos",
    "events_url" : "https://api.github.com/users/KyleRogers/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/KyleRogers/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/rules",
    "name" : "rules",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 11,
  "created_at" : "2011-10-30T20:41:45Z",
  "updated_at" : "2014-01-29T06:28:12Z",
  "closed_at" : null,
  "body" : "I'm not happy with the incompatible changes done to the built-in junit rules (Verifier for example). The problem is the removal of the MethodRule interface from those classes.\n\nThere are two problems with that:\n\n### Upgrading from 4.8.2 to 4.9 means refactoring\n\nIf you've used the built-in rules as mentioned in their own javadoc you'll get compile errors:\n\n```java\n@Rule\npublic final MethodRule timeout = new Timeout(30);\n```\nwon't compile because Timeout does not implement MethodRule anymore (but implements TestRule instead).\n\nThat is okay if you own the code but can be lot of work if you have lots of tests! Nevertheless if anyone has that issue I'd recommend refactoring to\n\n```java\n@Rule\npublic final Timeout timeout = new Timeout(30);\n```\nif you implement a library that might be used with junit pre-4.9 as well as junit 4.9 (and later).\n\n### Libraries can't be compatible with JUnit 4.8.2 and 4.9\n\nThe above might be okay if you own the code. But imagine you're using a third party library. If the library uses the TimeoutRule or the Verifier as mentioned above, you'll have the choice between dropping the third party library or beeing stuck with junit 4.8.2 and postpone the update until the library has.\n\nAdditionally as a library developer you have to choose between supporting either JUnit 4.8.2 and below or JUnit 4.9 . You cannot support both at a time. Thats why: You cannot implement both, TestRule **and** MethodRule because that would break compatibility with 4.8.2 where TestRule does not exist. But implementing MethodRule only is no solution either: Such rules cannot be used together with the @ClassRule annotation. The RuleFieldValidator will *not* complain but those fields or methods annotated with @ClassRule and returning MethodRule implementations will not be run but will be silently ignored.\n\n\n### What could be done?\nThe built-in rules could implement both, MethodRule and TestRule. The @ClassRule annotation should honor MethodRule as well. This would allow library developers to compile with 4.8.2 but library users could still choose between 4.8.2 or below and 4.11 or above ;-)\n\n\nEDIT: The incompatible change happened from 4.8.2 to 4.9 (not from 4.9 to 4.10) - i've updated the versions in this post."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/358",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/358/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/358/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/358/events",
  "html_url" : "https://github.com/junit-team/junit/pull/358",
  "id" : 2151277,
  "number" : 358,
  "title" : "Added naming feature to Parameterized (Issue #24).",
  "user" : {
    "login" : "ffray",
    "id" : 978936,
    "avatar_url" : "https://avatars.githubusercontent.com/u/978936?",
    "gravatar_id" : "692e30ed9d068de9fdf43adf77c1a425",
    "url" : "https://api.github.com/users/ffray",
    "html_url" : "https://github.com/ffray",
    "followers_url" : "https://api.github.com/users/ffray/followers",
    "following_url" : "https://api.github.com/users/ffray/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ffray/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ffray/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ffray/subscriptions",
    "organizations_url" : "https://api.github.com/users/ffray/orgs",
    "repos_url" : "https://api.github.com/users/ffray/repos",
    "events_url" : "https://api.github.com/users/ffray/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ffray/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2011-11-05T09:48:03Z",
  "updated_at" : "2014-02-12T15:24:22Z",
  "closed_at" : "2012-03-27T18:43:26Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/358",
    "html_url" : "https://github.com/junit-team/junit/pull/358",
    "diff_url" : "https://github.com/junit-team/junit/pull/358.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/358.patch"
  },
  "body" : "This tiny patch implements the feature request #24 \"Flexible naming of parameterized tests\".\r\nIt adds a Name class which can be used as one of the parameters returned by the @Parameter method.\r\nThe first Name found will be used, if none is found the old parameter index will be used.\r\nIn both cases, the old name format will be used, so either \"NAME\" for a test-class, or \"method [NAME]\" for each test-method.\r\n\r\nHope you'll find it as useful as I do, so please have a look.\r\nKindly asking to pull this feature.\r\n\r\nBest regards,\r\n\r\nFlorian"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/359",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/359/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/359/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/359/events",
  "html_url" : "https://github.com/junit-team/junit/issues/359",
  "id" : 2169576,
  "number" : 359,
  "title" : "filtering by category can lead to ExceptionInInitializerError",
  "user" : {
    "login" : "nkeywal",
    "id" : 1179343,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1179343?",
    "gravatar_id" : "10f1e6fbe2533b8b1c16cbc7b2105680",
    "url" : "https://api.github.com/users/nkeywal",
    "html_url" : "https://github.com/nkeywal",
    "followers_url" : "https://api.github.com/users/nkeywal/followers",
    "following_url" : "https://api.github.com/users/nkeywal/following{/other_user}",
    "gists_url" : "https://api.github.com/users/nkeywal/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/nkeywal/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/nkeywal/subscriptions",
    "organizations_url" : "https://api.github.com/users/nkeywal/orgs",
    "repos_url" : "https://api.github.com/users/nkeywal/repos",
    "events_url" : "https://api.github.com/users/nkeywal/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/nkeywal/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-11-08T00:15:09Z",
  "updated_at" : "2012-04-21T20:09:33Z",
  "closed_at" : "2012-04-21T20:09:33Z",
  "body" : "I am testing the support of categories in maven/surefire.\r\n\r\nIn categories.Categories#shouldRun you end up calling Description#getTestClass to check the annotations.\r\n\r\nThis is implemented by a direct classForName(className). This leads to a full initialization of this class (static & so on), even if at the end this test class won't be retained. As the initialization can be expensive for some categories of tests, it's already an issue.\r\n\r\nIn a context where there is a separation between the jvm used to select/launch the tests and the jvm used to execute them, it just does not work.\r\n\r\nThis can be very easily fixed in JUnit by not initializing the class in Description#getTestClass by calling\r\n```Class.forName(name, false, getClass().getClassLoader());```\r\n\r\ninstead of\r\n```Class.forName(name);```\r\n\r\nThis method exists since java 1.2 (see http://download.oracle.com/javase/6/docs/api/java/lang/Class.html#forName%28java.lang.String,%20boolean,%20java.lang.ClassLoader%29)\r\n\r\nTested, it works with maven/surefire."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/360",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/360/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/360/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/360/events",
  "html_url" : "https://github.com/junit-team/junit/issues/360",
  "id" : 2192276,
  "number" : 360,
  "title" : "test",
  "user" : {
    "login" : "rdemaeye",
    "id" : 1168544,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1168544?",
    "gravatar_id" : "5810ee4075102ccfa1d27de831541e59",
    "url" : "https://api.github.com/users/rdemaeye",
    "html_url" : "https://github.com/rdemaeye",
    "followers_url" : "https://api.github.com/users/rdemaeye/followers",
    "following_url" : "https://api.github.com/users/rdemaeye/following{/other_user}",
    "gists_url" : "https://api.github.com/users/rdemaeye/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/rdemaeye/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/rdemaeye/subscriptions",
    "organizations_url" : "https://api.github.com/users/rdemaeye/orgs",
    "repos_url" : "https://api.github.com/users/rdemaeye/repos",
    "events_url" : "https://api.github.com/users/rdemaeye/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/rdemaeye/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2011-11-09T22:32:12Z",
  "updated_at" : "2012-06-01T06:10:13Z",
  "closed_at" : "2012-06-01T06:10:13Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/361",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/361/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/361/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/361/events",
  "html_url" : "https://github.com/junit-team/junit/pull/361",
  "id" : 2193329,
  "number" : 361,
  "title" : "Created JUnitSelfTestRunner",
  "user" : {
    "login" : "stefanbirkner",
    "id" : 711349,
    "avatar_url" : "https://avatars.githubusercontent.com/u/711349?",
    "gravatar_id" : "fa5767c967d4733b5937d4e9c265ee4b",
    "url" : "https://api.github.com/users/stefanbirkner",
    "html_url" : "https://github.com/stefanbirkner",
    "followers_url" : "https://api.github.com/users/stefanbirkner/followers",
    "following_url" : "https://api.github.com/users/stefanbirkner/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stefanbirkner/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stefanbirkner/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stefanbirkner/subscriptions",
    "organizations_url" : "https://api.github.com/users/stefanbirkner/orgs",
    "repos_url" : "https://api.github.com/users/stefanbirkner/repos",
    "events_url" : "https://api.github.com/users/stefanbirkner/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stefanbirkner/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2011-11-10T00:24:02Z",
  "updated_at" : "2012-04-27T20:53:02Z",
  "closed_at" : "2012-04-27T20:53:02Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/361",
    "html_url" : "https://github.com/junit-team/junit/pull/361",
    "diff_url" : "https://github.com/junit-team/junit/pull/361.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/361.patch"
  },
  "body" : "JUnitSelfTestRunner is the test runner for declarative tests of JUnit\r\nitself. It runs your test classes and verifies the JUnit events\r\n(failure, test started, ...) according to your specification.\r\n\r\nA test class using this runner has several static inner classes, which\r\nare annotated with @JUnitSelfTest. Every such class is a single test and\r\nthe test specification is provided by a hamcrest matcher, which is an\r\nadditional field annotated with @ExpectedEvents. The\r\nEventCollectorMatchers class provides some matchers.\r\n\r\nHere is an example of a test class with two tests.\r\n\r\n```java\r\n@RunWith(JUnitSelfTestRunner.class)\r\npublic class MySelfTests {\r\n\t@JUnitSelfTest\r\n\tpublic static class FirstSelfTest {\r\n\t\t@ExpectedEvents\r\n\t\tpublic static final Matcher<EventCollector> EXPECTED_EVENTS\r\n\t\t\t= onlySuccessfulTests();\r\n\r\n\t\t@Test\r\n\t\tpublic void successfulTest() {\r\n\t\t\tassertTrue(true);\r\n\t\t}\r\n\t}\r\n\r\n\t@JUnitSelfTest\r\n\tpublic static class SecondSelfTest {\r\n\t\t@ExpectedEvents\r\n\t\tpublic static final Matcher<EventCollector> EXPECTED_EVENTS\r\n\t\t\t= numberOfFailures(1);\r\n\r\n\t\t@Test\r\n\t\tpublic void successfulTest() {\r\n\t\t\tassertTrue(true);\r\n\t\t}\r\n\r\n\t\t@Test\r\n\t\tpublic void failingTest() {\r\n\t\t\tfail();\r\n\t\t}\r\n\t}\r\n}\r\n```"
} ]