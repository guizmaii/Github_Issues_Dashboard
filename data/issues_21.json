[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/636",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/636/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/636/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/636/events",
  "html_url" : "https://github.com/junit-team/junit/pull/636",
  "id" : 11042566,
  "number" : 636,
  "title" : "Remove incorrect copyrights",
  "user" : {
    "login" : "kcooney",
    "id" : 478190,
    "avatar_url" : "https://avatars.githubusercontent.com/u/478190?",
    "gravatar_id" : "3e1323e035210af33f94c2d19192c936",
    "url" : "https://api.github.com/users/kcooney",
    "html_url" : "https://github.com/kcooney",
    "followers_url" : "https://api.github.com/users/kcooney/followers",
    "following_url" : "https://api.github.com/users/kcooney/following{/other_user}",
    "gists_url" : "https://api.github.com/users/kcooney/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/kcooney/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/kcooney/subscriptions",
    "organizations_url" : "https://api.github.com/users/kcooney/orgs",
    "repos_url" : "https://api.github.com/users/kcooney/repos",
    "events_url" : "https://api.github.com/users/kcooney/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/kcooney/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2013-02-15T16:42:02Z",
  "updated_at" : "2013-08-26T00:14:55Z",
  "closed_at" : "2013-02-18T19:20:52Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/636",
    "html_url" : "https://github.com/junit-team/junit/pull/636",
    "diff_url" : "https://github.com/junit-team/junit/pull/636.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/636.patch"
  },
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/637",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/637/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/637/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/637/events",
  "html_url" : "https://github.com/junit-team/junit/issues/637",
  "id" : 11088119,
  "number" : 637,
  "title" : "AllMembersSupplier treats single and array datapoint parameter type matching differently",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-02-17T15:43:59Z",
  "updated_at" : "2013-02-18T18:20:58Z",
  "closed_at" : null,
  "body" : "(This is primarily a note for me to fix this shortly, since I've come up against it in #639)\r\n\r\nThis fails, saying no valid parameters were found:\r\n\r\n```java\r\n@RunWith(Theories.class)\r\npublic static class SingleDataPointTheory {\r\n    @DataPoint\r\n    public static Object num() {\r\n        return 10;\r\n    }\r\n\r\n    @Theory\r\n    public void theory(Integer x) {\r\n    }\r\n}\r\n```\r\n\r\nThis meanwhile, happily passes, using the parameter from the array:\r\n\r\n```java\r\n@RunWith(Theories.class)\r\npublic static class DataPointArrayTheory {\r\n    @DataPoints\r\n    public static Object[] num() {\r\n        return new Object[] { 10 };\r\n    }\r\n\r\n    @Theory\r\n    public void theory(Integer x) {\r\n    }\r\n}\r\n```\r\n\r\nIn addition, this _doesn't_ pass (while the single `@DataPoint` equivalent does), as it finds no parameters:\r\n\r\n```java\r\n@RunWith(Theories.class)\r\npublic static class DataPointArrayTheoryWithPrimitives {\r\n    @DataPoints\r\n    public static int[] num() {\r\n        return new int[] { 10 };\r\n    }\r\n\r\n    @Theory\r\n    public void theory(int x) {\r\n    }\r\n}\r\n```\r\n\r\nThis is because of two closely related problems: \r\n\r\n * AllMembersSupplier chooses which values to use for parameters in slightly different ways depending on where the parameter came from. For all fields and single-valued DataPoint methods, it's based on the static type information available (the method return type/field type). For multi-valued DataPoints methods, it's based on the actual type of the value in the DataPoints array (note that this differs both from the single-valued version, and the multi-valued field array version), as tested by ParameterSignature.canAcceptValue()\r\n\r\n * The values examined in canAcceptValue are boxed first, and ParameterSignature.canAcceptValue doesn't take into account boxing. Thus canAcceptValue(Integer) fails for int method parameters, meaning int's found in DataPoints arrays returned by these methods are never considered as potential parameters. In addition, canAcceptValue(int) will fail for Integer method parameters, but since the values are always autoboxed first this never comes up.\r\n\r\nI'd suggest that either all fields and methods are based purely on whether the static type is assignable (e.g. Object fields are never used for Integer parameters, even if the values are Integers), or that parameters are always considered on their value (i.e. field type is irrelevant, as long as the values can be used for the given parameter).\r\n\r\nI think the second is more intuitive myself; any datapoint that can be legitimately used for a parameter should be. Also because I've got another nearly finished implementation for Iterable datapoints that requires that behaviour, as you can't get the type of an Iterable<String> directly, unlike with String[], so you have to always examine these values."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/638",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/638/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/638/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/638/events",
  "html_url" : "https://github.com/junit-team/junit/issues/638",
  "id" : 11088753,
  "number" : 638,
  "title" : "Multi-valued DataPoints methods are evaluated only once, but each single-valued DataPoint method is called once for each assignment",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-02-17T16:32:05Z",
  "updated_at" : "2013-02-18T18:19:57Z",
  "closed_at" : null,
  "body" : "(This is primarily a note for me to look into this more shortly, since I've come up against it in #639)\r\n\r\n`@DataPoints` array methods are called once in AllMembersSupplier, and the values then reused for each theory. \r\n\r\nSingle DataPoint methods are instead called once for each possible assignment (for each unique and complete set of values for the given theory method)\r\n\r\nThis means that mutable values in DataPoints return values can be changed and then easily cause interactions between tests. Single DataPoint values can't though, and indeed there's a test specifically checking this (WithDataPointMethod.mutableObjectsAreCreatedAfresh).\r\n\r\nMeanwhile field values are always reused (since they clearly can't be regenerated).\r\n\r\nI think (debatable) both these datapoint method evaluation mechanisms should really be made to match instead, one way or the other, either by deferring array method execution somehow (quite complicated and hard to define), or by making single DataPoint values shared, as all other DataPoint values are.\r\n\r\nI think (very very debatable) just running each DataPoint method once at the start and reusing all the values consistently is better myself (more intuitive to use, much simpler to implement). Datapoints also arguably really shouldn't be mutable in normal usage anyway. Finally users that do desire this behaviour can instead create a ParameterSupplier to support their specific instances of this case (where values must be regenerated) fairly simply: define a ParameterSupplier that returns a PotentialAssignment subclass where getValue() generates the new value in some way, rather than just returning the same one."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/639",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/639/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/639/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/639/events",
  "html_url" : "https://github.com/junit-team/junit/pull/639",
  "id" : 11089114,
  "number" : 639,
  "title" : "Fixes #449, stopping AllMembersSupplier & Theories hiding DataPoints method exceptions",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2013-02-17T16:42:06Z",
  "updated_at" : "2013-03-26T17:27:38Z",
  "closed_at" : "2013-03-26T17:27:28Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/639",
    "html_url" : "https://github.com/junit-team/junit/pull/639",
    "diff_url" : "https://github.com/junit-team/junit/pull/639.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/639.patch"
  },
  "body" : "This also includes a rewrite of the Theory nullsAccepted code, since that relied on the previous behaviour of this. It's now just a synonym for Assume.assumeNotNull(params[]), and is handled in the Theories runner itself, which seems much nicer to me.\r\n\r\nSome of the code around this has a good few discrepancies in how it handles datapoint array methods vs single datapoint methods, which make this a little messy, but I'm going to look at fixing these at a later stage and I've left them as they are. I've filed issues for them for now, as #637 and #638."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/640",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/640/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/640/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/640/events",
  "html_url" : "https://github.com/junit-team/junit/pull/640",
  "id" : 11091335,
  "number" : 640,
  "title" : "Issue #162 Implementation",
  "user" : {
    "login" : "coreyjv",
    "id" : 2730750,
    "avatar_url" : "https://avatars.githubusercontent.com/u/2730750?",
    "gravatar_id" : "26073c8b2f7cbdfe3139a26bfd0c8d45",
    "url" : "https://api.github.com/users/coreyjv",
    "html_url" : "https://github.com/coreyjv",
    "followers_url" : "https://api.github.com/users/coreyjv/followers",
    "following_url" : "https://api.github.com/users/coreyjv/following{/other_user}",
    "gists_url" : "https://api.github.com/users/coreyjv/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/coreyjv/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/coreyjv/subscriptions",
    "organizations_url" : "https://api.github.com/users/coreyjv/orgs",
    "repos_url" : "https://api.github.com/users/coreyjv/repos",
    "events_url" : "https://api.github.com/users/coreyjv/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/coreyjv/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 19,
  "created_at" : "2013-02-17T18:23:40Z",
  "updated_at" : "2013-03-05T23:20:40Z",
  "closed_at" : "2013-03-05T22:43:21Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/640",
    "html_url" : "https://github.com/junit-team/junit/pull/640",
    "diff_url" : "https://github.com/junit-team/junit/pull/640.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/640.patch"
  },
  "body" : "Added ConcurrentHashMap to improve performance."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/641",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/641/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/641/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/641/events",
  "html_url" : "https://github.com/junit-team/junit/pull/641",
  "id" : 11097539,
  "number" : 641,
  "title" : "Twaeks on pull requests # 625 and # 578",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2013-02-17T23:19:17Z",
  "updated_at" : "2013-02-18T16:40:22Z",
  "closed_at" : "2013-02-18T16:40:22Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/641",
    "html_url" : "https://github.com/junit-team/junit/pull/641",
    "diff_url" : "https://github.com/junit-team/junit/pull/641.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/641.patch"
  },
  "body" : "@dsaff\r\n@kcooney\r\nI hope you will not kill me now :)\r\n\r\nAll necessary changes regarding concurrent RunNotifier are here.\r\nIt's clear documentation for others as well.\r\nIt was hard for me not to be lost in #625 and #578, and for others could be even much harder.\r\n\r\nI did NOT ignore the addons of both authors.\r\n\r\nTests:\r\n+ AllTests\r\n+ ConcurrentRunNotifierTest (from mine repo)\r\n+ SynchronizedRunListenerTest (from Kevin's repo)\r\n+ RunNotifierTest (added bottom tests from my repo)\r\n\r\nCode:\r\n+ RunListener (only important Javadoc)\r\n+ RunNotifier (#wrapSynchronizedIfNotThreadSafe is internal patch and should not be public)\r\n+ SynchronizedRunListener (simple synchronization because of simplicity and modern VM optimize fast)\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/642",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/642/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/642/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/642/events",
  "html_url" : "https://github.com/junit-team/junit/issues/642",
  "id" : 11193155,
  "number" : 642,
  "title" : "Make @FixMethodOrder inherited annotation",
  "user" : {
    "login" : "lgoldstein",
    "id" : 1436205,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1436205?",
    "gravatar_id" : "24814221985fa296cd872763fe713688",
    "url" : "https://api.github.com/users/lgoldstein",
    "html_url" : "https://github.com/lgoldstein",
    "followers_url" : "https://api.github.com/users/lgoldstein/followers",
    "following_url" : "https://api.github.com/users/lgoldstein/following{/other_user}",
    "gists_url" : "https://api.github.com/users/lgoldstein/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/lgoldstein/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/lgoldstein/subscriptions",
    "organizations_url" : "https://api.github.com/users/lgoldstein/orgs",
    "repos_url" : "https://api.github.com/users/lgoldstein/repos",
    "events_url" : "https://api.github.com/users/lgoldstein/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/lgoldstein/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2013-02-20T11:17:22Z",
  "updated_at" : "2014-01-29T06:59:08Z",
  "closed_at" : "2014-01-29T06:59:08Z",
  "body" : "I think that _@FixMethodOrder_ should be made _@Inherited_. The reason for this is that in many of my projects I use a base class as the \"root\" of all test classes and find it very useful to be able to decide something that can affect all my tests - _@FixMethodOrder_ being one of them."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/643",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/643/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/643/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/643/events",
  "html_url" : "https://github.com/junit-team/junit/issues/643",
  "id" : 11322613,
  "number" : 643,
  "title" : "ExpectedException class not found",
  "user" : {
    "login" : "stanl3y",
    "id" : 2943662,
    "avatar_url" : "https://avatars.githubusercontent.com/u/2943662?",
    "gravatar_id" : "a99ef30bb0519843c39e7d90109527d8",
    "url" : "https://api.github.com/users/stanl3y",
    "html_url" : "https://github.com/stanl3y",
    "followers_url" : "https://api.github.com/users/stanl3y/followers",
    "following_url" : "https://api.github.com/users/stanl3y/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stanl3y/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stanl3y/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stanl3y/subscriptions",
    "organizations_url" : "https://api.github.com/users/stanl3y/orgs",
    "repos_url" : "https://api.github.com/users/stanl3y/repos",
    "events_url" : "https://api.github.com/users/stanl3y/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stanl3y/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2013-02-23T17:35:03Z",
  "updated_at" : "2013-05-04T08:51:31Z",
  "closed_at" : "2013-05-04T08:51:31Z",
  "body" : "I am trying to test for exceptions, but the ExpectedException class is missing.\r\n\r\nsymbol  : class ExpectedException\r\nlocation: class CircleTest\r\n    public ExpectedException thrown = ExpectedException.none();\r\n\r\nI have:\r\njunit-4.11.jar\r\nhamcrest-core-1.3.jar"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/644",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/644/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/644/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/644/events",
  "html_url" : "https://github.com/junit-team/junit/issues/644",
  "id" : 11391414,
  "number" : 644,
  "title" : "RunListener testRunStarted method not will not be run.",
  "user" : {
    "login" : "wutingbupt",
    "id" : 1169277,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1169277?",
    "gravatar_id" : "c40fb3d87f2509dabbd780c84977d0c3",
    "url" : "https://api.github.com/users/wutingbupt",
    "html_url" : "https://github.com/wutingbupt",
    "followers_url" : "https://api.github.com/users/wutingbupt/followers",
    "following_url" : "https://api.github.com/users/wutingbupt/following{/other_user}",
    "gists_url" : "https://api.github.com/users/wutingbupt/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/wutingbupt/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/wutingbupt/subscriptions",
    "organizations_url" : "https://api.github.com/users/wutingbupt/orgs",
    "repos_url" : "https://api.github.com/users/wutingbupt/repos",
    "events_url" : "https://api.github.com/users/wutingbupt/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/wutingbupt/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2013-02-26T02:57:03Z",
  "updated_at" : "2013-02-27T01:06:28Z",
  "closed_at" : "2013-02-27T01:06:28Z",
  "body" : "Hi there,\r\n\r\nI try to create our own run listener and I also create our own runner: DemoJunit4Runner\r\n\r\nIn this runner, I try to override the run method and add this listener at run method.\r\n\r\nLater I call super.run(xx)\r\n\r\nBut I founded testRunStarted will not be called, but related finish method will be called.\r\n\r\nBTW, the listener works well if I start it through the JcatCore directly add it.\r\n\r\nI create a simple class and add a RunWith(my demo runner)\r\n\r\nthe result is like I said before, the testRunStarted will not be called.\r\n\r\nDid I missed something?\r\n\r\nBr,\r\nTim"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/645",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/645/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/645/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/645/events",
  "html_url" : "https://github.com/junit-team/junit/issues/645",
  "id" : 11409966,
  "number" : 645,
  "title" : "How to compose several test case with a suite (Using our own runner)",
  "user" : {
    "login" : "wutingbupt",
    "id" : 1169277,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1169277?",
    "gravatar_id" : "c40fb3d87f2509dabbd780c84977d0c3",
    "url" : "https://api.github.com/users/wutingbupt",
    "html_url" : "https://github.com/wutingbupt",
    "followers_url" : "https://api.github.com/users/wutingbupt/followers",
    "following_url" : "https://api.github.com/users/wutingbupt/following{/other_user}",
    "gists_url" : "https://api.github.com/users/wutingbupt/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/wutingbupt/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/wutingbupt/subscriptions",
    "organizations_url" : "https://api.github.com/users/wutingbupt/orgs",
    "repos_url" : "https://api.github.com/users/wutingbupt/repos",
    "events_url" : "https://api.github.com/users/wutingbupt/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/wutingbupt/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2013-02-26T14:06:39Z",
  "updated_at" : "2013-02-27T01:06:22Z",
  "closed_at" : "2013-02-27T01:06:22Z",
  "body" : "Hi there,\r\n\r\nI create my own runner, but my runner can not finish the run suite feature (Just like @Suite.SuiteClass() feature).\r\n\r\nAny good suggestion for this? Using our own runner but provide the run suite feature?\r\n\r\nThanks in advance.\r\n\r\nBr,\r\nTim"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/646",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/646/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/646/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/646/events",
  "html_url" : "https://github.com/junit-team/junit/pull/646",
  "id" : 11421777,
  "number" : 646,
  "title" : "Added utilityClassWellDefined",
  "user" : {
    "login" : "trajano",
    "id" : 110627,
    "avatar_url" : "https://avatars.githubusercontent.com/u/110627?",
    "gravatar_id" : "c275fdb8fe90004e9923daefaf5f0fb3",
    "url" : "https://api.github.com/users/trajano",
    "html_url" : "https://github.com/trajano",
    "followers_url" : "https://api.github.com/users/trajano/followers",
    "following_url" : "https://api.github.com/users/trajano/following{/other_user}",
    "gists_url" : "https://api.github.com/users/trajano/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/trajano/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/trajano/subscriptions",
    "organizations_url" : "https://api.github.com/users/trajano/orgs",
    "repos_url" : "https://api.github.com/users/trajano/repos",
    "events_url" : "https://api.github.com/users/trajano/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/trajano/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2013-02-26T18:31:05Z",
  "updated_at" : "2013-05-31T14:52:16Z",
  "closed_at" : "2013-02-27T22:16:13Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/646",
    "html_url" : "https://github.com/junit-team/junit/pull/646",
    "diff_url" : "https://github.com/junit-team/junit/pull/646.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/646.patch"
  },
  "body" : "Based on\r\nhttps://github.com/trajano/maven-jee6/blob/master/maven-jee6-test/src/main/java/net/trajano/maven_jee6/test/UtilityClassTestUtil.java\r\n\r\nand http://stackoverflow.com/a/10872497/242042"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/647",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/647/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/647/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/647/events",
  "html_url" : "https://github.com/junit-team/junit/pull/647",
  "id" : 11527720,
  "number" : 647,
  "title" : "--filter option implemented.",
  "user" : {
    "login" : "noel-yap",
    "id" : 1414385,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1414385?",
    "gravatar_id" : "3d940f701f1bc6bf922f910258e19698",
    "url" : "https://api.github.com/users/noel-yap",
    "html_url" : "https://github.com/noel-yap",
    "followers_url" : "https://api.github.com/users/noel-yap/followers",
    "following_url" : "https://api.github.com/users/noel-yap/following{/other_user}",
    "gists_url" : "https://api.github.com/users/noel-yap/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/noel-yap/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/noel-yap/subscriptions",
    "organizations_url" : "https://api.github.com/users/noel-yap/orgs",
    "repos_url" : "https://api.github.com/users/noel-yap/repos",
    "events_url" : "https://api.github.com/users/noel-yap/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/noel-yap/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 40,
  "created_at" : "2013-03-01T01:11:46Z",
  "updated_at" : "2013-06-06T05:22:02Z",
  "closed_at" : "2013-06-05T00:42:12Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/647",
    "html_url" : "https://github.com/junit-team/junit/pull/647",
    "diff_url" : "https://github.com/junit-team/junit/pull/647.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/647.patch"
  },
  "body" : "Currently SuiteTest.suiteShouldBeOKwithNonDefaultConstructor() fails but I don't know what ought to be done about that. Under what circumstances does it make sense to have a Suite with no SuiteClasses? Suggestions?\r\n\r\nI'll also be refactoring out the command line processing as per @kcooney and will writing more tests for the code that has changed."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/648",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/648/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/648/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/648/events",
  "html_url" : "https://github.com/junit-team/junit/pull/648",
  "id" : 11587756,
  "number" : 648,
  "title" : "Fix inconsistencies in javadocs.",
  "user" : {
    "login" : "dlam",
    "id" : 831038,
    "avatar_url" : "https://avatars.githubusercontent.com/u/831038?",
    "gravatar_id" : "8c3938cece44ef4288b84f935c9eab57",
    "url" : "https://api.github.com/users/dlam",
    "html_url" : "https://github.com/dlam",
    "followers_url" : "https://api.github.com/users/dlam/followers",
    "following_url" : "https://api.github.com/users/dlam/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dlam/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dlam/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dlam/subscriptions",
    "organizations_url" : "https://api.github.com/users/dlam/orgs",
    "repos_url" : "https://api.github.com/users/dlam/repos",
    "events_url" : "https://api.github.com/users/dlam/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dlam/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2013-03-03T06:32:18Z",
  "updated_at" : "2013-03-07T17:04:01Z",
  "closed_at" : "2013-03-07T17:03:56Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/648",
    "html_url" : "https://github.com/junit-team/junit/pull/648",
    "diff_url" : "https://github.com/junit-team/junit/pull/648.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/648.patch"
  },
  "body" : "These changes were made with consistency with the rest of the project, and with Oracle's Java code conventions in mind:\r\n - \\<p> tags are now on their own new line, separating paragraphs, and without empty new lines above and/or below them.\r\n - Remove unnecessary new lines separating lists and \\<pre> tags.\r\n - Remove unnecessary \\<p> tags for leading paragraphs.\r\n - Add missing \\<p> tags.\r\n - Remove white space immediately following \\<p> tags.\r\n - Remove all unnecessary closing \\</p> tags.\r\n\r\nSource for Oracle's Javadoc conventions:\r\nhttp://www.oracle.com/technetwork/java/javase/documentation/index-137868.html"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/649",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/649/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/649/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/649/events",
  "html_url" : "https://github.com/junit-team/junit/pull/649",
  "id" : 11768378,
  "number" : 649,
  "title" : "Adding MethodRuleChain for chaining MethodRule classes.",
  "user" : {
    "login" : "lordofthejars",
    "id" : 1517153,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1517153?",
    "gravatar_id" : "8ac4459a1de90107204dbe42c2e687be",
    "url" : "https://api.github.com/users/lordofthejars",
    "html_url" : "https://github.com/lordofthejars",
    "followers_url" : "https://api.github.com/users/lordofthejars/followers",
    "following_url" : "https://api.github.com/users/lordofthejars/following{/other_user}",
    "gists_url" : "https://api.github.com/users/lordofthejars/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/lordofthejars/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/lordofthejars/subscriptions",
    "organizations_url" : "https://api.github.com/users/lordofthejars/orgs",
    "repos_url" : "https://api.github.com/users/lordofthejars/repos",
    "events_url" : "https://api.github.com/users/lordofthejars/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/lordofthejars/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2013-03-07T16:53:04Z",
  "updated_at" : "2013-05-06T13:34:43Z",
  "closed_at" : "2013-05-06T13:34:43Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/649",
    "html_url" : "https://github.com/junit-team/junit/pull/649",
    "diff_url" : "https://github.com/junit-team/junit/pull/649.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/649.patch"
  },
  "body" : "Adding MethodRuleChain for chaining MethodRule classes. MethodRule was deprecated in version *junit 4.10*, but was undeprecated for version 4.11, so it seams reasonable that if you can order *TestRule* executions by using *RuleChain*, we can do the same for *MethodRules*. For this purpose MethodRuleChain has been implemented which works equal as *RuleChain*, but receiving a MethodRule instance."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/650",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/650/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/650/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/650/events",
  "html_url" : "https://github.com/junit-team/junit/issues/650",
  "id" : 11768601,
  "number" : 650,
  "title" : "Implement RuleFactories to unify rule target generation sites.",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2013-03-07T16:57:20Z",
  "updated_at" : "2013-03-15T21:56:39Z",
  "closed_at" : null,
  "body" : "See https://docs.google.com/document/d/1B6Z45BSGsY08rZqe2KUZTJ3RVsnUE1-HcXjl5MFm9ls/edit?usp=sharing"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/651",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/651/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/651/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/651/events",
  "html_url" : "https://github.com/junit-team/junit/pull/651",
  "id" : 11861794,
  "number" : 651,
  "title" : "Fixes for #637, making theory parameters assignment more consistent across sources",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2013-03-11T02:23:55Z",
  "updated_at" : "2013-09-04T22:08:17Z",
  "closed_at" : "2013-03-19T14:56:08Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/651",
    "html_url" : "https://github.com/junit-team/junit/pull/651",
    "diff_url" : "https://github.com/junit-team/junit/pull/651.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/651.patch"
  },
  "body" : "There's a few inconsistencies in theory implementation, as discussed in #637. This shouldn't make any differences to reasonable normal usage, just to some edge cases.\r\n\r\nEssential changes:\r\n\r\n * Datapoint matches for all field datapoints and multi-valued method datapoints (i.e. not single-valued method datapoints) are done on runtime type, not the field/method return type (previously this was the case for multi-valued array methods only)\r\n\r\n * All datapoint type matches now correctly handle boxing and unboxing for primitive and wrapper types; int values will be considered for theory parameters that are Integer assignable, and Integer values will be considered for int parameters)\r\n\r\n(#637 has examples and more details on this)\r\n\r\nThis conflicts with my other open pull request (#639), but given that we want to make the behaviour in that case more complicated, I think it would be better to fix these inconsistencies first, and then continue that on top. This is also most of the setup work for a fix I have going for #110/#126, as we have to pull types at runtime for iterables there anyway (since the generic type info isn't reliably available)."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/652",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/652/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/652/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/652/events",
  "html_url" : "https://github.com/junit-team/junit/issues/652",
  "id" : 12009280,
  "number" : 652,
  "title" : "Three broken links on http://junit.sourceforge.net",
  "user" : {
    "login" : "dmjones500",
    "id" : 3658671,
    "avatar_url" : "https://avatars.githubusercontent.com/u/3658671?",
    "gravatar_id" : "32b712ec4f7dcc2e8a6907b9903aa8ba",
    "url" : "https://api.github.com/users/dmjones500",
    "html_url" : "https://github.com/dmjones500",
    "followers_url" : "https://api.github.com/users/dmjones500/followers",
    "following_url" : "https://api.github.com/users/dmjones500/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dmjones500/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dmjones500/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dmjones500/subscriptions",
    "organizations_url" : "https://api.github.com/users/dmjones500/orgs",
    "repos_url" : "https://api.github.com/users/dmjones500/repos",
    "events_url" : "https://api.github.com/users/dmjones500/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dmjones500/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-03-14T08:24:00Z",
  "updated_at" : "2013-03-14T20:01:37Z",
  "closed_at" : "2013-03-14T20:01:37Z",
  "body" : "The first hit for \"junit\" on Google is currently http://junit.sourceforge.net. There are three broken links on this page:\r\n\r\n1. The link to www.junit.org does not work, but this is covered by https://github.com/junit-team/junit/issues/619. Perhaps in the meantime, the link can be changed to junit.org?\r\n\r\n2. The link to the Github page points at http://github.com/KentBeck/junit, whereas is ought to point to this project (https://github.com/junit-team/junit).\r\n\r\n3. The link to the Javadocs points at http://kentbeck.github.com/junit/javadoc/latest/, which gives a 404."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/653",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/653/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/653/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/653/events",
  "html_url" : "https://github.com/junit-team/junit/pull/653",
  "id" : 12102150,
  "number" : 653,
  "title" : "Added javadoc to the DataPoint annotation",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-03-16T23:20:15Z",
  "updated_at" : "2013-03-21T13:56:15Z",
  "closed_at" : "2013-03-21T13:56:12Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/653",
    "html_url" : "https://github.com/junit-team/junit/pull/653",
    "diff_url" : "https://github.com/junit-team/junit/pull/653.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/653.patch"
  },
  "body" : "Whoops, I've just noticed that back in #621 I added JavaDoc to `@DataPoints` and `@FromDataPoints`, but not `@DataPoint` singular. This is that."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/654",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/654/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/654/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/654/events",
  "html_url" : "https://github.com/junit-team/junit/pull/654",
  "id" : 12103234,
  "number" : 654,
  "title" : "Autogenerated datapoints for boolean and enum parameters",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-03-17T01:19:46Z",
  "updated_at" : "2013-05-04T10:39:36Z",
  "closed_at" : "2013-03-19T14:59:21Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/654",
    "html_url" : "https://github.com/junit-team/junit/pull/654",
    "diff_url" : "https://github.com/junit-team/junit/pull/654.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/654.patch"
  },
  "body" : "This automatically generates datapoints for enums (all values) and booleans/Booleans (true and false) if there is no other source available for them: i.e. after all other datapoint supplier evaluation no acceptable values can be found. This fixes #109."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/655",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/655/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/655/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/655/events",
  "html_url" : "https://github.com/junit-team/junit/issues/655",
  "id" : 12166192,
  "number" : 655,
  "title" : "Parameterized Suites",
  "user" : {
    "login" : "yterradas",
    "id" : 3440089,
    "avatar_url" : "https://avatars.githubusercontent.com/u/3440089?",
    "gravatar_id" : "ae44b7ac4049c18c3860f0f977fa4b4f",
    "url" : "https://api.github.com/users/yterradas",
    "html_url" : "https://github.com/yterradas",
    "followers_url" : "https://api.github.com/users/yterradas/followers",
    "following_url" : "https://api.github.com/users/yterradas/following{/other_user}",
    "gists_url" : "https://api.github.com/users/yterradas/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/yterradas/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/yterradas/subscriptions",
    "organizations_url" : "https://api.github.com/users/yterradas/orgs",
    "repos_url" : "https://api.github.com/users/yterradas/repos",
    "events_url" : "https://api.github.com/users/yterradas/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/yterradas/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2013-03-19T04:37:44Z",
  "updated_at" : "2014-05-18T10:26:28Z",
  "closed_at" : null,
  "body" : "hi, \r\n\r\ni was wondering if there are any plans to parameterized suite classes. i refer to a way to annotate suites with @RunWith(Parameterized.class), add the parameters inside the suite, therefore having all of the classes in the @Suite.Classes() run with those parameters. after looking at the code i think it's possible by making one of the constructors in SuiteClass protected instead of private, thus maintaining encapsulation. i can go more in details of my possible solution, unless your, junit team's, intention was never to have or allow such feature. also if there is, currently, a way to accomplish that could you be kind to briefly explain it, please. thank you in advance for your time. "
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/656",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/656/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/656/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/656/events",
  "html_url" : "https://github.com/junit-team/junit/issues/656",
  "id" : 12426970,
  "number" : 656,
  "title" : "RunWith(Enclosed.class) should run tests in outer class",
  "user" : {
    "login" : "christophsturm",
    "id" : 1999,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1999?",
    "gravatar_id" : "5b157d259f2e842df5877e202edfb840",
    "url" : "https://api.github.com/users/christophsturm",
    "html_url" : "https://github.com/christophsturm",
    "followers_url" : "https://api.github.com/users/christophsturm/followers",
    "following_url" : "https://api.github.com/users/christophsturm/following{/other_user}",
    "gists_url" : "https://api.github.com/users/christophsturm/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/christophsturm/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/christophsturm/subscriptions",
    "organizations_url" : "https://api.github.com/users/christophsturm/orgs",
    "repos_url" : "https://api.github.com/users/christophsturm/repos",
    "events_url" : "https://api.github.com/users/christophsturm/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/christophsturm/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2013-03-25T22:53:36Z",
  "updated_at" : "2013-04-16T20:18:08Z",
  "closed_at" : null,
  "body" : "in this example:\r\n<pre>\r\n@RunWith(Enclosed.class)\r\npublic class OuterClassTest  {\r\n    @Before\r\n    public void startStore() throws Exception {\r\n...\r\n    }\r\n\r\n    @Test\r\n    public void outerTest1() {\r\n...\r\n    }\r\n\r\n    public static class PoolTest extends JedisPoolTestBase {\r\n        private StatisticsStore storer;\r\n\r\n        @Before\r\n        public void setupStorer() {\r\n        }\r\n\r\n\r\n         @Test\r\n         public void innerTest1() {\r\n          ...  \r\n         }\r\n    }\r\n}\r\n</pre>\r\nonly innerTest1 runs. \r\nIt would be more useful if outerTest1 was also run.\r\nalso @Before classes in the outer class should run for tests in the inner class.\r\nthats how nested tests work in other languages.\r\nis this easily possible?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/657",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/657/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/657/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/657/events",
  "html_url" : "https://github.com/junit-team/junit/pull/657",
  "id" : 12639872,
  "number" : 657,
  "title" : "Simplify FailOnTimeout by using FutureTask",
  "user" : {
    "login" : "kcooney",
    "id" : 478190,
    "avatar_url" : "https://avatars.githubusercontent.com/u/478190?",
    "gravatar_id" : "3e1323e035210af33f94c2d19192c936",
    "url" : "https://api.github.com/users/kcooney",
    "html_url" : "https://github.com/kcooney",
    "followers_url" : "https://api.github.com/users/kcooney/followers",
    "following_url" : "https://api.github.com/users/kcooney/following{/other_user}",
    "gists_url" : "https://api.github.com/users/kcooney/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/kcooney/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/kcooney/subscriptions",
    "organizations_url" : "https://api.github.com/users/kcooney/orgs",
    "repos_url" : "https://api.github.com/users/kcooney/repos",
    "events_url" : "https://api.github.com/users/kcooney/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/kcooney/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-03-31T06:35:07Z",
  "updated_at" : "2014-01-10T15:01:10Z",
  "closed_at" : "2013-04-01T17:11:08Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/657",
    "html_url" : "https://github.com/junit-team/junit/pull/657",
    "diff_url" : "https://github.com/junit-team/junit/pull/657.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/657.patch"
  },
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/658",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/658/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/658/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/658/events",
  "html_url" : "https://github.com/junit-team/junit/pull/658",
  "id" : 12649229,
  "number" : 658,
  "title" : "Added support for iterable datapoints",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2013-03-31T23:59:09Z",
  "updated_at" : "2013-09-04T22:38:13Z",
  "closed_at" : "2013-04-02T14:56:45Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/658",
    "html_url" : "https://github.com/junit-team/junit/pull/658",
    "diff_url" : "https://github.com/junit-team/junit/pull/658.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/658.patch"
  },
  "body" : "This patch adds support for iterable datapoints, building on my previous work around all this stuff."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/659",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/659/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/659/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/659/events",
  "html_url" : "https://github.com/junit-team/junit/pull/659",
  "id" : 12719663,
  "number" : 659,
  "title" : "Collect annotations for JUnit3 test methods.",
  "user" : {
    "login" : "brettchabot",
    "id" : 4038919,
    "avatar_url" : "https://avatars.githubusercontent.com/u/4038919?",
    "gravatar_id" : "b22ac7b4657d616d29285f8c03253e5a",
    "url" : "https://api.github.com/users/brettchabot",
    "html_url" : "https://github.com/brettchabot",
    "followers_url" : "https://api.github.com/users/brettchabot/followers",
    "following_url" : "https://api.github.com/users/brettchabot/following{/other_user}",
    "gists_url" : "https://api.github.com/users/brettchabot/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/brettchabot/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/brettchabot/subscriptions",
    "organizations_url" : "https://api.github.com/users/brettchabot/orgs",
    "repos_url" : "https://api.github.com/users/brettchabot/repos",
    "events_url" : "https://api.github.com/users/brettchabot/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/brettchabot/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2013-04-02T18:53:22Z",
  "updated_at" : "2013-10-09T00:20:45Z",
  "closed_at" : "2013-05-28T18:56:15Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/659",
    "html_url" : "https://github.com/junit-team/junit/pull/659",
    "diff_url" : "https://github.com/junit-team/junit/pull/659.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/659.patch"
  },
  "body" : "Collect annotations for JUnit3 test methods.\r\n\r\nNecessary to support test filtering by annotation."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/660",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/660/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/660/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/660/events",
  "html_url" : "https://github.com/junit-team/junit/pull/660",
  "id" : 12869639,
  "number" : 660,
  "title" : "Too short timeout in TimeoutRuleTest.",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-04-06T00:34:05Z",
  "updated_at" : "2013-04-08T19:12:43Z",
  "closed_at" : "2013-04-08T19:12:39Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/660",
    "html_url" : "https://github.com/junit-team/junit/pull/660",
    "diff_url" : "https://github.com/junit-team/junit/pull/660.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/660.patch"
  },
  "body" : "TimeoutRuleTest fails with 50 millis timeout.\r\nTimeout has already elapsed before calling #run6() when test is running in an overloaded build system.\r\n\r\nFix: 200 millis"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/661",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/661/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/661/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/661/events",
  "html_url" : "https://github.com/junit-team/junit/pull/661",
  "id" : 12893319,
  "number" : 661,
  "title" : "Wrong href link for Java API in JUnit Javadoc.",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-04-07T10:14:23Z",
  "updated_at" : "2013-04-08T19:10:51Z",
  "closed_at" : "2013-04-08T19:10:47Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/661",
    "html_url" : "https://github.com/junit-team/junit/pull/661",
    "diff_url" : "https://github.com/junit-team/junit/pull/661.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/661.patch"
  },
  "body" : "Open the JUnit Javadoc and click on href on Java class, e.g. ... extends java.lang.Object. The link does not exist.\r\nFix, using link http://docs.oracle.com/javase/1.5.0/docs/api/"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/662",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/662/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/662/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/662/events",
  "html_url" : "https://github.com/junit-team/junit/pull/662",
  "id" : 12897411,
  "number" : 662,
  "title" : "JavaDoc for TestedOn and ParametersSuppliedBy",
  "user" : {
    "login" : "pimterry",
    "id" : 1526883,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1526883?",
    "gravatar_id" : "8a1aabc40d859fcb786eb4d28b95d299",
    "url" : "https://api.github.com/users/pimterry",
    "html_url" : "https://github.com/pimterry",
    "followers_url" : "https://api.github.com/users/pimterry/followers",
    "following_url" : "https://api.github.com/users/pimterry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pimterry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pimterry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pimterry/subscriptions",
    "organizations_url" : "https://api.github.com/users/pimterry/orgs",
    "repos_url" : "https://api.github.com/users/pimterry/repos",
    "events_url" : "https://api.github.com/users/pimterry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pimterry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-04-07T16:17:30Z",
  "updated_at" : "2013-04-08T19:10:15Z",
  "closed_at" : "2013-04-08T19:09:24Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/662",
    "html_url" : "https://github.com/junit-team/junit/pull/662",
    "diff_url" : "https://github.com/junit-team/junit/pull/662.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/662.patch"
  },
  "body" : "Some simple javadoc for TestedOn and ParametersSuppliedBy, with mini examples, since I noticed they're still undocumented. There's a few other bits without much on them either that I'll get on soon too, this is just a start.\r\n\r\nOn a slightly-related note: is there a good reason why TestedOn only works for int parameters? Is there any appetite for opening this up just allowing any Objects to be specified? (especially since we now do autoboxing right, so Integer params would still work properly, and it'd be all nicely backward compatible)"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/663",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/663/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/663/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/663/events",
  "html_url" : "https://github.com/junit-team/junit/issues/663",
  "id" : 12919710,
  "number" : 663,
  "title" : "The first example on the Parameterized-tests wiki makes no sense",
  "user" : {
    "login" : "ge0ffrey",
    "id" : 176880,
    "avatar_url" : "https://avatars.githubusercontent.com/u/176880?",
    "gravatar_id" : "27147a6679a4bfb6461ff1c0ae10473e",
    "url" : "https://api.github.com/users/ge0ffrey",
    "html_url" : "https://github.com/ge0ffrey",
    "followers_url" : "https://api.github.com/users/ge0ffrey/followers",
    "following_url" : "https://api.github.com/users/ge0ffrey/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ge0ffrey/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ge0ffrey/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ge0ffrey/subscriptions",
    "organizations_url" : "https://api.github.com/users/ge0ffrey/orgs",
    "repos_url" : "https://api.github.com/users/ge0ffrey/repos",
    "events_url" : "https://api.github.com/users/ge0ffrey/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ge0ffrey/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2013-04-08T11:56:01Z",
  "updated_at" : "2014-02-12T15:12:44Z",
  "closed_at" : "2013-05-17T12:24:06Z",
  "body" : "https://github.com/junit-team/junit/wiki/Parameterized-tests\r\n\r\nThis Fibonacci, triple braces or @HeresHowYouGetValue makes no sense:\r\n\r\n    public static Collection<Object[]> data() {\r\n        return Arrays.asList(new Object[][] {\r\n                Fibonacci,\r\n                { { 0, 0 }, ... } });\r\n    }\r\n...\r\n    public void test(@HeresHowYouGetValue Type value) {\r\n        assertAnswerKey(new Object[][] {\r\n                Fibonacci,\r\n                { { 0, 0 }, ... } });\r\n        assertEquals(fExpected, Fibonacci.compute(fInput));\r\n    }"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/664",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/664/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/664/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/664/events",
  "html_url" : "https://github.com/junit-team/junit/issues/664",
  "id" : 13046999,
  "number" : 664,
  "title" : "Run only a test of a class with Parameterized runner",
  "user" : {
    "login" : "diogoeag",
    "id" : 758998,
    "avatar_url" : "https://avatars.githubusercontent.com/u/758998?",
    "gravatar_id" : "71345170c07e10d6dfcef38180fb51da",
    "url" : "https://api.github.com/users/diogoeag",
    "html_url" : "https://github.com/diogoeag",
    "followers_url" : "https://api.github.com/users/diogoeag/followers",
    "following_url" : "https://api.github.com/users/diogoeag/following{/other_user}",
    "gists_url" : "https://api.github.com/users/diogoeag/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/diogoeag/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/diogoeag/subscriptions",
    "organizations_url" : "https://api.github.com/users/diogoeag/orgs",
    "repos_url" : "https://api.github.com/users/diogoeag/repos",
    "events_url" : "https://api.github.com/users/diogoeag/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/diogoeag/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2013-04-11T00:09:09Z",
  "updated_at" : "2014-02-12T15:12:20Z",
  "closed_at" : null,
  "body" : "When using the Parameterized runner there is no possibility to run only a test method of a test class.\r\n\r\nFor example when running in maven: mvn test -Dtest=TesClass#testName\r\n\r\nNo tests are run when using the Parameterized runner.\r\n\r\nThat would be great to have this feature, has for development is comon to the developers trying to run only the test they are working on."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/665",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/665/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/665/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/665/events",
  "html_url" : "https://github.com/junit-team/junit/pull/665",
  "id" : 13065622,
  "number" : 665,
  "title" : "Treatments for parallel execution",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2013-04-11T12:51:45Z",
  "updated_at" : "2013-07-03T21:24:18Z",
  "closed_at" : "2013-04-11T12:56:06Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/665",
    "html_url" : "https://github.com/junit-team/junit/pull/665",
    "diff_url" : "https://github.com/junit-team/junit/pull/665.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/665.patch"
  },
  "body" : "In parallel execution, the objects like runners, Description, TestClass are created in main Thread and used in forked Thread.\r\nThis will treat the multithreaded visibility."
} ]