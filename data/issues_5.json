[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/152",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/152/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/152/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/152/events",
  "html_url" : "https://github.com/junit-team/junit/pull/152",
  "id" : 405183,
  "number" : 152,
  "title" : "Failing test case for issue 114",
  "user" : {
    "login" : "krosenvold",
    "id" : 67744,
    "avatar_url" : "https://avatars.githubusercontent.com/u/67744?",
    "gravatar_id" : "48ad44fb319fc06a737a082820bff3ea",
    "url" : "https://api.github.com/users/krosenvold",
    "html_url" : "https://github.com/krosenvold",
    "followers_url" : "https://api.github.com/users/krosenvold/followers",
    "following_url" : "https://api.github.com/users/krosenvold/following{/other_user}",
    "gists_url" : "https://api.github.com/users/krosenvold/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/krosenvold/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/krosenvold/subscriptions",
    "organizations_url" : "https://api.github.com/users/krosenvold/orgs",
    "repos_url" : "https://api.github.com/users/krosenvold/repos",
    "events_url" : "https://api.github.com/users/krosenvold/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/krosenvold/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2010-11-07T14:41:36Z",
  "updated_at" : "2012-05-09T18:48:51Z",
  "closed_at" : "2012-05-09T18:48:51Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/152",
    "html_url" : "https://github.com/junit-team/junit/pull/152",
    "diff_url" : "https://github.com/junit-team/junit/pull/152.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/152.patch"
  },
  "body" : "Here is a failing testcase. If you pull this change before the patch, you will have a failing test ;)\r\n\r\nThe original pull-request can be applied afterwards.\r\n\r\nLet me know if you need these patches lined up differently !"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/153",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/153/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/153/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/153/events",
  "html_url" : "https://github.com/junit-team/junit/pull/153",
  "id" : 408796,
  "number" : 153,
  "title" : "Got rid of all deprecation warnings",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2010-11-09T14:14:03Z",
  "updated_at" : "2010-11-16T15:19:53Z",
  "closed_at" : "2010-11-16T15:19:53Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/153",
    "html_url" : "https://github.com/junit-team/junit/pull/153",
    "diff_url" : "https://github.com/junit-team/junit/pull/153.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/153.patch"
  },
  "body" : "This took about 15 minutes once I had slept.  Sorry again about last night..."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/154",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/154/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/154/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/154/events",
  "html_url" : "https://github.com/junit-team/junit/pull/154",
  "id" : 408860,
  "number" : 154,
  "title" : "Further, renamed TestRuleTestWatchman to TestWatcher",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2010-11-09T14:47:50Z",
  "updated_at" : "2010-11-16T15:19:54Z",
  "closed_at" : "2010-11-16T15:19:54Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/154",
    "html_url" : "https://github.com/junit-team/junit/pull/154",
    "diff_url" : "https://github.com/junit-team/junit/pull/154.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/154.patch"
  },
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/155",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/155/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/155/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/155/events",
  "html_url" : "https://github.com/junit-team/junit/pull/155",
  "id" : 409327,
  "number" : 155,
  "title" : "Synchproxy with test case",
  "user" : {
    "login" : "krosenvold",
    "id" : 67744,
    "avatar_url" : "https://avatars.githubusercontent.com/u/67744?",
    "gravatar_id" : "48ad44fb319fc06a737a082820bff3ea",
    "url" : "https://api.github.com/users/krosenvold",
    "html_url" : "https://github.com/krosenvold",
    "followers_url" : "https://api.github.com/users/krosenvold/followers",
    "following_url" : "https://api.github.com/users/krosenvold/following{/other_user}",
    "gists_url" : "https://api.github.com/users/krosenvold/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/krosenvold/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/krosenvold/subscriptions",
    "organizations_url" : "https://api.github.com/users/krosenvold/orgs",
    "repos_url" : "https://api.github.com/users/krosenvold/repos",
    "events_url" : "https://api.github.com/users/krosenvold/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/krosenvold/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2010-11-09T18:40:47Z",
  "updated_at" : "2012-05-14T15:03:00Z",
  "closed_at" : "2012-05-14T15:03:00Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/155",
    "html_url" : "https://github.com/junit-team/junit/pull/155",
    "diff_url" : "https://github.com/junit-team/junit/pull/155.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/155.patch"
  },
  "body" : "Added a SynchronizedRunListenerProxy and testcase if you want to add support for legacy non-threadsafe providers."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/156",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/156/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/156/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/156/events",
  "html_url" : "https://github.com/junit-team/junit/issues/156",
  "id" : 415190,
  "number" : 156,
  "title" : "Parameter object for methodBlock",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-12T15:44:30Z",
  "updated_at" : "2012-11-13T21:18:47Z",
  "closed_at" : "2012-11-13T21:18:47Z",
  "body" : "BlockJUnit4ClassRunner is currently implemented as\n\n\t\tStatement statement= methodInvoker(method, test);\n\t\tstatement= possiblyExpectingExceptions(method, test, statement);\n\t\tstatement= withPotentialTimeout(method, test, statement);\n\t\tstatement= withBefores(method, test, statement);\n\t\tstatement= withAfters(method, test, statement);\n\t\tstatement= withRules(method, test, statement);\n\t\treturn statement;\n\nAll of those method, test pairs could be combined as a parameter object, with some good design fallout.  Low-priority design improvement"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/157",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/157/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/157/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/157/events",
  "html_url" : "https://github.com/junit-team/junit/issues/157",
  "id" : 415295,
  "number" : 157,
  "title" : "Undeprecate BlockJUnit4ClassRunner.withBefores and withAfters",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-12T16:29:54Z",
  "updated_at" : "2012-12-03T19:45:35Z",
  "closed_at" : "2012-12-03T19:45:35Z",
  "body" : "These methods are useful hooks for extenders, actually."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/158",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/158/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/158/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/158/events",
  "html_url" : "https://github.com/junit-team/junit/issues/158",
  "id" : 415296,
  "number" : 158,
  "title" : "Undeprecate BlockJUnit4ClassRunner.withBefores and withAfters",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-12T16:29:55Z",
  "updated_at" : "2011-03-04T16:56:36Z",
  "closed_at" : "2011-03-04T16:56:36Z",
  "body" : "These methods are useful hooks for extenders, actually."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/159",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/159/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/159/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/159/events",
  "html_url" : "https://github.com/junit-team/junit/issues/159",
  "id" : 415343,
  "number" : 159,
  "title" : "New extension point in RunBefores and RunAfters",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-12T16:53:19Z",
  "updated_at" : "2012-12-10T16:23:27Z",
  "closed_at" : "2012-12-10T16:23:27Z",
  "body" : "If the line x.invokeExplosively(fTarget); were extracted into a protected method in RunBefores and RunAfters, it would be easier for extensions to override the standard before/after behavior."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/160",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/160/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/160/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/160/events",
  "html_url" : "https://github.com/junit-team/junit/issues/160",
  "id" : 419487,
  "number" : 160,
  "title" : "New API for test-class validation.",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-15T15:36:36Z",
  "updated_at" : "2012-12-10T16:24:01Z",
  "closed_at" : "2012-12-10T16:24:01Z",
  "body" : "I think a declarative API for test-class validation would permit more extensibility.  I'm thinking:\r\n\r\nv = new Validator();\r\nv.allMethodsAnnotatedWith(Test.class).arePublic().haveNoParameters().areVoid();\r\n// etc."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/161",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/161/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/161/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/161/events",
  "html_url" : "https://github.com/junit-team/junit/issues/161",
  "id" : 420342,
  "number" : 161,
  "title" : "Better way to make custom suites.",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-15T18:44:53Z",
  "updated_at" : "2012-12-10T16:26:18Z",
  "closed_at" : "2012-12-10T16:26:18Z",
  "body" : "Custom runners based on suites should implement a SuiteBuilder interface, rather than doing all their work in constructors (based on the current Suite implementation)"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/162",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/162/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/162/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/162/events",
  "html_url" : "https://github.com/junit-team/junit/issues/162",
  "id" : 421254,
  "number" : 162,
  "title" : "Performance improvement suggestion for parameterized tests",
  "user" : {
    "login" : "jchurchi",
    "id" : 483255,
    "avatar_url" : "https://avatars.githubusercontent.com/u/483255?",
    "gravatar_id" : "bdce91c5fccd354a43a0fb5095d466cc",
    "url" : "https://api.github.com/users/jchurchi",
    "html_url" : "https://github.com/jchurchi",
    "followers_url" : "https://api.github.com/users/jchurchi/followers",
    "following_url" : "https://api.github.com/users/jchurchi/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jchurchi/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jchurchi/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jchurchi/subscriptions",
    "organizations_url" : "https://api.github.com/users/jchurchi/orgs",
    "repos_url" : "https://api.github.com/users/jchurchi/repos",
    "events_url" : "https://api.github.com/users/jchurchi/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jchurchi/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : {
    "url" : "https://api.github.com/repos/junit-team/junit/milestones/2",
    "labels_url" : "https://api.github.com/repos/junit-team/junit/milestones/2/labels",
    "id" : 202012,
    "number" : 2,
    "title" : "4.12",
    "description" : null,
    "creator" : {
      "login" : "marcphilipp",
      "id" : 214207,
      "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
      "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
      "url" : "https://api.github.com/users/marcphilipp",
      "html_url" : "https://github.com/marcphilipp",
      "followers_url" : "https://api.github.com/users/marcphilipp/followers",
      "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
      "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
      "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
      "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
      "repos_url" : "https://api.github.com/users/marcphilipp/repos",
      "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
      "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
      "type" : "User",
      "site_admin" : false
    },
    "open_issues" : 4,
    "closed_issues" : 42,
    "state" : "open",
    "created_at" : "2012-10-26T09:58:06Z",
    "updated_at" : "2014-05-15T07:23:02Z",
    "due_on" : null
  },
  "comments" : 6,
  "created_at" : "2010-11-16T04:03:09Z",
  "updated_at" : "2013-03-07T15:18:38Z",
  "closed_at" : "2013-03-07T15:18:38Z",
  "body" : "Hi,\r\nI wrote all of the tests for a popular web service that is made up of hundreds of user-facing forms. Each form has many possible options available to the user. There is a test for each form and a sampling of different combinations of options we want to test are coded as parameters. Every one of these tests are a subclass of a single JUnit class that does the actual \"work\" - filling out the form, downloading the result and checking it for correctness.\r\n\r\nThe problem is that when I run a full suite of tests there is a very long pause between the time I kick it off and the time the tests actually start. It's at least a minute on a very fast machine. I finally got tired of this and did some profiling. What I found was that the JVM was spending a lot of time in BlockJUnit4ClassRunner.describeChild(). Here's the code:\r\n\r\n\t@Override\r\n\tprotected Description describeChild(FrameworkMethod method) {\r\n\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method), method.getAnnotations());\r\n\t}\r\n\r\nThe CPU time was evenly split between testName and getAnnotations. I did some exploration and found that out of the nearly 3 million invocations for my suite, there were only 634 unique FrameworkMethod arguments. Apparently this method is being invoked for every test method multiplied by every class multiplied by every parameter. (I don't have a huge number of parameters in each test, but the total number of tests is only about 15,000.)\r\n\r\nSo I decided to add a cache:\r\n\r\n\tprivate Map<FrameworkMethod, Description> methodDescriptions = \r\n\t\tCollections.synchronizedMap(new HashMap<FrameworkMethod, Description>());\r\n\r\n\t@Override\r\n\tprotected Description describeChild(FrameworkMethod method) {\r\n\t\tDescription desc = methodDescriptions.get(method);\r\n\t\tif (desc == null) {\r\n\t\t\tdesc = Description.createTestDescription(getTestClass().getJavaClass(), \r\n\t\t\t\ttestName(method), method.getAnnotations());\r\n\t\t\tmethodDescriptions.put(method, desc);\r\n\t\t}\r\n\t\treturn desc;\r\n\t}\r\n\r\nWith an instance-level cache (to account for unique combinations with the locally held test class) on the BlockJUnit4ClassRunner, I experienced only about 5500 \"misses\" (out of 3 million calls) and the bottleneck was completely eliminated. The tests get started pretty much right away, and I haven't seen any side-effects in the test names.\r\n\r\nHopefully you agree with and include this performance enhancement as it has really helped get rid of one of my testing headaches.\r\nRegards,\r\nJohn Churchill"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/163",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/163/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/163/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/163/events",
  "html_url" : "https://github.com/junit-team/junit/issues/163",
  "id" : 426341,
  "number" : 163,
  "title" : "Bad comparison failure message when using assertEquals(String, String)",
  "user" : {
    "login" : "mkeller",
    "id" : 154496,
    "avatar_url" : "https://avatars.githubusercontent.com/u/154496?",
    "gravatar_id" : "e5986987b470c65c85f247270d891217",
    "url" : "https://api.github.com/users/mkeller",
    "html_url" : "https://github.com/mkeller",
    "followers_url" : "https://api.github.com/users/mkeller/followers",
    "following_url" : "https://api.github.com/users/mkeller/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mkeller/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mkeller/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mkeller/subscriptions",
    "organizations_url" : "https://api.github.com/users/mkeller/orgs",
    "repos_url" : "https://api.github.com/users/mkeller/repos",
    "events_url" : "https://api.github.com/users/mkeller/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mkeller/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2010-11-18T15:35:23Z",
  "updated_at" : "2011-03-04T16:58:16Z",
  "closed_at" : "2011-03-04T16:58:16Z",
  "body" : "Have:\n\n\tpackage a;\n\timport junit.framework.TestCase;\n\tpublic class CompTest extends TestCase {\n\t\tpublic void test1() throws Exception {\n\t\t\tassertEquals(\"string exp\", \"string act\");\n\t\t}\n\t}\n\nRunning this test with JUnit 3.8 gives a stack trace that starts with (good):\n\tjunit.framework.ComparisonFailure: expected:<string [exp]> but was:<string [act]>\n\nRunning it with JUnit 4.8.1, the stack trace starts with (bad):\n\tjunit.framework.ComparisonFailure: null expected:<string [exp]> but was:<string [act]>\n\n=> The message\n\t\"...ComparisonFailure: null expected:<string [exp]> ...\"\nis very misleading.\n\nThe bug is that ComparisonFailure extends junit.framework.AssertionFailedError, which originally extended java.lang.Error but now extends java.lang.AssertionError. The latter converts the null message to the String \"null\".\n\nThe 100% backwards-compatible fix would require AssertionFailedError to store the message in a separate field. A pragmatic solution would be to replace the constructor with this:\n\tpublic AssertionFailedError(String message) {\n\t\tsuper(message == null ? \"\" : message);\n\t}\n\nTo avoid an unnecessary second space character in the resulting message, you could change the condition in junit.framework.Assert.format(String, Object, Object) to:\n\t\tif (message != null && message.length() != 0)"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/164",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/164/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/164/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/164/events",
  "html_url" : "https://github.com/junit-team/junit/issues/164",
  "id" : 428778,
  "number" : 164,
  "title" : "Assert should have fail(Throwable) and fail(String, Throwable) API.",
  "user" : {
    "login" : "HamletDRC",
    "id" : 186401,
    "avatar_url" : "https://avatars.githubusercontent.com/u/186401?",
    "gravatar_id" : "82224fcf6ca7913d92a82a53d184d2d5",
    "url" : "https://api.github.com/users/HamletDRC",
    "html_url" : "https://github.com/HamletDRC",
    "followers_url" : "https://api.github.com/users/HamletDRC/followers",
    "following_url" : "https://api.github.com/users/HamletDRC/following{/other_user}",
    "gists_url" : "https://api.github.com/users/HamletDRC/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/HamletDRC/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/HamletDRC/subscriptions",
    "organizations_url" : "https://api.github.com/users/HamletDRC/orgs",
    "repos_url" : "https://api.github.com/users/HamletDRC/repos",
    "events_url" : "https://api.github.com/users/HamletDRC/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/HamletDRC/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2010-11-19T16:49:45Z",
  "updated_at" : "2010-11-19T19:24:00Z",
  "closed_at" : "2010-11-20T03:22:38Z",
  "body" : "It would be nice if Assert had a fail(Throwable) and fail(String, Throwable) API.\r\n\r\nThere are often times where a fail() method call is appropriate. If you call JUnit's fail() or fail(String) there is no way to also include a stack trace. fail(Throwable) and fail(String, Throwable) would provide an API to fail a test without swallowing a stack trace.\r\n\r\nI personally have need of this feature. I find many codebases that call fail() explicitly for readability but then swallow the stack trace. Having this API would be nice. \r\n\r\nI am happy to write a patch for this, but I need some answers first. \r\n1. AssertionFailedError extends AssertionError, which does not have a (String, Exception) constructor. It only has a constructor for each primitive and (Object). The Object constructor correctly sets the cause if the Object is a throwable, so we can delegate to this constuctor to make sure that the stack trace is reported. Is this an acceptable implementation detail? \r\n2. How to implement the (String, Throwable) overloading... we can construct an AssertionFailedError with the String message, and then call error.setStackTrace explicitly with the stack trace from the user exception. Is this acceptable? \r\n\r\nThanks, Hamlet"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/165",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/165/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/165/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/165/events",
  "html_url" : "https://github.com/junit-team/junit/issues/165",
  "id" : 435925,
  "number" : 165,
  "title" : "junit-dep doesn't work without Hamcrest",
  "user" : {
    "login" : "pniederw",
    "id" : 45382,
    "avatar_url" : "https://avatars.githubusercontent.com/u/45382?",
    "gravatar_id" : "8d9261be2c7926796bf37c7155133aec",
    "url" : "https://api.github.com/users/pniederw",
    "html_url" : "https://github.com/pniederw",
    "followers_url" : "https://api.github.com/users/pniederw/followers",
    "following_url" : "https://api.github.com/users/pniederw/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pniederw/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pniederw/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pniederw/subscriptions",
    "organizations_url" : "https://api.github.com/users/pniederw/orgs",
    "repos_url" : "https://api.github.com/users/pniederw/repos",
    "events_url" : "https://api.github.com/users/pniederw/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pniederw/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-24T02:26:29Z",
  "updated_at" : "2011-04-29T18:50:06Z",
  "closed_at" : "2011-04-29T18:50:06Z",
  "body" : "Since I switched from junit to junit-dep (4.8.2), I'm running into the following exception every now and then:\r\n\r\njava.lang.NoClassDefFoundError: org/hamcrest/SelfDescribing\r\n\r\nIt seems that even the part of JUnit that should be independent of Hamcrest does have dependencies on it. Class org.junit.internal.AssumptionViolatedException which implements org.hamcrest.SelfDescribing is an example. "
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/166",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/166/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/166/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/166/events",
  "html_url" : "https://github.com/junit-team/junit/issues/166",
  "id" : 438846,
  "number" : 166,
  "title" : "Suite timing",
  "user" : {
    "login" : "mpkusnierz",
    "id" : 496572,
    "avatar_url" : "https://avatars.githubusercontent.com/u/496572?",
    "gravatar_id" : "61100aa7ad8d0c039e06a798ec909bae",
    "url" : "https://api.github.com/users/mpkusnierz",
    "html_url" : "https://github.com/mpkusnierz",
    "followers_url" : "https://api.github.com/users/mpkusnierz/followers",
    "following_url" : "https://api.github.com/users/mpkusnierz/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mpkusnierz/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mpkusnierz/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mpkusnierz/subscriptions",
    "organizations_url" : "https://api.github.com/users/mpkusnierz/orgs",
    "repos_url" : "https://api.github.com/users/mpkusnierz/repos",
    "events_url" : "https://api.github.com/users/mpkusnierz/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mpkusnierz/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-25T14:31:49Z",
  "updated_at" : "2010-11-26T02:16:48Z",
  "closed_at" : "2010-11-26T02:16:48Z",
  "body" : "I have a test suite hierarchy as follows:\n1.master Suite\n1.1 - child suite\n1.1.1 - - grand child test 1\n1.1.2 - - grand child test 2\n1.2 - child test\n\nWhen I run the master suite, the time reported in the eclipse junit plugin for grand child test 2 includes the time taken for the @BeforeClass step in the next child test."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/167",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/167/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/167/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/167/events",
  "html_url" : "https://github.com/junit-team/junit/issues/167",
  "id" : 438856,
  "number" : 167,
  "title" : "Re-running member of a suite should run the @before/after class methods from the parent suite",
  "user" : {
    "login" : "mpkusnierz",
    "id" : 496572,
    "avatar_url" : "https://avatars.githubusercontent.com/u/496572?",
    "gravatar_id" : "61100aa7ad8d0c039e06a798ec909bae",
    "url" : "https://api.github.com/users/mpkusnierz",
    "html_url" : "https://github.com/mpkusnierz",
    "followers_url" : "https://api.github.com/users/mpkusnierz/followers",
    "following_url" : "https://api.github.com/users/mpkusnierz/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mpkusnierz/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mpkusnierz/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mpkusnierz/subscriptions",
    "organizations_url" : "https://api.github.com/users/mpkusnierz/orgs",
    "repos_url" : "https://api.github.com/users/mpkusnierz/repos",
    "events_url" : "https://api.github.com/users/mpkusnierz/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mpkusnierz/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-11-25T14:39:08Z",
  "updated_at" : "2010-11-26T02:14:01Z",
  "closed_at" : "2010-11-26T02:14:01Z",
  "body" : "From the eclipse junit plugin if I choose to re-run a test from within a suite of tests, the containing suite (and up the hierarchy) should run the @BeforeClass and @AfterClass methods.\r\n\r\nIn my suite I have @BeforeClass and @AfterClass methods that need to be run once for all members of the suite. The member tests cannot run if this step is ommitted. But that means that if I try and re-run only a single member of the suite it fails because the parent suite's before/after class method is not run."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/168",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/168/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/168/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/168/events",
  "html_url" : "https://github.com/junit-team/junit/pull/168",
  "id" : 457446,
  "number" : 168,
  "title" : "Quick cleanup of code",
  "user" : {
    "login" : "KushalP",
    "id" : 138382,
    "avatar_url" : "https://avatars.githubusercontent.com/u/138382?",
    "gravatar_id" : "47cc696e78f18a43162501c40b0a3fc8",
    "url" : "https://api.github.com/users/KushalP",
    "html_url" : "https://github.com/KushalP",
    "followers_url" : "https://api.github.com/users/KushalP/followers",
    "following_url" : "https://api.github.com/users/KushalP/following{/other_user}",
    "gists_url" : "https://api.github.com/users/KushalP/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/KushalP/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/KushalP/subscriptions",
    "organizations_url" : "https://api.github.com/users/KushalP/orgs",
    "repos_url" : "https://api.github.com/users/KushalP/repos",
    "events_url" : "https://api.github.com/users/KushalP/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/KushalP/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2010-12-05T23:05:04Z",
  "updated_at" : "2011-07-03T21:29:34Z",
  "closed_at" : "2011-07-03T21:29:34Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/168",
    "html_url" : "https://github.com/junit-team/junit/pull/168",
    "diff_url" : "https://github.com/junit-team/junit/pull/168.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/168.patch"
  },
  "body" : "Was just looking through and saw that these two **if** statements could be simplified onto a single line."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/169",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/169/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/169/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/169/events",
  "html_url" : "https://github.com/junit-team/junit/issues/169",
  "id" : 457501,
  "number" : 169,
  "title" : "Exceptions when method doesn't exist are not readily identifiable",
  "user" : {
    "login" : "davidsc",
    "id" : 510808,
    "avatar_url" : "https://avatars.githubusercontent.com/u/510808?",
    "gravatar_id" : "17625ec87e6598284cef8867d5351ecc",
    "url" : "https://api.github.com/users/davidsc",
    "html_url" : "https://github.com/davidsc",
    "followers_url" : "https://api.github.com/users/davidsc/followers",
    "following_url" : "https://api.github.com/users/davidsc/following{/other_user}",
    "gists_url" : "https://api.github.com/users/davidsc/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/davidsc/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/davidsc/subscriptions",
    "organizations_url" : "https://api.github.com/users/davidsc/orgs",
    "repos_url" : "https://api.github.com/users/davidsc/repos",
    "events_url" : "https://api.github.com/users/davidsc/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/davidsc/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2010-12-06T00:27:48Z",
  "updated_at" : "2013-07-23T00:04:57Z",
  "closed_at" : "2013-07-23T00:04:57Z",
  "body" : "I use \n\nResult run = core.run(Request.method(Tests.class, method);\nif (failure)\n     run.getFailures().get(i).getException();\n\nOther than using 'run.getFailures().get(i).getException().getMessage()' to find out what has occurred, there is no exception ID captured that can be readily interrogated.\nThat would enable better coding possibilities e.g.\n\nif (failure)\n     id  = run.getFailures().get(i).getException().getID();\n     if (id == NoMethodExists)\n          print exception message\n     else if (...\n\nDavid\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/170",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/170/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/170/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/170/events",
  "html_url" : "https://github.com/junit-team/junit/issues/170",
  "id" : 460870,
  "number" : 170,
  "title" : "Report actual value upon assertNull failure",
  "user" : {
    "login" : "Stephan202",
    "id" : 513280,
    "avatar_url" : "https://avatars.githubusercontent.com/u/513280?",
    "gravatar_id" : "05cc371af855f1b67886051cff4af8d4",
    "url" : "https://api.github.com/users/Stephan202",
    "html_url" : "https://github.com/Stephan202",
    "followers_url" : "https://api.github.com/users/Stephan202/followers",
    "following_url" : "https://api.github.com/users/Stephan202/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Stephan202/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Stephan202/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Stephan202/subscriptions",
    "organizations_url" : "https://api.github.com/users/Stephan202/orgs",
    "repos_url" : "https://api.github.com/users/Stephan202/repos",
    "events_url" : "https://api.github.com/users/Stephan202/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Stephan202/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2010-12-07T15:47:15Z",
  "updated_at" : "2012-04-23T18:08:26Z",
  "closed_at" : "2012-04-23T18:08:26Z",
  "body" : "Currently the _unary_ `assertNull` method is defined as,\n\t\n    static public void assertNull(Object object) {\n        assertNull(null, object);\n    }\n\n    static public void assertNull(String message, Object object) {\n        assertTrue(message, object == null);\n    }\n\nThis means that, upon failure, all we know is that `object` was not actually `null`. It would be nice if `assertNull` would report the actual value in the exception it throws, just like `assertEquals` and `assertSame`."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/171",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/171/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/171/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/171/events",
  "html_url" : "https://github.com/junit-team/junit/issues/171",
  "id" : 479378,
  "number" : 171,
  "title" : "Enhanced @Ignore",
  "user" : {
    "login" : "gokulnanthakumar",
    "id" : 526671,
    "avatar_url" : "https://avatars.githubusercontent.com/u/526671?",
    "gravatar_id" : "90be2821b97f18348c780382d9e7e14e",
    "url" : "https://api.github.com/users/gokulnanthakumar",
    "html_url" : "https://github.com/gokulnanthakumar",
    "followers_url" : "https://api.github.com/users/gokulnanthakumar/followers",
    "following_url" : "https://api.github.com/users/gokulnanthakumar/following{/other_user}",
    "gists_url" : "https://api.github.com/users/gokulnanthakumar/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/gokulnanthakumar/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/gokulnanthakumar/subscriptions",
    "organizations_url" : "https://api.github.com/users/gokulnanthakumar/orgs",
    "repos_url" : "https://api.github.com/users/gokulnanthakumar/repos",
    "events_url" : "https://api.github.com/users/gokulnanthakumar/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/gokulnanthakumar/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2010-12-17T02:30:41Z",
  "updated_at" : "2011-08-15T15:43:29Z",
  "closed_at" : "2010-12-17T10:32:46Z",
  "body" : "Currently we have @Ignore to Ignore some test methods or to ignore all the tests in the class, for example if I have 10 test methods in class and want to execute only one test, I have to mark 9 methods with @Ignore, if we have an option like @Ignore at class level + an annotation to execute only the methods with this special annotation, it will be a good help in testing. "
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/172",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/172/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/172/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/172/events",
  "html_url" : "https://github.com/junit-team/junit/issues/172",
  "id" : 486297,
  "number" : 172,
  "title" : "Improve implementation of filters in order to improve implementation of Categories",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2010-12-21T15:34:28Z",
  "updated_at" : "2013-10-10T03:00:12Z",
  "closed_at" : "2013-10-10T03:00:12Z",
  "body" : "the way filters are implemented makes Categories unnecessarily complicated, buggy, and difficult to specify.  A new way of handling filters could someday enable a better new implementation."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/173",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/173/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/173/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/173/events",
  "html_url" : "https://github.com/junit-team/junit/pull/173",
  "id" : 486360,
  "number" : 173,
  "title" : "Improve TestRule javadoc, and replace old build-file tests",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-12-21T16:10:05Z",
  "updated_at" : "2010-12-21T22:45:08Z",
  "closed_at" : "2010-12-21T22:45:08Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/173",
    "html_url" : "https://github.com/junit-team/junit/pull/173",
    "diff_url" : "https://github.com/junit-team/junit/pull/173.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/173.patch"
  },
  "body" : "...with much simpler bash script"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/174",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/174/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/174/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/174/events",
  "html_url" : "https://github.com/junit-team/junit/issues/174",
  "id" : 497797,
  "number" : 174,
  "title" : "Support @Test(order=1) Annotation to order tests.",
  "user" : {
    "login" : "paragmehta",
    "id" : 540865,
    "avatar_url" : "https://avatars.githubusercontent.com/u/540865?",
    "gravatar_id" : "2f49bde35722d4f043b7127c46ecf906",
    "url" : "https://api.github.com/users/paragmehta",
    "html_url" : "https://github.com/paragmehta",
    "followers_url" : "https://api.github.com/users/paragmehta/followers",
    "following_url" : "https://api.github.com/users/paragmehta/following{/other_user}",
    "gists_url" : "https://api.github.com/users/paragmehta/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/paragmehta/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/paragmehta/subscriptions",
    "organizations_url" : "https://api.github.com/users/paragmehta/orgs",
    "repos_url" : "https://api.github.com/users/paragmehta/repos",
    "events_url" : "https://api.github.com/users/paragmehta/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/paragmehta/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2010-12-29T21:46:16Z",
  "updated_at" : "2012-09-20T17:46:38Z",
  "closed_at" : "2010-12-30T00:01:18Z",
  "body" : "Suggestion:  It is often essential to make sure certain tests run after others, e.g. create tests run first, query tests run second and delete tests run last.  Since @Before and @After annotations do not properly support these cases, to support ordering, @Test(order=n) annotation can be used.  If multiple tests have the same order, those tests can be run in any sequence after tests with lower order numbers and before tests with higher order numbers."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/175",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/175/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/175/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/175/events",
  "html_url" : "https://github.com/junit-team/junit/pull/175",
  "id" : 498368,
  "number" : 175,
  "title" : "Issue 110",
  "user" : {
    "login" : "MatrixFrog",
    "id" : 244381,
    "avatar_url" : "https://avatars.githubusercontent.com/u/244381?",
    "gravatar_id" : "e689265ee24e0874ae8a90827c4783e7",
    "url" : "https://api.github.com/users/MatrixFrog",
    "html_url" : "https://github.com/MatrixFrog",
    "followers_url" : "https://api.github.com/users/MatrixFrog/followers",
    "following_url" : "https://api.github.com/users/MatrixFrog/following{/other_user}",
    "gists_url" : "https://api.github.com/users/MatrixFrog/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/MatrixFrog/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/MatrixFrog/subscriptions",
    "organizations_url" : "https://api.github.com/users/MatrixFrog/orgs",
    "repos_url" : "https://api.github.com/users/MatrixFrog/repos",
    "events_url" : "https://api.github.com/users/MatrixFrog/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/MatrixFrog/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2010-12-30T06:24:15Z",
  "updated_at" : "2012-06-06T15:51:46Z",
  "closed_at" : "2012-05-21T17:57:09Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/175",
    "html_url" : "https://github.com/junit-team/junit/pull/175",
    "diff_url" : "https://github.com/junit-team/junit/pull/175.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/175.patch"
  },
  "body" : "Fix for issue 110 with test case"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/176",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/176/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/176/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/176/events",
  "html_url" : "https://github.com/junit-team/junit/pull/176",
  "id" : 498378,
  "number" : 176,
  "title" : "Issue 76",
  "user" : {
    "login" : "MatrixFrog",
    "id" : 244381,
    "avatar_url" : "https://avatars.githubusercontent.com/u/244381?",
    "gravatar_id" : "e689265ee24e0874ae8a90827c4783e7",
    "url" : "https://api.github.com/users/MatrixFrog",
    "html_url" : "https://github.com/MatrixFrog",
    "followers_url" : "https://api.github.com/users/MatrixFrog/followers",
    "following_url" : "https://api.github.com/users/MatrixFrog/following{/other_user}",
    "gists_url" : "https://api.github.com/users/MatrixFrog/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/MatrixFrog/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/MatrixFrog/subscriptions",
    "organizations_url" : "https://api.github.com/users/MatrixFrog/orgs",
    "repos_url" : "https://api.github.com/users/MatrixFrog/repos",
    "events_url" : "https://api.github.com/users/MatrixFrog/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/MatrixFrog/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2010-12-30T06:35:24Z",
  "updated_at" : "2011-03-04T17:01:46Z",
  "closed_at" : "2011-03-04T17:01:46Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/176",
    "html_url" : "https://github.com/junit-team/junit/pull/176",
    "diff_url" : "https://github.com/junit-team/junit/pull/176.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/176.patch"
  },
  "body" : "Issue 76 (https://github.com/KentBeck/junit/issues/76) appears to have been fixed at some point, as this test case shows. The test case relies on my fix for issue 110 in order to fully pass, because it uses collections of classes, as well as arrays of classes, which is why this branch is on top of my issue110 branch. So you'll want to deal with https://github.com/KentBeck/junit/pull/175 first and then this one. (If you reject that one then I'll rewrite this one or something)"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/177",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/177/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/177/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/177/events",
  "html_url" : "https://github.com/junit-team/junit/issues/177",
  "id" : 503787,
  "number" : 177,
  "title" : "ErrorReportingRunner accepts null testClass, tries to dereference",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/needs-more-info",
    "name" : "needs-more-info",
    "color" : "4ae6c7"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-01-03T16:37:25Z",
  "updated_at" : "2014-04-12T03:11:57Z",
  "closed_at" : "2014-04-12T03:11:57Z",
  "body" : "Given:\r\n\r\n10: Runner r = new ErrorReportingRunner(null, new RuntimeException());\r\n11: r.getDescription();\r\n\r\nLine 11 will throw a NullPointerException.  Either line 10 should throw the exception, or line 11 should do something sensible."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/178",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/178/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/178/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/178/events",
  "html_url" : "https://github.com/junit-team/junit/pull/178",
  "id" : 512057,
  "number" : 178,
  "title" : "Simple removal of (seemingly) redundant asserts",
  "user" : {
    "login" : "abyx",
    "id" : 114588,
    "avatar_url" : "https://avatars.githubusercontent.com/u/114588?",
    "gravatar_id" : "07eabe24326e5c3ae83ca52ef05b9cb8",
    "url" : "https://api.github.com/users/abyx",
    "html_url" : "https://github.com/abyx",
    "followers_url" : "https://api.github.com/users/abyx/followers",
    "following_url" : "https://api.github.com/users/abyx/following{/other_user}",
    "gists_url" : "https://api.github.com/users/abyx/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/abyx/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/abyx/subscriptions",
    "organizations_url" : "https://api.github.com/users/abyx/orgs",
    "repos_url" : "https://api.github.com/users/abyx/repos",
    "events_url" : "https://api.github.com/users/abyx/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/abyx/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2011-01-07T08:51:44Z",
  "updated_at" : "2012-02-16T15:53:17Z",
  "closed_at" : "2012-02-16T15:53:17Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/178",
    "html_url" : "https://github.com/junit-team/junit/pull/178",
    "diff_url" : "https://github.com/junit-team/junit/pull/178.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/178.patch"
  },
  "body" : "While reading the Categories code to understand how it works, I noticed these two calls that execute a suite simply to check it works, but the first is redundant, as it's being run in the test already, and the other seems unrelated to the test it's in."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/179",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/179/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/179/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/179/events",
  "html_url" : "https://github.com/junit-team/junit/issues/179",
  "id" : 523961,
  "number" : 179,
  "title" : "@Theory - Evaluate pararameters wrong with generic type",
  "user" : {
    "login" : "longbkit",
    "id" : 562164,
    "avatar_url" : "https://avatars.githubusercontent.com/u/562164?",
    "gravatar_id" : "7cb9ddaedae57546e6d6b34992d00f4a",
    "url" : "https://api.github.com/users/longbkit",
    "html_url" : "https://github.com/longbkit",
    "followers_url" : "https://api.github.com/users/longbkit/followers",
    "following_url" : "https://api.github.com/users/longbkit/following{/other_user}",
    "gists_url" : "https://api.github.com/users/longbkit/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/longbkit/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/longbkit/subscriptions",
    "organizations_url" : "https://api.github.com/users/longbkit/orgs",
    "repos_url" : "https://api.github.com/users/longbkit/repos",
    "events_url" : "https://api.github.com/users/longbkit/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/longbkit/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-01-13T07:20:32Z",
  "updated_at" : "2013-05-31T14:34:38Z",
  "closed_at" : "2013-05-31T14:34:38Z",
  "body" : "Concerning JUnit with Theories runner class, when choosing parameters to pass to test methods, it consider these two as the same type: Return<Long> and Return<Boolean> where\r\nReturn is a generic class in Java: \r\nclass Return<T> \r\n{\r\n...\r\n}\r\nIt should be different."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/180",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/180/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/180/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/180/events",
  "html_url" : "https://github.com/junit-team/junit/issues/180",
  "id" : 523965,
  "number" : 180,
  "title" : "@Theory - Should have option to print out current parameters",
  "user" : {
    "login" : "longbkit",
    "id" : 562164,
    "avatar_url" : "https://avatars.githubusercontent.com/u/562164?",
    "gravatar_id" : "7cb9ddaedae57546e6d6b34992d00f4a",
    "url" : "https://api.github.com/users/longbkit",
    "html_url" : "https://github.com/longbkit",
    "followers_url" : "https://api.github.com/users/longbkit/followers",
    "following_url" : "https://api.github.com/users/longbkit/following{/other_user}",
    "gists_url" : "https://api.github.com/users/longbkit/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/longbkit/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/longbkit/subscriptions",
    "organizations_url" : "https://api.github.com/users/longbkit/orgs",
    "repos_url" : "https://api.github.com/users/longbkit/repos",
    "events_url" : "https://api.github.com/users/longbkit/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/longbkit/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2011-01-13T07:23:03Z",
  "updated_at" : "2014-01-24T07:41:57Z",
  "closed_at" : null,
  "body" : "Theories test runner is powerful but has some drawbacks:\r\n+ When error happen, it's hard to know what parameter combination is making that error\r\n+ Do not have option to continue the test method with other parameter combination if one failed. Currently for a test method, it stops if failed with any parameter combination."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/181",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/181/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/181/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/181/events",
  "html_url" : "https://github.com/junit-team/junit/issues/181",
  "id" : 524120,
  "number" : 181,
  "title" : "Change Request: assertThat() results message formatting ",
  "user" : {
    "login" : "ghiadeluxe",
    "id" : 562351,
    "avatar_url" : "https://avatars.githubusercontent.com/u/562351?",
    "gravatar_id" : "5d17b918a4744e0abd3e19fee736213c",
    "url" : "https://api.github.com/users/ghiadeluxe",
    "html_url" : "https://github.com/ghiadeluxe",
    "followers_url" : "https://api.github.com/users/ghiadeluxe/followers",
    "following_url" : "https://api.github.com/users/ghiadeluxe/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ghiadeluxe/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ghiadeluxe/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ghiadeluxe/subscriptions",
    "organizations_url" : "https://api.github.com/users/ghiadeluxe/orgs",
    "repos_url" : "https://api.github.com/users/ghiadeluxe/repos",
    "events_url" : "https://api.github.com/users/ghiadeluxe/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ghiadeluxe/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-01-13T09:39:46Z",
  "updated_at" : "2013-03-28T20:08:04Z",
  "closed_at" : "2013-03-28T20:08:04Z",
  "body" : "I’ve been using assertThat() a lot and when there is a failure in a test, I’ve noticed an issue in the format of the error response. The Expect and Got values don’t line up. This becomes an issue with long comparison values. For example:\r\n \r\nassertThat(\"Help! Integers don't work\", 0, is(1)); // fails:\r\n     // failure message:\r\n     // Help! Integers don't work\r\n     // expected: is <1> \r\n     // got value: <0>\r\n \r\nWhat would be better is:\r\n     // failure message:\r\n     // Help! Integers don't work\r\n     // expected: is <1> \r\n     // got value:   <0>\r\n \r\n \r\nWith example:\r\n \r\nassertThat(\"Urls should match!\", “http://kentbeck.github.com/junit/javadoc/latest/”, is(“http://kentbeck.github.com/junit/jaavdoc/latest/”)); // fails:\r\n     // failure message:\r\n     // Urls should match\r\n     // expected: is <“http://kentbeck.github.com/junit/javadoc/latest/”> \r\n     // got value: <”http://kentbeck.github.com/junit/jaavdoc/latest/”>\r\n \r\nBetter:\r\n     // failure message:\r\n     // Urls should match\r\n     // expected: is <“http://kentbeck.github.com/junit/javadoc/latest/”> \r\n     // got value:   <“http://kentbeck.github.com/junit/jaavdoc/latest/”>\r\n \r\nWith the text lined up, it is much easier to see where the differences lie. If you have a complicated token value, the job of finding the difference becomes much easier with the values lined up.\r\n"
} ]