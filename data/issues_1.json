[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/31",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/31/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/31/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/31/events",
  "html_url" : "https://github.com/junit-team/junit/issues/31",
  "id" : 64785,
  "number" : 31,
  "title" : "Allow @Rule annotation on non-public fields",
  "user" : {
    "login" : "mknittig",
    "id" : 19261,
    "avatar_url" : "https://avatars.githubusercontent.com/u/19261?",
    "gravatar_id" : "cd1a1e21866bbc14235f08d13a7141be",
    "url" : "https://api.github.com/users/mknittig",
    "html_url" : "https://github.com/mknittig",
    "followers_url" : "https://api.github.com/users/mknittig/followers",
    "following_url" : "https://api.github.com/users/mknittig/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mknittig/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mknittig/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mknittig/subscriptions",
    "organizations_url" : "https://api.github.com/users/mknittig/orgs",
    "repos_url" : "https://api.github.com/users/mknittig/repos",
    "events_url" : "https://api.github.com/users/mknittig/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mknittig/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2009-10-04T14:44:06Z",
  "updated_at" : "2011-03-31T10:02:44Z",
  "closed_at" : "2011-03-02T13:37:34Z",
  "body" : "I really don't see why fields with a @Rule annotations must be public and it's quite easy to fix..."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/32",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/32/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/32/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/32/events",
  "html_url" : "https://github.com/junit-team/junit/issues/32",
  "id" : 71097,
  "number" : 32,
  "title" : "Suggestion: Allow @Rules to be instantiated by JUnit",
  "user" : {
    "login" : "aisrael",
    "id" : 89215,
    "avatar_url" : "https://avatars.githubusercontent.com/u/89215?",
    "gravatar_id" : "fe9bb29f576661916e29a8d327493d6b",
    "url" : "https://api.github.com/users/aisrael",
    "html_url" : "https://github.com/aisrael",
    "followers_url" : "https://api.github.com/users/aisrael/followers",
    "following_url" : "https://api.github.com/users/aisrael/following{/other_user}",
    "gists_url" : "https://api.github.com/users/aisrael/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/aisrael/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/aisrael/subscriptions",
    "organizations_url" : "https://api.github.com/users/aisrael/orgs",
    "repos_url" : "https://api.github.com/users/aisrael/repos",
    "events_url" : "https://api.github.com/users/aisrael/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/aisrael/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2009-10-20T02:27:09Z",
  "updated_at" : "2011-03-08T14:53:09Z",
  "closed_at" : "2011-03-08T14:53:09Z",
  "body" : "Merely voicing out an idea here that came to mind as I've been using @Rules. I'd like to put it in here just for the record, but if you guys have a better idea for the direction @Rules should go I'd be happy to go with that.\n\nCurrently, to use a rule the test class has to declare and instantiate the Rule object, like so:\n\n        @Rule\n        public MagicMocker magicMocker = new MagicMocker();\n\nBasically, I can see myself, and others, coming up with quite a few rules that the test itself doesn't interact with (and that have default constructors).\n\nMy idea is to let the test simply declare any such rules, using another annotation, and have JUnit take care of instantiation.\n\nJUnit already instantiates the test classes themselves, so I don't see why it can't instantiate other things. JUnit also already provides class-level annotations that affect test behavior (@RunWith) so I think whole the idea isn't entirely foreign to JUnit.\n\nFor example,\n\n    @Rules({TestPersistenceContext.class, FixturesLoader.class})\n    public class DaoTest {\n    \n\nIn the above, JUnit could take care of instantiating, then applying the rules that set up the test database and load data fixtures. The FixturesLoader.class could be a MethodRule that gets applied to all test methods. The resulting test code is more concise and less cluttered with rules/fixture setup.\n\nA further refinement would be to allow @Rules to selectively applied to methods. A contrived example:\n    \n        @Test\n        @Rules(ExpectedSqlException.class)\n        public void shouldThrowSqlException() {\n            ....\n    \nIn the above case, the ExpectedSqlException rule will only be instantiated and applied to that particular test method. All other test methods will only have the @Rules declared at the class-level.\n\nI realize I'm subverting Rules and using them as fixtures/scaffolding, but that's a discussion worthy of its own thread.\n\nI also realize my above use-cases can be solved by using a custom Runner, but in my mind a Runner represents the run-time context of a test and thus tests shouldn't have to care about who runs them. Plus, you can't use multiple Runners, can you?\n\nWhat do you guys think?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/33",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/33/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/33/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/33/events",
  "html_url" : "https://github.com/junit-team/junit/issues/33",
  "id" : 71554,
  "number" : 33,
  "title" : "junit-dep not uploaded to Maven repository since 4.5",
  "user" : {
    "login" : "MichaelHackett",
    "id" : 94180,
    "avatar_url" : "https://avatars.githubusercontent.com/u/94180?",
    "gravatar_id" : "4ca03e10a568685021307558d4c5d053",
    "url" : "https://api.github.com/users/MichaelHackett",
    "html_url" : "https://github.com/MichaelHackett",
    "followers_url" : "https://api.github.com/users/MichaelHackett/followers",
    "following_url" : "https://api.github.com/users/MichaelHackett/following{/other_user}",
    "gists_url" : "https://api.github.com/users/MichaelHackett/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/MichaelHackett/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/MichaelHackett/subscriptions",
    "organizations_url" : "https://api.github.com/users/MichaelHackett/orgs",
    "repos_url" : "https://api.github.com/users/MichaelHackett/repos",
    "events_url" : "https://api.github.com/users/MichaelHackett/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/MichaelHackett/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 41,
  "created_at" : "2009-10-20T20:23:02Z",
  "updated_at" : "2011-04-14T15:54:19Z",
  "closed_at" : "2011-04-14T15:54:19Z",
  "body" : "I see versions 4.6 and 4.7 of the bundled-libraries version of JUnit in the Maven Central repo, but no junit-dep. Can this be added by whoever is doing the uploads?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/34",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/34/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/34/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/34/events",
  "html_url" : "https://github.com/junit-team/junit/issues/34",
  "id" : 72860,
  "number" : 34,
  "title" : "Close down sourceforge issue trackers",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-10-23T13:28:57Z",
  "updated_at" : "2009-11-24T02:50:50Z",
  "closed_at" : "2009-11-24T02:50:50Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/35",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/35/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/35/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/35/events",
  "html_url" : "https://github.com/junit-team/junit/issues/35",
  "id" : 72904,
  "number" : 35,
  "title" : "we're breaking gump",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-10-23T15:25:09Z",
  "updated_at" : "2009-10-27T03:02:17Z",
  "closed_at" : "2009-10-27T03:02:17Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/36",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/36/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/36/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/36/events",
  "html_url" : "https://github.com/junit-team/junit/issues/36",
  "id" : 72906,
  "number" : 36,
  "title" : "Sync with most recent hamcrest?",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/hamcrest",
    "name" : "hamcrest",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 16,
  "created_at" : "2009-10-23T15:31:09Z",
  "updated_at" : "2012-08-05T10:51:08Z",
  "closed_at" : "2012-08-05T10:51:08Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/37",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/37/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/37/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/37/events",
  "html_url" : "https://github.com/junit-team/junit/issues/37",
  "id" : 74347,
  "number" : 37,
  "title" : "Incorporate classpath scanning suite into core JUnit?",
  "user" : {
    "login" : "georgthimm",
    "id" : 130240,
    "avatar_url" : "https://avatars.githubusercontent.com/u/130240?",
    "gravatar_id" : "329e2cd43c77b50f47e16e195abc39bd",
    "url" : "https://api.github.com/users/georgthimm",
    "html_url" : "https://github.com/georgthimm",
    "followers_url" : "https://api.github.com/users/georgthimm/followers",
    "following_url" : "https://api.github.com/users/georgthimm/following{/other_user}",
    "gists_url" : "https://api.github.com/users/georgthimm/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/georgthimm/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/georgthimm/subscriptions",
    "organizations_url" : "https://api.github.com/users/georgthimm/orgs",
    "repos_url" : "https://api.github.com/users/georgthimm/repos",
    "events_url" : "https://api.github.com/users/georgthimm/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/georgthimm/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2009-10-27T00:55:33Z",
  "updated_at" : "2013-10-11T11:20:24Z",
  "closed_at" : null,
  "body" : "Hi!\n\nI would have a suggestion (acctually this is mostly\nimplemented and works well for me)  for an extension to the\nway tests are added to Suites in JUnit: the suite gets two\nnew annotations: two regular expressions, which are matched\nagainst class-files in the CLASSPATH. If the first regex\nmatches a class name, the class is included, except if the\nsecond one matched also. Example:\n\n@RunWith(Suite .class)\n@Suite .SuiteClasses(value = {}, include = \".*Rational.*Test\", exclude = \".*Black.*\")\npublic class SomeTests { }\n\nThe modification is actually a  rather simple modification\nto  class  Suite (see below).\n\nMaybe you consider to include this into the next release? If\nyes, I would be willing to invest a little more time to sort\nout issues that may come up.\n\nI am aware that something like this can be done using \nmaven2 (surefire-plugin), this is fairly easy in ant, and \nDavid Saff pointed me to a similar ides realised by \nJohannes Link in ClasspathSuite. However, at least the first \ntwo solutions don't work too well with eclipse, and the latter\nrequires yet another software package for a fairly simple\nfunctionality. \n\nRegards,\n  Georg\n\n    import java.io.File;\n    import java.lang.annotation.ElementType;\n    import java.lang.annotation.Inherited;\n    import java.lang.annotation.Retention;\n    import java.lang.annotation.RetentionPolicy;\n    import java.lang.annotation.Target;\n    import java.util.ArrayList;\n    import java.util.Arrays;\n    import java.util.HashSet;\n    import java.util.List;\n    import java.util.Set;\n    import java.util.regex.Pattern;\n\n    import org.junit.internal.builders.AllDefaultPossibilitiesBuilder;\n    import org.junit.runner.Description;\n    import org.junit.runner.Runner;\n    import org.junit.runner.notification.RunNotifier;\n    import org.junit.runners.ParentRunner;\n    import org.junit.runners.model.InitializationError;\n    import org.junit.runners.model.RunnerBuilder;\n\n    /**\n     * Using <code>Suite</code> as a runner allows you to manually\n     * build a suite containing tests from many classes. It is the JUnit 4\n     * equivalent of the JUnit 3.8.x\n     * static {@link junit.framework.Test} <code>suite()</code> method. To use it,\n     * annotate a class\n     * with <code>@RunWith(Suite.class)</code> and\n     * <code>@SuiteClasses([{TestClass1.class, ...}][,include=\"<em>regexp</em>\"[,exclude=\"<em>regexp</em>\"]])</code>\n     * .\n     * When you run this class, it will run all specified tests classes. The\n     * following rules apply:\n     * <ul>\n     * <li>The explicitly in the attribute {@code value} specified classes (if any)\n     * are always run.</li>\n     * <li>Any file in the class path (imported or not) having the postfix <{@code\n     * .class} with its full class name matching the regular expression in the\n     * attribute {@code include} is included in the test, except if its class name\n     * also matches the regular expression in the attribute {@code exclude}.</li>\n     * <li>No effort is taken to exclude files which are not JUnit tests (or not\n     * even java class files).</li>\n     * <li>The regular expression must match the entire class name. E.g. the class\n     * {@code my.example.exampleTest}, matches the following: \"{@code .*Test}\", \"\n     * {@code .*example.*}\", or \"{@code .*}, but not \"{@code Test}\".</li>\n     * <li>Classes stored in jar-files are disregarded.</li>\n     * </ul>\n     */\n    public class Suite\n    \t\textends ParentRunner<Runner>\n    {\n    \t/**\n    \t * Returns an empty suite.\n    \t */\n    \tpublic static Runner emptySuite()\n    \t{\n    \t\ttry {\n    \t\t\treturn new Suite((Class<?>) null, new Class<?>[0]);\n    \t\t} catch (InitializationError e) {\n    \t\t\tthrow new RuntimeException(\"This shouldn't be possible\");\n    \t\t}\n    \t}\n\n    \t/**\n    \t * The <code>SuiteClasses</code> annotation specifies the classes to be run\n    \t * when a class\n    \t * annotated with <code>@RunWith(Suite.class)</code> is run.\n    \t */\n    \t@Retention(RetentionPolicy.RUNTIME)\n    \t@Target(ElementType.TYPE)\n    \t@Inherited\n    \tpublic @interface SuiteClasses {\n    \t\t/**\n    \t\t * @return the classes to be run irrespective of the settings of {@code\n    \t\t *         #include()} and {@code exclude}\n    \t\t */\n    \t\tpublic Class<?>[] value() default {};\n\n    \t\t/**\n    \t\t * @return the regular expression a class name has to match in order to\n    \t\t *         be included into the test. Classes which match {@code\n    \t\t *         include} <em>AND</em> {@code exclude} are <em>NOT</em>\n    \t\t *         included.\n    \t\t */\n    \t\tpublic String include() default \"\";\n\n    \t\t/**\n    \t\t * @return the regular expression a class name may not match.\n    \t\t */\n    \t\tpublic String exclude() default \"\";\n    \t}\n\n    \tstatic Class<?>[] getAnnotatedClasses(Class<?> klass)\n    \t\t\tthrows InitializationError\n    \t{\n    \t\tSuiteClasses annotation = klass.getAnnotation(SuiteClasses.class);\n    \t\tif (annotation == null)\n    \t\t\tthrow new InitializationError(String.format(\n    \t\t\t\t\t\"class '%s' must have a SuiteClasses annotation\", klass\n    \t\t\t\t\t\t\t.getName()));\n    \t\tPattern includePattern = Pattern.compile(annotation.include());\n    \t\tPattern excludePattern = Pattern.compile(annotation.exclude());\n    \t\tif (annotation.include() != null && annotation.include().length() > 0) {\n    \t\t\tList<String> paths = Arrays.asList(System.getProperty(\n    \t\t\t\t\t\"java.class.path\").split(\":\"));\n    \t\t\tHashSet<String> names = new HashSet<String>();\n    \t\t\tfor (String p : paths) {\n    \t\t\t\tFile file = new File(p);\n    \t\t\t\tString testClass = isTestClass(file, \"\", includePattern,\n    \t\t\t\t\t\texcludePattern);\n    \t\t\t\tif (testClass != null)\n    \t\t\t\t\tnames.add(testClass);\n    \t\t\t\telse {\n    \t\t\t\t\tif (file.isDirectory()) {\n    \t\t\t\t\t\tcollectClassNames(file, \"\", includePattern,\n    \t\t\t\t\t\t\t\texcludePattern, names);\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t// System.err.println(\"Tests matching the pattern: \" + names);\n    \t\t\tArrayList<Class<?>> classes = new ArrayList<Class<?>>(Arrays\n    \t\t\t\t\t.asList(annotation.value()));\n    \t\t\tfor (String name : names) {\n    \t\t\t\ttry {\n    \t\t\t\t\tclasses.add(ClassLoader.getSystemClassLoader().loadClass(\n    \t\t\t\t\t\t\tname));\n    \t\t\t\t} catch (ClassNotFoundException e) {\n    \t\t\t\t\tSystem.err.println(\"Could not load class \" + name);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tClass<?>[] classes_ = new Class[classes.size()];\n    \t\t\tclasses.toArray(classes_);\n    \t\t\treturn classes_;\n    \t\t}\n    \t\treturn annotation.value();\n    \t}\n\n    \t/**\n    \t * Tests file names for whether they represent a test\n    \t * \n    \t * @param file\n    \t *            a potential class-file\n    \t * @param packageName\n    \t *            The name of the package the {@code file} would be part of.\n    \t * @param include\n    \t *            the pattern the class name must match to be included.\n    \t * @param exclude\n    \t *            the pattern excluding classes.\n    \t * @return the equivalent class name if the file can be assumed to be a\n    \t *         class file (i.e. is a plain file\n    \t *         and has a postfix {@code .class} and the class name matches\n    \t *         {@link SuiteClasses#include()} but not\n    \t *         {@link SuiteClasses#exclude()}.\n    \t */\n    \tstatic String isTestClass(File file, String packageName, Pattern include,\n    \t\t\tPattern exclude)\n    \t{\n    \t\tif (!file.isFile() || !file.getName().matches(\".*\\\\.class\"))\n    \t\t\treturn null;\n    \t\tString klassName = (packageName.length() > 0) ? (packageName + \".\" + file\n    \t\t\t\t.getName().replace(\".class\", \"\"))\n    \t\t\t\t: file.getName().replace(\".class\", \"\");\n    \t\tif (include.matcher(klassName).matches()\n    \t\t\t\t&& !exclude.matcher(klassName).matches()) return klassName;\n    \t\treturn null;\n\n    \t}\n\n    \t/**\n    \t * search for classes with names matching the given pattern.\n    \t * \n    \t * @param dir\n    \t *            the directory which is recursively searched.\n    \t * @param packageName\n    \t *            the current package name (as based on the search through the\n    \t *            deirctory hierarchy\n    \t * @param includePattern\n    \t *            a regular expression matched against fully quallified class\n    \t *            names.\n    \t * @param excludePattern\n    \t *            The pattern used to exclude classes.\n    \t * @param names\n    \t *            the collection of found class names.\n    \t */\n    \tprivate static void collectClassNames(final File dir,\n    \t\t\tfinal String packageName, final Pattern includePattern,\n    \t\t\tPattern excludePattern, final Set<String> names)\n    \t{\n    \t\tfor (File file : dir.listFiles()) {\n    \t\t\tString testClass = isTestClass(file, packageName, includePattern,\n    \t\t\t\t\texcludePattern);\n    \t\t\tif (testClass != null) {\n    \t\t\t\tnames.add(testClass);\n    \t\t\t}\n    \t\t\telse {\n    \t\t\t\tif (file.isDirectory()) {\n    \t\t\t\t\tcollectClassNames(\n    \t\t\t\t\t\t\tfile,\n    \t\t\t\t\t\t\t(packageName.length() > 0) ? (packageName + \".\" + file\n    \t\t\t\t\t\t\t\t\t.getName())\n    \t\t\t\t\t\t\t\t\t: file.getName(), includePattern,\n    \t\t\t\t\t\t\texcludePattern, names);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \tprivate final List<Runner> fRunners;\n\n    \t/**\n    \t * Called reflectively on classes annotated with\n    \t * <code>@RunWith(Suite.class)</code>\n    \t * \n    \t * @param klass\n    \t *            the root class\n    \t * @param builder\n    \t *            builds runners for classes in the suite\n    \t * @throws InitializationError\n    \t */\n    \tpublic Suite(Class<?> klass, RunnerBuilder builder)\n    \t\t\tthrows InitializationError\n    \t{\n    \t\tthis(builder, klass, getAnnotatedClasses(klass));\n    \t}\n\n    \t/**\n    \t * Call this when there is no single root class (for example, multiple class\n    \t * names\n    \t * passed on the command line to {@link org.junit.runner.JUnitCore}\n    \t * \n    \t * @param builder\n    \t *            builds runners for classes in the suite\n    \t * @param classes\n    \t *            the classes in the suite\n    \t * @throws InitializationError\n    \t */\n    \tpublic Suite(RunnerBuilder builder, Class<?>[] classes)\n    \t\t\tthrows InitializationError\n    \t{\n    \t\tthis(null, builder.runners(null, classes));\n    \t}\n\n    \t/**\n    \t * Call this when the default builder is good enough. Left in for\n    \t * compatibility with JUnit 4.4.\n    \t * \n    \t * @param klass\n    \t *            the root of the suite\n    \t * @param suiteClasses\n    \t *            the classes in the suite\n    \t * @throws InitializationError\n    \t */\n    \tprotected Suite(Class<?> klass, Class<?>[] suiteClasses)\n    \t\t\tthrows InitializationError\n    \t{\n    \t\tthis(new AllDefaultPossibilitiesBuilder(true), klass, suiteClasses);\n    \t}\n\n    \t/**\n    \t * Called by this class and subclasses once the classes making up the suite\n    \t * have been determined\n    \t * \n    \t * @param builder\n    \t *            builds runners for classes in the suite\n    \t * @param klass\n    \t *            the root of the suite\n    \t * @param suiteClasses\n    \t *            the classes in the suite\n    \t * @throws InitializationError\n    \t */\n    \tprotected Suite(RunnerBuilder builder, Class<?> klass,\n    \t\t\tClass<?>[] suiteClasses) throws InitializationError\n    \t{\n    \t\tthis(klass, builder.runners(klass, suiteClasses));\n    \t}\n\n    \t/**\n    \t * Called by this class and subclasses once the runners making up the suite\n    \t * have been determined\n    \t * \n    \t * @param klass\n    \t *            root of the suite\n    \t * @param runners\n    \t *            for each class in the suite, a {@link Runner}\n    \t * @throws InitializationError\n    \t */\n    \tprotected Suite(Class<?> klass, List<Runner> runners)\n    \t\t\tthrows InitializationError\n    \t{\n    \t\tsuper(klass);\n    \t\tfRunners = runners;\n    \t}\n\n    \t@Override\n    \tprotected List<Runner> getChildren()\n    \t{\n    \t\treturn fRunners;\n    \t}\n\n    \t@Override\n    \tprotected Description describeChild(Runner child)\n    \t{\n    \t\treturn child.getDescription();\n    \t}\n\n    \t@Override\n    \tprotected void runChild(Runner runner, final RunNotifier notifier)\n    \t{\n    \t\trunner.run(notifier);\n    \t}\n    }"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/38",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/38/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/38/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/38/events",
  "html_url" : "https://github.com/junit-team/junit/issues/38",
  "id" : 74454,
  "number" : 38,
  "title" : "ParentRunner filtering \"internally temporarily\" broken",
  "user" : {
    "login" : "reinholdfuereder",
    "id" : 145182,
    "avatar_url" : "https://avatars.githubusercontent.com/u/145182?",
    "gravatar_id" : "e181815c6dd4909e2839f0f30dfec805",
    "url" : "https://api.github.com/users/reinholdfuereder",
    "html_url" : "https://github.com/reinholdfuereder",
    "followers_url" : "https://api.github.com/users/reinholdfuereder/followers",
    "following_url" : "https://api.github.com/users/reinholdfuereder/following{/other_user}",
    "gists_url" : "https://api.github.com/users/reinholdfuereder/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/reinholdfuereder/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/reinholdfuereder/subscriptions",
    "organizations_url" : "https://api.github.com/users/reinholdfuereder/orgs",
    "repos_url" : "https://api.github.com/users/reinholdfuereder/repos",
    "events_url" : "https://api.github.com/users/reinholdfuereder/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/reinholdfuereder/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/needs-more-info",
    "name" : "needs-more-info",
    "color" : "4ae6c7"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 7,
  "created_at" : "2009-10-27T09:31:03Z",
  "updated_at" : "2011-05-02T12:51:16Z",
  "closed_at" : "2011-05-02T12:51:16Z",
  "body" : "(I was not sure how to formulate the summary...) This issue is also related to these JUnit bugs and is in version 4.7 (release), but may have entered already after version 4.4:\n\n* \"CompositeRunner.filter incorrect if child throws NoTestsRema\" - ID: 1815188\n\n* \"Sorters and Filters are ignored in 4.5\" - ID: 2008607\n\nWhen using a filter on a composite test, i.e. ParentRunner and below, the filtering happens in two steps:\n1. Partial filtering on composite test based on Filter class and Filterable interface 2. Full filtering when running the tests via ParentRunner class:\nchildrenInvoker(), runChildren() and getFilteredChildren() methods\n\nI think the behaviour of JUnit 4.3.1 and 4.4 was different and better in that the filtering was done in a single step.\nThe problems of the current approach are in my mind:\n* The first filtering that throws the NoTestsRemainException is not complete, so it may happen that only the second filtering removes \"silently\"\nsome more tests. This leads in my case to JUnit reports (via ant-junit) that contains test classes without test cases.\n* Performance could be improved: as filtering is done multiple times and\nshouldRun() is additionally used vai getDescription() and sorting in\ngetFilteredChildren())\n\nAs I think it was more or less suggested in one of the referenced bug reports above a quick \"fix\" (in fact a refactoring of the two step filtering should be strived for in my mind) is in ParentRunner.filter(Filter filter)\nmethod:\n\nOld:\n\n    public void filter(Filter filter) throws NoTestsRemainException {\n    \tfFilter= filter;\n    \n    \tfor (T each : getChildren())\n    \t\tif (shouldRun(each))\n    \t\t\treturn;\n    \tthrow new NoTestsRemainException();\n    }\n\nNew:\n\n    public void filter(Filter filter) throws NoTestsRemainException {\n    \tfFilter= filter;\n    \n        ArrayList<T> filtered= new ArrayList<T>();\n        for (T each : getChildren()) {\n            if (shouldRun(each)) {\n                try {\n                    filterChild(each);\n                    filtered.add(each);\n                } catch (NoTestsRemainException e) {\n                    // don't add it\n                }\n            }\n        }\n        if (filtered.isEmpty()) {\n            throw new NoTestsRemainException();\n        }\n    }"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/39",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/39/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/39/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/39/events",
  "html_url" : "https://github.com/junit-team/junit/issues/39",
  "id" : 74455,
  "number" : 39,
  "title" : "Only one (the last) filter is considered",
  "user" : {
    "login" : "reinholdfuereder",
    "id" : 145182,
    "avatar_url" : "https://avatars.githubusercontent.com/u/145182?",
    "gravatar_id" : "e181815c6dd4909e2839f0f30dfec805",
    "url" : "https://api.github.com/users/reinholdfuereder",
    "html_url" : "https://github.com/reinholdfuereder",
    "followers_url" : "https://api.github.com/users/reinholdfuereder/followers",
    "following_url" : "https://api.github.com/users/reinholdfuereder/following{/other_user}",
    "gists_url" : "https://api.github.com/users/reinholdfuereder/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/reinholdfuereder/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/reinholdfuereder/subscriptions",
    "organizations_url" : "https://api.github.com/users/reinholdfuereder/orgs",
    "repos_url" : "https://api.github.com/users/reinholdfuereder/repos",
    "events_url" : "https://api.github.com/users/reinholdfuereder/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/reinholdfuereder/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2009-10-27T09:33:57Z",
  "updated_at" : "2011-04-15T19:29:09Z",
  "closed_at" : "2011-04-15T19:29:09Z",
  "body" : "In the course of upgrading from JUnit 4.4 to JUnit 4.7 I stumbled over this\nbug:\n\n    @Test\n    public void testMultipleFilters() throws Exception {\n        JUnitCore junitCore = new JUnitCore();\n        Request request = Request.aClass(ExampleTest.class);\n        Request requestFiltered = request.filterWith(new SingleMethodNameFilter(\"test1\"));\n        Request requestFilteredFiltered = requestFiltered.filterWith(new SingleMethodNameFilter(\"test2\"));\n        Result result = junitCore.run(requestFilteredFiltered);\n        printResult(result);\n        assertEquals(1, result.getRunCount()); // Fails here: actual 2\n    }\n\n    private static class SingleMethodNameFilter extends Filter {\n\n        private String methodName;\n\n        public SingleMethodNameFilter(String methodName) {\n            this.methodName = methodName;\n        }\n\n        @Override\n        public boolean shouldRun(Description description) {\n            return !description.getMethodName().equals(methodName);\n        }\n\n        @Override\n        public String describe() {\n            return \"filter method name: \" + methodName;\n        }\n\n    }\n\n    public class ExampleTest {\n\n    @Test\n    public void test1() throws Exception {\n        System.out.println(\"Run: test1\");\n        assertEquals(1, 1);\n    }\n\n    @Test\n    public void test2() throws Exception {\n        System.out.println(\"Run: test2\");\n        assertEquals(1, 1);\n    }\n\n    @Test\n    public void test3() throws Exception {\n        System.out.println(\"Run: test3\");\n        assertEquals(1, 1);\n    }\n\n    }\n\nOf course one could make a composite Filter, but the old behaviour and the API seem to show that this limitation is not on purpose.\n\nThe Bug \"ID: 2094316\" (\"Request.filterWith has bizarre behavior\") is kind of related, but does not point to the main problem in my mind. \n\nMoreover, the filtering is carried out too often in my mind (we are using filters for a range of QA/TA related aspects): e.g. in the\ntestSingleFilter() method the filters shouldRun() method is called 11 times for ExampleTest (containing 3 test cases):\n\n    @Test\n    public void testSingleFilter() throws Exception {\n        Request requestFiltered = request.filterWith(new SingleMethodNameFilter(\"test1\"));\n        Result result = junitCore.run(requestFiltered);\n        printResult(result);\n        assertEquals(2, result.getRunCount());\n    }"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/40",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/40/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/40/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/40/events",
  "html_url" : "https://github.com/junit-team/junit/issues/40",
  "id" : 75478,
  "number" : 40,
  "title" : "Declare rules on Suites, allow Propagation",
  "user" : {
    "login" : "brolund",
    "id" : 87684,
    "avatar_url" : "https://avatars.githubusercontent.com/u/87684?",
    "gravatar_id" : "58d99e391130383a77a54785f306da0e",
    "url" : "https://api.github.com/users/brolund",
    "html_url" : "https://github.com/brolund",
    "followers_url" : "https://api.github.com/users/brolund/followers",
    "following_url" : "https://api.github.com/users/brolund/following{/other_user}",
    "gists_url" : "https://api.github.com/users/brolund/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/brolund/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/brolund/subscriptions",
    "organizations_url" : "https://api.github.com/users/brolund/orgs",
    "repos_url" : "https://api.github.com/users/brolund/repos",
    "events_url" : "https://api.github.com/users/brolund/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/brolund/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/rules",
    "name" : "rules",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 8,
  "created_at" : "2009-10-29T06:59:21Z",
  "updated_at" : "2012-11-08T03:32:08Z",
  "closed_at" : null,
  "body" : "Rules is a nice mechanism for composing rather than inheriting functionality.\n\nThis concept could be extended to suites as well, like the @BeforeClass/@AfterClass annotation on a suite. \n\nAlso, by being able to declare suite rules, test case rules and test rules on a parent suite level and then propagate them down in the test hierarchy, further DRYness can be achieved.  \n\nI have made a test implementation for this, available at \nhttp://github.com/brolund/junit\n\nThis issue is related to issue 29"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/41",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/41/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/41/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/41/events",
  "html_url" : "https://github.com/junit-team/junit/issues/41",
  "id" : 75751,
  "number" : 41,
  "title" : "Allow programatic generation of Suite classes",
  "user" : {
    "login" : "Yishai",
    "id" : 146356,
    "avatar_url" : "https://avatars.githubusercontent.com/u/146356?",
    "gravatar_id" : "e4f98ae83b21084586866a4d796f8d8c",
    "url" : "https://api.github.com/users/Yishai",
    "html_url" : "https://github.com/Yishai",
    "followers_url" : "https://api.github.com/users/Yishai/followers",
    "following_url" : "https://api.github.com/users/Yishai/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Yishai/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Yishai/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Yishai/subscriptions",
    "organizations_url" : "https://api.github.com/users/Yishai/orgs",
    "repos_url" : "https://api.github.com/users/Yishai/repos",
    "events_url" : "https://api.github.com/users/Yishai/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Yishai/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-10-29T16:37:47Z",
  "updated_at" : "2013-03-11T18:57:44Z",
  "closed_at" : "2013-03-11T18:57:44Z",
  "body" : "\r\n\r\nAdd an annotation to the Suite class called SuiteMethod that would annotate\r\na method that returns a Class[] array. The Suite would then be built from\r\nthe two annotations, Suite.SuiteClasses plus any methods on the class (and\r\nenforce that they be public, static, take no parameters and return a\r\nClass[] array) that are annotated with Suite.SuiteMethod and build the\r\nSuite as a combination of all of the Arrays returned. Multiple methods\r\nreturn the same class, my preference would be to only run the class once.\r\n\r\nAn alternative would be to create a separate runner for a class has the\r\n@SuiteMethod."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/42",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/42/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/42/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/42/events",
  "html_url" : "https://github.com/junit-team/junit/issues/42",
  "id" : 80472,
  "number" : 42,
  "title" : "Confusing error for non-static inner test classes",
  "user" : {
    "login" : "georgthimm",
    "id" : 130240,
    "avatar_url" : "https://avatars.githubusercontent.com/u/130240?",
    "gravatar_id" : "329e2cd43c77b50f47e16e195abc39bd",
    "url" : "https://api.github.com/users/georgthimm",
    "html_url" : "https://github.com/georgthimm",
    "followers_url" : "https://api.github.com/users/georgthimm/followers",
    "following_url" : "https://api.github.com/users/georgthimm/following{/other_user}",
    "gists_url" : "https://api.github.com/users/georgthimm/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/georgthimm/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/georgthimm/subscriptions",
    "organizations_url" : "https://api.github.com/users/georgthimm/orgs",
    "repos_url" : "https://api.github.com/users/georgthimm/repos",
    "events_url" : "https://api.github.com/users/georgthimm/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/georgthimm/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-11-09T05:05:53Z",
  "updated_at" : "2011-09-19T14:36:08Z",
  "closed_at" : "2011-09-19T14:36:08Z",
  "body" : "Hi!\r\n\r\nIf  the suite InnerTestClass (see below) is run, an error stating \"Test class should have exactly one public zero-argument constructor\" is issued. However, the real issue is that the inner test class should be \"static\" (at least as long as JUnit does not provide a way to instantiate from an outer class). \r\n\r\nFrom what I gather is, that a judiciously placed test like\r\nif (clazz.isMemberClass() && ! Modifier.isStatic(clazz.getModifiers())\r\n     throw new Error(\"inner class \" + clazz.getName() + \" must be declared static.\");\r\nshould do the trick.\r\n\r\nCheers,\r\n Georg\r\n\r\n\r\n@RunWith(Suite.class)\r\n@SuiteClasses(\r\n{\r\n\tInnerTestClass.T1.class\r\n})\r\npublic class InnerTestClass\r\n{\r\n\tpublic class T1\r\n\t{\r\n\t\t@Test public void test() {\t}\r\n\t}\r\n}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/43",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/43/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/43/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/43/events",
  "html_url" : "https://github.com/junit-team/junit/issues/43",
  "id" : 83875,
  "number" : 43,
  "title" : "org.junit.runner.Description should allow File and Line Number Specification",
  "user" : {
    "login" : "fowles",
    "id" : 46858,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46858?",
    "gravatar_id" : "aa332b3a85f88a5cf502b138600ab422",
    "url" : "https://api.github.com/users/fowles",
    "html_url" : "https://github.com/fowles",
    "followers_url" : "https://api.github.com/users/fowles/followers",
    "following_url" : "https://api.github.com/users/fowles/following{/other_user}",
    "gists_url" : "https://api.github.com/users/fowles/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/fowles/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/fowles/subscriptions",
    "organizations_url" : "https://api.github.com/users/fowles/orgs",
    "repos_url" : "https://api.github.com/users/fowles/repos",
    "events_url" : "https://api.github.com/users/fowles/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/fowles/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/descriptions",
    "name" : "descriptions",
    "color" : "009800"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 18,
  "created_at" : "2009-11-16T17:56:16Z",
  "updated_at" : "2014-01-29T05:31:03Z",
  "closed_at" : null,
  "body" : "We use a custom ParentRunner to run tests that are specified via custom xml\r\nfiles for our product. We would greatly like to be able to encode the file\r\nand line number of the underlying xml for a test in such a way that we can click on\r\nthe tests in the eclipse runner and jump straight to the xml file and the\r\nline number."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/44",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/44/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/44/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/44/events",
  "html_url" : "https://github.com/junit-team/junit/issues/44",
  "id" : 83904,
  "number" : 44,
  "title" : "Parameterized runner should name tests better than sequential numbers",
  "user" : {
    "login" : "anshnd",
    "id" : 153987,
    "avatar_url" : "https://avatars.githubusercontent.com/u/153987?",
    "gravatar_id" : "8edd049315d213aec4bd7c46b87a1b74",
    "url" : "https://api.github.com/users/anshnd",
    "html_url" : "https://github.com/anshnd",
    "followers_url" : "https://api.github.com/users/anshnd/followers",
    "following_url" : "https://api.github.com/users/anshnd/following{/other_user}",
    "gists_url" : "https://api.github.com/users/anshnd/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/anshnd/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/anshnd/subscriptions",
    "organizations_url" : "https://api.github.com/users/anshnd/orgs",
    "repos_url" : "https://api.github.com/users/anshnd/repos",
    "events_url" : "https://api.github.com/users/anshnd/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/anshnd/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 42,
  "created_at" : "2009-11-16T18:55:07Z",
  "updated_at" : "2014-02-12T15:33:14Z",
  "closed_at" : "2012-04-12T13:48:39Z",
  "body" : "Right now the test names are named sequentially 0,1, etc in Parameterized:\r\n\r\n@Override\r\nprotected String getName() {\r\nreturn String.format(\"[%s]\", fParameterSetNumber);\r\n}\r\n\r\n@Override\r\nprotected String testName(final Method method) {\r\nreturn String.format(\"%s[%s]\", method.getName(), fParameterSetNumber);\r\n}\r\n\r\nIt would help if the data themselves were to be used in determining the name.  Proposed alternatives for name (which has to be determinited statically before Test is instantiated):\r\n\r\n- call toString on first parameter\r\n- call the a newly added names attribute to Parameters annotation (with default empty names for compatibility)\r\n\tpublic String[] names() default {};\r\n- call a public, static (!) method annotated by newly-defined @TestName\r\n and accepting the same arguments as the constructor\r\n\r\nI can provide (again) a patch.  This issue was tracked as http://sourceforge.net/tracker/?func=detail&atid=365278&aid=1742040&group_id=15278 and https://sourceforge.net/tracker/?func=detail&atid=365278&aid=1630834&group_id=15278\r\nI can submit a patch if needed"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/45",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/45/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/45/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/45/events",
  "html_url" : "https://github.com/junit-team/junit/issues/45",
  "id" : 83949,
  "number" : 45,
  "title" : "Add Before and After Parameterized Run annotations",
  "user" : {
    "login" : "bigmikef",
    "id" : 65827,
    "avatar_url" : "https://avatars.githubusercontent.com/u/65827?",
    "gravatar_id" : "782b6fada022deb42b0b2a1b59b60904",
    "url" : "https://api.github.com/users/bigmikef",
    "html_url" : "https://github.com/bigmikef",
    "followers_url" : "https://api.github.com/users/bigmikef/followers",
    "following_url" : "https://api.github.com/users/bigmikef/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bigmikef/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bigmikef/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bigmikef/subscriptions",
    "organizations_url" : "https://api.github.com/users/bigmikef/orgs",
    "repos_url" : "https://api.github.com/users/bigmikef/repos",
    "events_url" : "https://api.github.com/users/bigmikef/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bigmikef/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 31,
  "created_at" : "2009-11-16T20:00:50Z",
  "updated_at" : "2014-03-20T17:26:51Z",
  "closed_at" : null,
  "body" : "Currently there is no simple way for a method to be invoked before or after a Parameterized instance is ran.\r\n\r\nSaid another way, along with @BeforeClass and @AfterClass there should be @BeforeParameterRun @AfterParameterRun.  Each fires before/after a Parameterized instance is ran.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/46",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/46/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/46/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/46/events",
  "html_url" : "https://github.com/junit-team/junit/issues/46",
  "id" : 83952,
  "number" : 46,
  "title" : "Name parameterized test cases",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2009-11-16T20:06:57Z",
  "updated_at" : "2014-02-12T15:32:40Z",
  "closed_at" : "2009-11-18T19:20:50Z",
  "body" : "Is there any way to attach a name to each test case in a parameterized test such that the name appears on the junit output? If not I'd like to request such a\r\ncapability. Thanks.\r\n\r\nWas https://sourceforge.net/tracker/?func=detail&atid=365278&aid=2816904&group_id=15278"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/47",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/47/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/47/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/47/events",
  "html_url" : "https://github.com/junit-team/junit/issues/47",
  "id" : 83958,
  "number" : 47,
  "title" : "Allowing stopping of tests externally",
  "user" : {
    "login" : "abyx",
    "id" : 114588,
    "avatar_url" : "https://avatars.githubusercontent.com/u/114588?",
    "gravatar_id" : "07eabe24326e5c3ae83ca52ef05b9cb8",
    "url" : "https://api.github.com/users/abyx",
    "html_url" : "https://github.com/abyx",
    "followers_url" : "https://api.github.com/users/abyx/followers",
    "following_url" : "https://api.github.com/users/abyx/following{/other_user}",
    "gists_url" : "https://api.github.com/users/abyx/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/abyx/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/abyx/subscriptions",
    "organizations_url" : "https://api.github.com/users/abyx/orgs",
    "repos_url" : "https://api.github.com/users/abyx/repos",
    "events_url" : "https://api.github.com/users/abyx/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/abyx/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2009-11-16T20:20:32Z",
  "updated_at" : "2012-05-17T17:39:23Z",
  "closed_at" : "2012-05-17T17:39:23Z",
  "body" : "[This ticket was copied from the old sourceforge tracker, original issue created Feb 21 2008]\r\nCurrently, the only way to stop tests that are being run using JUnitCore,\r\nis to implement a Runner that then has access to RunNotifier.pleaseStop().\r\nThis was possible to do in JUnit3 using TestResult.stop().\r\n\r\nIn my work place we found this feature very useful, as had programs that\r\nsimply ran tests and processed the output. These programs weren't too\r\ncoupled with JUnit, they simply listened to TestResult and processed the\r\ndata. We would like to do the same thing with Result and RunListener.\r\n\r\nMy suggestion is simply to add pleaseStop() to JUnitCore (which is always\r\nused for simply running tests).\r\n\r\nThanks,\r\nAviv."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/48",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/48/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/48/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/48/events",
  "html_url" : "https://github.com/junit-team/junit/issues/48",
  "id" : 84091,
  "number" : 48,
  "title" : "Provide up-to-date javadocs on www.junit.org",
  "user" : {
    "login" : "irobertson",
    "id" : 154101,
    "avatar_url" : "https://avatars.githubusercontent.com/u/154101?",
    "gravatar_id" : "f07f95af36b78a8d151b42218fe8d1b4",
    "url" : "https://api.github.com/users/irobertson",
    "html_url" : "https://github.com/irobertson",
    "followers_url" : "https://api.github.com/users/irobertson/followers",
    "following_url" : "https://api.github.com/users/irobertson/following{/other_user}",
    "gists_url" : "https://api.github.com/users/irobertson/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/irobertson/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/irobertson/subscriptions",
    "organizations_url" : "https://api.github.com/users/irobertson/orgs",
    "repos_url" : "https://api.github.com/users/irobertson/repos",
    "events_url" : "https://api.github.com/users/irobertson/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/irobertson/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/regression",
    "name" : "regression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2009-11-16T22:54:04Z",
  "updated_at" : "2010-02-12T11:44:16Z",
  "closed_at" : "2009-12-17T20:12:03Z",
  "body" : "Latest Javadocs are not available any more on www.junit.org; the latest available seems to be http://junit.org/junit/javadoc/4.5/.  With the introduction of Rules, it would be very nice to see javadocs for 4.7."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/49",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/49/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/49/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/49/events",
  "html_url" : "https://github.com/junit-team/junit/issues/49",
  "id" : 84230,
  "number" : 49,
  "title" : "master git branch does not build on windows",
  "user" : {
    "login" : "krosenvold",
    "id" : 67744,
    "avatar_url" : "https://avatars.githubusercontent.com/u/67744?",
    "gravatar_id" : "48ad44fb319fc06a737a082820bff3ea",
    "url" : "https://api.github.com/users/krosenvold",
    "html_url" : "https://github.com/krosenvold",
    "followers_url" : "https://api.github.com/users/krosenvold/followers",
    "following_url" : "https://api.github.com/users/krosenvold/following{/other_user}",
    "gists_url" : "https://api.github.com/users/krosenvold/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/krosenvold/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/krosenvold/subscriptions",
    "organizations_url" : "https://api.github.com/users/krosenvold/orgs",
    "repos_url" : "https://api.github.com/users/krosenvold/repos",
    "events_url" : "https://api.github.com/users/krosenvold/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/krosenvold/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2009-11-17T06:37:45Z",
  "updated_at" : "2011-09-23T20:04:00Z",
  "closed_at" : "2011-09-23T20:04:00Z",
  "body" : "With or without cygwin:\r\n\r\nc:\\src\\junitkb\\build.xml:113: Execute failed: java.io.IOException: Cannot run program \"build\\Markdown.pl\": CreateProcess error=193, %1 is not a valid Win32 application\r\n\r\nMuch as I dislike windows, I was hoping to build ;)\r\n\r\nMy kludge to build was to modify build.xml as follows:\r\n\t<target name=\"release-notes\" if=\"os.family!='windows' \">\r\n\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/50",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/50/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/50/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/50/events",
  "html_url" : "https://github.com/junit-team/junit/issues/50",
  "id" : 84994,
  "number" : 50,
  "title" : "additional Parameter for the @Test - invocationCount ",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2009-11-18T19:28:30Z",
  "updated_at" : "2012-06-01T15:44:45Z",
  "closed_at" : "2012-06-01T15:44:45Z",
  "body" : "[copied, on request, from http://sourceforge.net/tracker/?func=detail&atid=365278&aid=1941834&group_id=15278]\r\n\r\nPlease support invocationCount as an additional Parameter for the @Test-Annotation.\r\n\r\nI think this would be easy and useful.\r\n\r\nAdditionally it would be useful to add successPercentage too.\r\n\r\n(like TestNG)"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/51",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/51/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/51/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/51/events",
  "html_url" : "https://github.com/junit-team/junit/issues/51",
  "id" : 85559,
  "number" : 51,
  "title" : "TestWatchman and Verifier should be abstract",
  "user" : {
    "login" : "jasonngyl",
    "id" : 155755,
    "avatar_url" : "https://avatars.githubusercontent.com/u/155755?",
    "gravatar_id" : "6441b6c0d7edcdc06cd4e1b92dfd6208",
    "url" : "https://api.github.com/users/jasonngyl",
    "html_url" : "https://github.com/jasonngyl",
    "followers_url" : "https://api.github.com/users/jasonngyl/followers",
    "following_url" : "https://api.github.com/users/jasonngyl/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jasonngyl/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jasonngyl/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jasonngyl/subscriptions",
    "organizations_url" : "https://api.github.com/users/jasonngyl/orgs",
    "repos_url" : "https://api.github.com/users/jasonngyl/repos",
    "events_url" : "https://api.github.com/users/jasonngyl/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jasonngyl/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-11-20T02:38:47Z",
  "updated_at" : "2012-05-25T21:25:47Z",
  "closed_at" : "2012-05-25T21:25:47Z",
  "body" : "Was implementing TestWatchman and realised that the class is not abstract but yet does nothing when used.\r\nBoth TestWatchman and Verifier should be made abstract like ExternalResource, to clearly document that they are meant to be extended and not to be used as it is."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/52",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/52/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/52/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/52/events",
  "html_url" : "https://github.com/junit-team/junit/issues/52",
  "id" : 85648,
  "number" : 52,
  "title" : "Improve support for grouping/partitioning tests into suites",
  "user" : {
    "login" : "tomAufGithub",
    "id" : 155834,
    "avatar_url" : "https://avatars.githubusercontent.com/u/155834?",
    "gravatar_id" : "20038c88ae159874b6d0429d1f33f432",
    "url" : "https://api.github.com/users/tomAufGithub",
    "html_url" : "https://github.com/tomAufGithub",
    "followers_url" : "https://api.github.com/users/tomAufGithub/followers",
    "following_url" : "https://api.github.com/users/tomAufGithub/following{/other_user}",
    "gists_url" : "https://api.github.com/users/tomAufGithub/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/tomAufGithub/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/tomAufGithub/subscriptions",
    "organizations_url" : "https://api.github.com/users/tomAufGithub/orgs",
    "repos_url" : "https://api.github.com/users/tomAufGithub/repos",
    "events_url" : "https://api.github.com/users/tomAufGithub/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/tomAufGithub/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2009-11-20T08:11:21Z",
  "updated_at" : "2011-03-02T14:17:53Z",
  "closed_at" : "2011-03-02T14:17:53Z",
  "body" : "like https://sourceforge.net/tracker/?func=detail&aid=1748683&group_id=15278&atid=365278"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/53",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/53/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/53/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/53/events",
  "html_url" : "https://github.com/junit-team/junit/issues/53",
  "id" : 88093,
  "number" : 53,
  "title" : "Create a \"support\" page on junit.org",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-11-25T16:30:20Z",
  "updated_at" : "2012-05-18T15:07:34Z",
  "closed_at" : "2012-05-18T15:07:34Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/54",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/54/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/54/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/54/events",
  "html_url" : "https://github.com/junit-team/junit/issues/54",
  "id" : 88123,
  "number" : 54,
  "title" : "Document categories better",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2009-11-25T16:48:21Z",
  "updated_at" : "2012-05-30T17:17:35Z",
  "closed_at" : "2012-05-30T17:17:35Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/55",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/55/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/55/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/55/events",
  "html_url" : "https://github.com/junit-team/junit/issues/55",
  "id" : 89649,
  "number" : 55,
  "title" : "Type Matching Between MultiPointsMethod and array Is Not Performed Correctly.",
  "user" : {
    "login" : "stan6",
    "id" : 159520,
    "avatar_url" : "https://avatars.githubusercontent.com/u/159520?",
    "gravatar_id" : "e2077dba414d9b1e71e40572a9110fe9",
    "url" : "https://api.github.com/users/stan6",
    "html_url" : "https://github.com/stan6",
    "followers_url" : "https://api.github.com/users/stan6/followers",
    "following_url" : "https://api.github.com/users/stan6/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stan6/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stan6/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stan6/subscriptions",
    "organizations_url" : "https://api.github.com/users/stan6/orgs",
    "repos_url" : "https://api.github.com/users/stan6/repos",
    "events_url" : "https://api.github.com/users/stan6/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stan6/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/nonregression",
    "name" : "nonregression",
    "color" : "ededed"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2009-11-29T17:34:56Z",
  "updated_at" : "2012-08-21T17:36:58Z",
  "closed_at" : "2012-08-21T17:36:58Z",
  "body" : "DataPoints declared in MultiPointsMethod will be matched incorrectly with array causing an exception due to argument type mismatch. Below is an example showing the bug:  \n @RunWith(Theories.class)\npublic class TestDataPoints {\n\n\t@DataPoint\n\tpublic static String[] stringArr1= { \"Good\", \"Morning\" };\n\n\t@DataPoints\n\tpublic static String[] stringArr2() {\n\t\treturn new String[] { \"Hello\", \"World\" };\n\t}\n\n\t/**\n\t * An array is expected so only stringArr1 should be passed in but\n\t * stringArr2 will be passed in as parameter,causing an exception due to\n\t * argument type mismatch\n\t * \n\t * @param arr\n\t */\n\t@Theory\n\tpublic void testTheory(String[] arr) {\n\n\t\tfor (int i= 0; i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n\n}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/56",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/56/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/56/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/56/events",
  "html_url" : "https://github.com/junit-team/junit/issues/56",
  "id" : 89659,
  "number" : 56,
  "title" : "Type Matching Between MultiPointsMethod and array Is Not Performed Correctly.",
  "user" : {
    "login" : "stan6",
    "id" : 159520,
    "avatar_url" : "https://avatars.githubusercontent.com/u/159520?",
    "gravatar_id" : "e2077dba414d9b1e71e40572a9110fe9",
    "url" : "https://api.github.com/users/stan6",
    "html_url" : "https://github.com/stan6",
    "followers_url" : "https://api.github.com/users/stan6/followers",
    "following_url" : "https://api.github.com/users/stan6/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stan6/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stan6/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stan6/subscriptions",
    "organizations_url" : "https://api.github.com/users/stan6/orgs",
    "repos_url" : "https://api.github.com/users/stan6/repos",
    "events_url" : "https://api.github.com/users/stan6/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stan6/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2009-11-29T18:40:10Z",
  "updated_at" : "2011-03-02T14:19:03Z",
  "closed_at" : "2011-03-02T14:19:03Z",
  "body" : "DataPoints declared in MultiPointsMethod will be matched incorrectly with array causing an exception due to argument type mismatch. Below is an example showing the bug:  \n \n\t@RunWith(Theories.class)\n\tpublic class TestDataPoints {\n\t\n\t@DataPoint\n\tpublic static String[] stringArr1=new String[]{new String(\"Good\"),new String(\"Morning\")};\n\t\n\t@DataPoints\n\tpublic static String[] stringArr2() {\n\t\treturn new String[] {\n\t\t\tnew String(\"Hello\"),\n\t\t\tnew String(\"World\")\n\t\t};\n\t}\n\t\n\t/**\n\t * An array is expected so only stringArr1 should be passed in\n\t * but stringArr2 will be passed in as parameter,causing an \n\t * exception due to argument type mismatch \n\t * @param arr\n\t */\n\t@Theory\n\tpublic void testTheory(String[] arr) {\n\t\t\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n\t\n\t}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/57",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/57/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/57/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/57/events",
  "html_url" : "https://github.com/junit-team/junit/issues/57",
  "id" : 90827,
  "number" : 57,
  "title" : "Failed assumptions should cause the test to be ignored",
  "user" : {
    "login" : "dfabulich",
    "id" : 96150,
    "avatar_url" : "https://avatars.githubusercontent.com/u/96150?",
    "gravatar_id" : "0ded147122e1c318a63340568904762b",
    "url" : "https://api.github.com/users/dfabulich",
    "html_url" : "https://github.com/dfabulich",
    "followers_url" : "https://api.github.com/users/dfabulich/followers",
    "following_url" : "https://api.github.com/users/dfabulich/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dfabulich/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dfabulich/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dfabulich/subscriptions",
    "organizations_url" : "https://api.github.com/users/dfabulich/orgs",
    "repos_url" : "https://api.github.com/users/dfabulich/repos",
    "events_url" : "https://api.github.com/users/dfabulich/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dfabulich/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2009-12-01T22:43:37Z",
  "updated_at" : "2011-03-02T14:19:47Z",
  "closed_at" : "2011-03-02T14:19:47Z",
  "body" : "If you assumeThat(3, is(4)) your test will pass; instead, the test should be ignored.\r\n\r\nToday's behavior is tested in AssumptionTest#failedAssumptionsMeanPassing, where it asserts that the test passes and is NOT ignored."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/58",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/58/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/58/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/58/events",
  "html_url" : "https://github.com/junit-team/junit/issues/58",
  "id" : 91634,
  "number" : 58,
  "title" : "using @Rule TemporaryFolder inside @Before",
  "user" : {
    "login" : "francisdb",
    "id" : 161305,
    "avatar_url" : "https://avatars.githubusercontent.com/u/161305?",
    "gravatar_id" : "1d34218bc4e20dd8dfbc82cc20ea643a",
    "url" : "https://api.github.com/users/francisdb",
    "html_url" : "https://github.com/francisdb",
    "followers_url" : "https://api.github.com/users/francisdb/followers",
    "following_url" : "https://api.github.com/users/francisdb/following{/other_user}",
    "gists_url" : "https://api.github.com/users/francisdb/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/francisdb/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/francisdb/subscriptions",
    "organizations_url" : "https://api.github.com/users/francisdb/orgs",
    "repos_url" : "https://api.github.com/users/francisdb/repos",
    "events_url" : "https://api.github.com/users/francisdb/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/francisdb/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2009-12-03T09:43:55Z",
  "updated_at" : "2012-02-14T17:21:33Z",
  "closed_at" : "2011-03-02T14:21:36Z",
  "body" : "I'm explaining the issue with a unit test:\r\n\r\npublic class TemporaryFolderTest {\r\n\r\n\t@Rule\r\n\tpublic TemporaryFolder temporaryFolder = new TemporaryFolder();\r\n\t\r\n\t@Before\r\n\tpublic void before(){\r\n\t\tSystem.out.println(temporaryFolder.getRoot());\r\n\t\t// fails\r\n\t\t// assertNotNull(temporaryFolder.getRoot());\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void testTempFolder(){\r\n\t\tSystem.out.println(temporaryFolder.getRoot());\r\n\t\tassertNotNull(temporaryFolder.getRoot());\r\n\t}\r\n}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/59",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/59/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/59/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/59/events",
  "html_url" : "https://github.com/junit-team/junit/issues/59",
  "id" : 91957,
  "number" : 59,
  "title" : "Specifying -Djava.ext.dirs causes classpath problem",
  "user" : {
    "login" : "bcowan",
    "id" : 161581,
    "avatar_url" : "https://avatars.githubusercontent.com/u/161581?",
    "gravatar_id" : "451f8656e2951c9b30664d25e7c8790d",
    "url" : "https://api.github.com/users/bcowan",
    "html_url" : "https://github.com/bcowan",
    "followers_url" : "https://api.github.com/users/bcowan/followers",
    "following_url" : "https://api.github.com/users/bcowan/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bcowan/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bcowan/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bcowan/subscriptions",
    "organizations_url" : "https://api.github.com/users/bcowan/orgs",
    "repos_url" : "https://api.github.com/users/bcowan/repos",
    "events_url" : "https://api.github.com/users/bcowan/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bcowan/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2009-12-03T21:07:00Z",
  "updated_at" : "2014-01-29T05:38:49Z",
  "closed_at" : null,
  "body" : "If the java \"ext\" directory is specified on the command line, JUnit is unable to find the unit test classes. Whereas, if \"classpath\" is used, everything is fine.  When tests depend on a number of 3rd party libraries, the \"ext\" directory approach is far preferable.\r\n\r\nFor example:\r\n\r\njava -classpath /home/cowan/src/atst/lib/java/classes \r\n-Djava.ext.dirs=/home/cowan/src/atst/lib/java/ext org.junit.runner.JUnitCore atst.cs.test.TestAll\r\n\r\nresults in:\r\nJUnit version 4.7\r\nCould not find class: atst.cs.test.TestAll\r\n\r\nThe strange thing is that if the verbose flag is used, Java even logs that it successfully loaded the TestAll class from the appropriate directory before later displaying the error.\r\n\r\nIf the command line is modified to:\r\n\r\njava -classpath\r\n/home/cowan/src/atst/lib/java/classes:/home/cowan/src/atst/lib/java/ext/junit.jar\r\norg.junit.runner.JUnitCore atst.cs.test.TestAll\r\n\r\neverything works as expected.\r\n\r\n-Djava.ext.dirs seems to be causing classpath/classloader issues.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/60",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/60/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/60/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/60/events",
  "html_url" : "https://github.com/junit-team/junit/issues/60",
  "id" : 93619,
  "number" : 60,
  "title" : "Static link for latest javadoc",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/feature",
    "name" : "feature",
    "color" : "3b7d2e"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/javadoc",
    "name" : "javadoc",
    "color" : "e102d8"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2009-12-07T17:48:24Z",
  "updated_at" : "2012-05-30T15:21:31Z",
  "closed_at" : "2012-05-30T15:21:31Z",
  "body" : ""
} ]