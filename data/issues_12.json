[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/362",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/362/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/362/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/362/events",
  "html_url" : "https://github.com/junit-team/junit/pull/362",
  "id" : 2209282,
  "number" : 362,
  "title" : "Fix for #359",
  "user" : {
    "login" : "nkeywal",
    "id" : 1179343,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1179343?",
    "gravatar_id" : "10f1e6fbe2533b8b1c16cbc7b2105680",
    "url" : "https://api.github.com/users/nkeywal",
    "html_url" : "https://github.com/nkeywal",
    "followers_url" : "https://api.github.com/users/nkeywal/followers",
    "following_url" : "https://api.github.com/users/nkeywal/following{/other_user}",
    "gists_url" : "https://api.github.com/users/nkeywal/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/nkeywal/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/nkeywal/subscriptions",
    "organizations_url" : "https://api.github.com/users/nkeywal/orgs",
    "repos_url" : "https://api.github.com/users/nkeywal/repos",
    "events_url" : "https://api.github.com/users/nkeywal/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/nkeywal/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-11-11T13:23:14Z",
  "updated_at" : "2012-03-05T21:52:06Z",
  "closed_at" : "2012-03-05T21:52:06Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/362",
    "html_url" : "https://github.com/junit-team/junit/pull/362",
    "diff_url" : "https://github.com/junit-team/junit/pull/362.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/362.patch"
  },
  "body" : "Tests ok, both on 4.11 trunk & on 4.10 final\r\n\r\nImplementation uses getClass().getClassLoader() vs. Thread.currentThread().getContextClassLoader() because some third parties (in my case: maven/surefire in JUnit47 provider) rely on it.\r\n\r\nWith this fix you keep exactly the same behavior as before so there should be no impact for anyone."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/363",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/363/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/363/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/363/events",
  "html_url" : "https://github.com/junit-team/junit/issues/363",
  "id" : 2289853,
  "number" : 363,
  "title" : "More flexible Categories implementation (with suggested implementation)",
  "user" : {
    "login" : "ahochsteger",
    "id" : 207989,
    "avatar_url" : "https://avatars.githubusercontent.com/u/207989?",
    "gravatar_id" : "85f761f713ba05698d6f269ab5f0631e",
    "url" : "https://api.github.com/users/ahochsteger",
    "html_url" : "https://github.com/ahochsteger",
    "followers_url" : "https://api.github.com/users/ahochsteger/followers",
    "following_url" : "https://api.github.com/users/ahochsteger/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ahochsteger/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ahochsteger/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ahochsteger/subscriptions",
    "organizations_url" : "https://api.github.com/users/ahochsteger/orgs",
    "repos_url" : "https://api.github.com/users/ahochsteger/repos",
    "events_url" : "https://api.github.com/users/ahochsteger/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ahochsteger/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/categories",
    "name" : "categories",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2011-11-19T21:23:40Z",
  "updated_at" : "2014-01-24T07:49:06Z",
  "closed_at" : null,
  "body" : "I would need the possibility to annotate test methods with different categories and then scan the whole classpath for matching tests:\r\n\r\n\t/* MyTestSuite.java */\r\n\t/** MyTestSuite runs all slow tests, excluding all test which require a network connection. */\r\n\t@RunWith(FlexibleCategories.class)\r\n\t@ExcludeCategory(OnlineTestCategory.class)\r\n\t@IncludeCategory(SlowTestCategory.class)\r\n\t@TestScanPackage(\"my.package\")\r\n\t@TestClassPrefix(\"\")\r\n\t@TestClassSuffix(\"Test\")\r\n\tpublic class MyTestSuite {\r\n\t}\r\n\r\nThis would be an example test class:\r\n\r\n\t/* SampleTest.java */\r\n\tpublic class SampleTest {\r\n\t\t@Test\r\n\t\t@Category({OnlineTestCategory.class, SlowTestCategory.class})\r\n\t\tpublic void onlineAndSlowTestCategoryMethod() {\r\n\t\t}\r\n\r\n\t\t@Test\r\n\t\t@Category(OnlineTestCategory.class)\r\n\t\tpublic void onlineTestCategoryMethod() {\r\n\t\t}\r\n\r\n\t\t@Test\r\n\t\t@Category(SlowTestCategory.class)\r\n\t\tpublic void slowTestCategoryMethod() {\r\n\t\t}\r\n\r\n\t\t@Test\r\n\t\tpublic void noTestCategoryMethod() {\r\n\t\t}\r\n\t}\r\n\r\nOn my blog I've described a solution that is working for me:\r\nhttp://highstick.blogspot.com/2011/11/howto-categorize-junit-test-methods-and.html"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/364",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/364/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/364/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/364/events",
  "html_url" : "https://github.com/junit-team/junit/issues/364",
  "id" : 2367197,
  "number" : 364,
  "title" : "Description.getTestClass() does not work in OSGi environment",
  "user" : {
    "login" : "mhoe",
    "id" : 833741,
    "avatar_url" : "https://avatars.githubusercontent.com/u/833741?",
    "gravatar_id" : "1d95a569b07543450d555937a6e514b1",
    "url" : "https://api.github.com/users/mhoe",
    "html_url" : "https://github.com/mhoe",
    "followers_url" : "https://api.github.com/users/mhoe/followers",
    "following_url" : "https://api.github.com/users/mhoe/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mhoe/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mhoe/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mhoe/subscriptions",
    "organizations_url" : "https://api.github.com/users/mhoe/orgs",
    "repos_url" : "https://api.github.com/users/mhoe/repos",
    "events_url" : "https://api.github.com/users/mhoe/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mhoe/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2011-11-28T13:22:36Z",
  "updated_at" : "2014-02-25T17:20:38Z",
  "closed_at" : "2014-02-25T17:20:38Z",
  "body" : "The method implementation tries to find a TestClass refectively via Class.forName(name).\r\nThis does not work in an OSGi environment since JUnit will not have access to the according classloader.\r\nIs there an issue with simply storing the Class objects itself in the Description instead it's name?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/365",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/365/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/365/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/365/events",
  "html_url" : "https://github.com/junit-team/junit/pull/365",
  "id" : 2373663,
  "number" : 365,
  "title" : "Improved Description class",
  "user" : {
    "login" : "stefanbirkner",
    "id" : 711349,
    "avatar_url" : "https://avatars.githubusercontent.com/u/711349?",
    "gravatar_id" : "fa5767c967d4733b5937d4e9c265ee4b",
    "url" : "https://api.github.com/users/stefanbirkner",
    "html_url" : "https://github.com/stefanbirkner",
    "followers_url" : "https://api.github.com/users/stefanbirkner/followers",
    "following_url" : "https://api.github.com/users/stefanbirkner/following{/other_user}",
    "gists_url" : "https://api.github.com/users/stefanbirkner/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/stefanbirkner/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/stefanbirkner/subscriptions",
    "organizations_url" : "https://api.github.com/users/stefanbirkner/orgs",
    "repos_url" : "https://api.github.com/users/stefanbirkner/repos",
    "events_url" : "https://api.github.com/users/stefanbirkner/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/stefanbirkner/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2011-11-28T21:28:19Z",
  "updated_at" : "2012-02-24T20:39:33Z",
  "closed_at" : "2012-02-24T20:39:33Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/365",
    "html_url" : "https://github.com/junit-team/junit/pull/365",
    "diff_url" : "https://github.com/junit-team/junit/pull/365.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/365.patch"
  },
  "body" : "A few modifications to improve the readability of the code:\r\n* extracted METHOD_AND_CLASS_NAME_PATTERN constant\r\n* extracted methodAndClassNamePatternGroupOrDefault(...)\r\n* merged getMethodName() and parseMethod()\r\n* moved validation of display name to constructor\r\n* throw IllegalArgumentException if display name is null"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/366",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/366/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/366/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/366/events",
  "html_url" : "https://github.com/junit-team/junit/issues/366",
  "id" : 2431006,
  "number" : 366,
  "title" : "Support non-static inner classes",
  "user" : {
    "login" : "nathanila",
    "id" : 1236594,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1236594?",
    "gravatar_id" : "7a4b3c7869cfffcbef13398be79d84cf",
    "url" : "https://api.github.com/users/nathanila",
    "html_url" : "https://github.com/nathanila",
    "followers_url" : "https://api.github.com/users/nathanila/followers",
    "following_url" : "https://api.github.com/users/nathanila/following{/other_user}",
    "gists_url" : "https://api.github.com/users/nathanila/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/nathanila/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/nathanila/subscriptions",
    "organizations_url" : "https://api.github.com/users/nathanila/orgs",
    "repos_url" : "https://api.github.com/users/nathanila/repos",
    "events_url" : "https://api.github.com/users/nathanila/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/nathanila/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2011-12-02T17:46:56Z",
  "updated_at" : "2014-01-11T17:03:04Z",
  "closed_at" : null,
  "body" : "Non-static inner classes are currently disallowed.  This feature request is to allow for non-static inner classes.  Only those classes that have @Test methods will be tested.  The @Before method of the inner class is run after the @Before method of the outer class.  The @After method of the inner class is run before the @After method of the outer class.  Likewise, the same applies to @BeforeClass and @AfterClass.\r\n\r\nWhen testing a class that implements an interface such as Map, it is very useful to write non-static inner classes which test the Sets and Collection which are implemented and returned by the class.  For example, I could write a generic test class (MapTest) which enforces all of the specifications of the Map interface.  Then, I can extend that test which tests specific features and specifications of the class which implements the Map interface.  I could then write a generic test class (SetTest) which enforces all of the specifications of the Set interface.  The MapTest class can then declare a non-static inner class which extends SetTest to test the methods of the Sets returned from keySet() and entrySet()."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/367",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/367/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/367/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/367/events",
  "html_url" : "https://github.com/junit-team/junit/issues/367",
  "id" : 2493187,
  "number" : 367,
  "title" : "@BeforeSuite and @AfterSuite, SuiteRule",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2011-12-08T19:27:47Z",
  "updated_at" : "2011-12-16T21:00:29Z",
  "closed_at" : "2011-12-16T21:00:29Z",
  "body" : "@BeforeSuite and @AfterSuite are the logical extensions of @Before/@After, @BeforeClass/@AfterClass. There would be two changes:\r\n\r\n1. Addition of Suite.BeforeSuite and Suite.AfterSuite Annotations, because they would only apply to Suite classes.\r\n2. Addition of @SuiteRule, with basically the same restrictions/behaviour of ClassRule.\r\n\r\nI'm submitting this for discussion, to see what people think of it. I will do the work if people are ok with it."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/368",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/368/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/368/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/368/events",
  "html_url" : "https://github.com/junit-team/junit/pull/368",
  "id" : 2594691,
  "number" : 368,
  "title" : "fix for issue #212",
  "user" : {
    "login" : "hwellmann",
    "id" : 875768,
    "avatar_url" : "https://avatars.githubusercontent.com/u/875768?",
    "gravatar_id" : "096beb456eb9c73bf6ff1b8ea35fe804",
    "url" : "https://api.github.com/users/hwellmann",
    "html_url" : "https://github.com/hwellmann",
    "followers_url" : "https://api.github.com/users/hwellmann/followers",
    "following_url" : "https://api.github.com/users/hwellmann/following{/other_user}",
    "gists_url" : "https://api.github.com/users/hwellmann/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/hwellmann/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/hwellmann/subscriptions",
    "organizations_url" : "https://api.github.com/users/hwellmann/orgs",
    "repos_url" : "https://api.github.com/users/hwellmann/repos",
    "events_url" : "https://api.github.com/users/hwellmann/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/hwellmann/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 36,
  "created_at" : "2011-12-18T19:45:36Z",
  "updated_at" : "2012-10-23T20:45:49Z",
  "closed_at" : "2012-10-23T20:45:49Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/368",
    "html_url" : "https://github.com/junit-team/junit/pull/368",
    "diff_url" : "https://github.com/junit-team/junit/pull/368.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/368.patch"
  },
  "body" : "JARs are now built using bnd to generate OSGi manifest headers"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/369",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/369/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/369/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/369/events",
  "html_url" : "https://github.com/junit-team/junit/pull/369",
  "id" : 2708911,
  "number" : 369,
  "title" : "Improved information with failed ExpectedException assertion",
  "user" : {
    "login" : "arjenw",
    "id" : 1300534,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1300534?",
    "gravatar_id" : "0ec475c967309e1348706088203f0731",
    "url" : "https://api.github.com/users/arjenw",
    "html_url" : "https://github.com/arjenw",
    "followers_url" : "https://api.github.com/users/arjenw/followers",
    "following_url" : "https://api.github.com/users/arjenw/following{/other_user}",
    "gists_url" : "https://api.github.com/users/arjenw/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/arjenw/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/arjenw/subscriptions",
    "organizations_url" : "https://api.github.com/users/arjenw/orgs",
    "repos_url" : "https://api.github.com/users/arjenw/repos",
    "events_url" : "https://api.github.com/users/arjenw/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/arjenw/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 16,
  "created_at" : "2012-01-03T10:12:11Z",
  "updated_at" : "2012-05-24T20:27:46Z",
  "closed_at" : "2012-05-24T20:27:39Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/369",
    "html_url" : "https://github.com/junit-team/junit/pull/369",
    "diff_url" : "https://github.com/junit-team/junit/pull/369.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/369.patch"
  },
  "body" : "When using the ExpectedException to test for an exception to occur, it\r\nthrows an AssertionError when thrown exception does not match the\r\nexpected exception. Issue is however that in the JUnit runner results only\r\nthe actual exceptions message is shown and not the stacktrace. To fix\r\nthat, the actual exception is added to the cause of the AssertionError,\r\ngiving the exceptions in a format like:\r\njava.lang.AssertionError: [reason]\r\n  Expected: [expected exception]\r\n     got: [actual exception + message]\r\n at [AssertionError stacktrace]\r\nCaused by: [actual exception + message]\r\n at [actual exception stacktrace]"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/370",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/370/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/370/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/370/events",
  "html_url" : "https://github.com/junit-team/junit/pull/370",
  "id" : 2716388,
  "number" : 370,
  "title" : "Added MainRunner. This removes the need for public methods in JUnitCore",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-01-03T21:54:59Z",
  "updated_at" : "2012-04-03T18:30:00Z",
  "closed_at" : "2012-04-03T18:30:00Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/370",
    "html_url" : "https://github.com/junit-team/junit/pull/370",
    "diff_url" : "https://github.com/junit-team/junit/pull/370.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/370.patch"
  },
  "body" : "MainRunner installs a SecurityManager which traps the System.exit(), thereby\r\nremoving the need to have runMainAndExit and runMain public in JUnitCore.\r\nMainRunner is only used in the tests of course.\r\n\r\nThe idea of this change is to remove the public methods runMainAndExit and runMain.\r\n\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/371",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/371/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/371/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/371/events",
  "html_url" : "https://github.com/junit-team/junit/issues/371",
  "id" : 2747867,
  "number" : 371,
  "title" : "Why JUnit test running in both initial JVM and the forked JVM?",
  "user" : {
    "login" : "bingy1234",
    "id" : 1308908,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1308908?",
    "gravatar_id" : "13dc854f8e6bd5341537b1843049cab4",
    "url" : "https://api.github.com/users/bingy1234",
    "html_url" : "https://github.com/bingy1234",
    "followers_url" : "https://api.github.com/users/bingy1234/followers",
    "following_url" : "https://api.github.com/users/bingy1234/following{/other_user}",
    "gists_url" : "https://api.github.com/users/bingy1234/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/bingy1234/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/bingy1234/subscriptions",
    "organizations_url" : "https://api.github.com/users/bingy1234/orgs",
    "repos_url" : "https://api.github.com/users/bingy1234/repos",
    "events_url" : "https://api.github.com/users/bingy1234/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/bingy1234/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-01-06T15:01:19Z",
  "updated_at" : "2013-10-10T11:52:59Z",
  "closed_at" : "2013-10-10T11:52:59Z",
  "body" : "Below two stacks from the initial JVM and forked JVM seems saying the test code executed twice instead of only one time. I wonder why it is not only executed in the forked one.\r\n\r\nJUnit test config: fork=true, forkmode=perTest\r\n\r\nat oracle.security.jps.internal.policystore.PolicyUtil.getPDPService(PolicyUtil.java:3099)\r\nat oracle.security.jps.internal.policystore.PolicyDelegationController.<init>(PolicyDelegationController.java:164)\r\nat oracle.security.jps.internal.policystore.JavaPolicyProvider.<init>(JavaPolicyProvider.java:369)\r\nat oracle.security.jps.service.policystore.PolicyStoreTestCaseBase.<init>(PolicyStoreTestCaseBase.java:39)\r\nat oracle.security.jps.service.policystore.JpsJavaPolicyPreTestCase.<init>(JpsJavaPolicyPreTestCase.java:145)\r\nat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\r\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\r\nat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\r\nat junit.framework.TestSuite.createTest(TestSuite.java:65)\r\nat junit.framework.TestSuite.addTestMethod(TestSuite.java:283)\r\nat junit.framework.TestSuite.<init>(TestSuite.java:146)\r\nat oracle.security.jps.service.policystore.JpsJavaPolicyPreTestCase.suite(JpsJavaPolicyPreTestCase.java:603)\r\nat devtest.JpsUnitPreTestSuite.suite(JpsUnitPreTestSuite.java:66)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nat java.lang.reflect.Method.invoke(Method.java:597)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.createTestSuite(JUnitTestRunner.java:929)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTestRunner.createTestSuite(TLJUnitTestRunner.java:217)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.run(JUnitTestRunner.java:366)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTestRunner.run(TLJUnitTestRunner.java:111)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTask.runTestInVM(JUnitTask.java:1319)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTask.runInitMode(TLJUnitTask.java:327)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTask.run(TLJUnitTask.java:120)\r\nat org.testlogic.impl.ant.JITInitModeListener.runTestTaskInInitMode(JITInitModeListener.java:91)\r\nat org.testlogic.impl.ant.JITInitModeListener.taskStarted(JITInitModeListener.java:121)\r\nat org.apache.tools.ant.Project.fireTaskStarted(Project.java:2131)\r\nat org.apache.tools.ant.Task.perform(Task.java:345)\r\nat org.apache.tools.ant.Target.execute(Target.java:357)\r\nat org.apache.tools.ant.Target.performTasks(Target.java:385)\r\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1337)\r\nat org.apache.tools.ant.Project.executeTarget(Project.java:1307)\r\nat org.testlogic.impl.ant.AntTaskUtils.simulateAntCall(AntTaskUtils.java:273)\r\nat org.testlogic.impl.ant.executionPlan.model.CommandRunnable.runCommand(CommandRunnable.java:178)\r\nat org.testlogic.impl.ant.executionPlan.model.CommandRunnable.run(CommandRunnable.java:105)\r\nat java.lang.Thread.run(Thread.java:662)\r\n\r\nand\r\n\r\nat oracle.security.jps.internal.policystore.PolicyUtil.getPDPService(PolicyUtil.java:3099)\r\nat oracle.security.jps.internal.policystore.PolicyDelegationController.<init>(PolicyDelegationController.java:164)\r\nat oracle.security.jps.internal.policystore.JavaPolicyProvider.<init>(JavaPolicyProvider.java:369)\r\nat oracle.security.jps.service.policystore.PolicyStoreTestCaseBase.<init>(PolicyStoreTestCaseBase.java:39)\r\nat oracle.security.jps.service.policystore.JpsJavaPolicyPreTestCase.<init>(JpsJavaPolicyPreTestCase.java:145)\r\nat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\r\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\r\nat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\r\nat junit.framework.TestSuite.createTest(TestSuite.java:65)\r\nat junit.framework.TestSuite.addTestMethod(TestSuite.java:283)\r\nat junit.framework.TestSuite.<init>(TestSuite.java:146)\r\nat oracle.security.jps.service.policystore.JpsJavaPolicyPreTestCase.suite(JpsJavaPolicyPreTestCase.java:603)\r\nat devtest.JpsUnitPreTestSuite.suite(JpsUnitPreTestSuite.java:66)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nat java.lang.reflect.Method.invoke(Method.java:597)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.createTestSuite(JUnitTestRunner.java:929)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTestRunner.createTestSuite(TLJUnitTestRunner.java:217)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.run(JUnitTestRunner.java:366)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTestRunner.run(TLJUnitTestRunner.java:111)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.launch(JUnitTestRunner.java:869)\r\nat org.testlogic.testrunner.ant.junit4.JUnitTestRunner.main(JUnitTestRunner.java:714)\r\nat org.testlogic.testrunner.ant.junit4.TLJUnitTestRunner.main(TLJUnitTestRunner"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/372",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/372/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/372/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/372/events",
  "html_url" : "https://github.com/junit-team/junit/pull/372",
  "id" : 2895193,
  "number" : 372,
  "title" : "Several javadoc referred to MethodRule when they should have referred to...",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-01-19T10:56:10Z",
  "updated_at" : "2012-02-29T17:35:53Z",
  "closed_at" : "2012-02-29T17:35:48Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/372",
    "html_url" : "https://github.com/junit-team/junit/pull/372",
    "diff_url" : "https://github.com/junit-team/junit/pull/372.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/372.patch"
  },
  "body" : "... TestRule"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/373",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/373/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/373/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/373/events",
  "html_url" : "https://github.com/junit-team/junit/pull/373",
  "id" : 2906686,
  "number" : 373,
  "title" : "Parameter's description",
  "user" : {
    "login" : "gensan",
    "id" : 1024975,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1024975?",
    "gravatar_id" : "963d08d3049de4397c5bac5ea37389c8",
    "url" : "https://api.github.com/users/gensan",
    "html_url" : "https://github.com/gensan",
    "followers_url" : "https://api.github.com/users/gensan/followers",
    "following_url" : "https://api.github.com/users/gensan/following{/other_user}",
    "gists_url" : "https://api.github.com/users/gensan/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/gensan/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/gensan/subscriptions",
    "organizations_url" : "https://api.github.com/users/gensan/orgs",
    "repos_url" : "https://api.github.com/users/gensan/repos",
    "events_url" : "https://api.github.com/users/gensan/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/gensan/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-01-20T02:39:34Z",
  "updated_at" : "2014-02-12T15:24:07Z",
  "closed_at" : "2012-02-05T15:39:32Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/373",
    "html_url" : "https://github.com/junit-team/junit/pull/373",
    "diff_url" : "https://github.com/junit-team/junit/pull/373.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/373.patch"
  },
  "body" : "I think some developer want to put descriptions to parameter.\r\nand it is better for junit library to support it.\r\n\r\nI try making Parameterized.jara to be able to define parameters as Map.\r\nkeys of Map is used as description of parameter.\r\n\r\nI also made some test cases.\r\n\r\nGentaro Oka"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/374",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/374/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/374/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/374/events",
  "html_url" : "https://github.com/junit-team/junit/pull/374",
  "id" : 2911723,
  "number" : 374,
  "title" : "Documented the Deprecation of MethodRule",
  "user" : {
    "login" : "alexanderkiel",
    "id" : 822457,
    "avatar_url" : "https://avatars.githubusercontent.com/u/822457?",
    "gravatar_id" : "d12234e613a3fcc8205674c399c1eefc",
    "url" : "https://api.github.com/users/alexanderkiel",
    "html_url" : "https://github.com/alexanderkiel",
    "followers_url" : "https://api.github.com/users/alexanderkiel/followers",
    "following_url" : "https://api.github.com/users/alexanderkiel/following{/other_user}",
    "gists_url" : "https://api.github.com/users/alexanderkiel/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/alexanderkiel/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/alexanderkiel/subscriptions",
    "organizations_url" : "https://api.github.com/users/alexanderkiel/orgs",
    "repos_url" : "https://api.github.com/users/alexanderkiel/repos",
    "events_url" : "https://api.github.com/users/alexanderkiel/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/alexanderkiel/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-01-20T14:25:58Z",
  "updated_at" : "2012-02-14T21:33:42Z",
  "closed_at" : "2012-02-14T21:33:42Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/374",
    "html_url" : "https://github.com/junit-team/junit/pull/374",
    "diff_url" : "https://github.com/junit-team/junit/pull/374.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/374.patch"
  },
  "body" : "Added a sentence to the MethodRule JavaDoc in order to guide the user to the new interface TestRule."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/375",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/375/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/375/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/375/events",
  "html_url" : "https://github.com/junit-team/junit/issues/375",
  "id" : 3011952,
  "number" : 375,
  "title" : "JUnit suppresses AssertionError.getCause()",
  "user" : {
    "login" : "cowwoc",
    "id" : 633348,
    "avatar_url" : "https://avatars.githubusercontent.com/u/633348?",
    "gravatar_id" : "ffeccc0bf6020a4c7cfb2f014e02de35",
    "url" : "https://api.github.com/users/cowwoc",
    "html_url" : "https://github.com/cowwoc",
    "followers_url" : "https://api.github.com/users/cowwoc/followers",
    "following_url" : "https://api.github.com/users/cowwoc/following{/other_user}",
    "gists_url" : "https://api.github.com/users/cowwoc/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/cowwoc/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/cowwoc/subscriptions",
    "organizations_url" : "https://api.github.com/users/cowwoc/orgs",
    "repos_url" : "https://api.github.com/users/cowwoc/repos",
    "events_url" : "https://api.github.com/users/cowwoc/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/cowwoc/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-01-29T16:35:18Z",
  "updated_at" : "2013-10-10T11:56:36Z",
  "closed_at" : null,
  "body" : "I am using JUnit 4.10.\r\n\r\nIf a test method invokes code that throws AssertionError (that is, not the test method itself, but the code it is exercising) then JUnit replaces it with an AssertionFailedError exception that does not include the \"cause\" of the original exception. I need this information to track the problem to its source!\r\n\r\nHere is an example of what I get from JUnit:\r\n\r\nTestcase: insertDependency(org.pill.repository.local.LocalRepositoryTest):\tFAILED\r\njava.lang.ClassCastException: java.lang.Byte cannot be cast to java.lang.String\r\njunit.framework.AssertionFailedError: java.lang.ClassCastException: java.lang.Byte cannot be cast to java.lang.String\r\n\tat org.pill.repository.local.LocalRepository.insertRelease(LocalRepository.java:256)\r\n\tat org.pill.ReleaseBuilder.build(ReleaseBuilder.java:83)\r\n\tat org.pill.repository.local.LocalRepositoryTest.insertDependency(LocalRepositoryTest.java:161)\r\n\r\nHere is what I get if I explicitly catch the AssertionError and printStackTrace() in my test method:\r\n\r\njava.lang.AssertionError: java.lang.ClassCastException: java.lang.Byte cannot be cast to java.lang.String\r\n\tat org.pill.repository.local.LocalRepository.insertRelease(LocalRepository.java:256)\r\n\tat org.pill.ReleaseBuilder.build(ReleaseBuilder.java:83)\r\n\tat org.pill.repository.local.LocalRepositoryTest.insertDependency(LocalRepositoryTest.java:164)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\r\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)\r\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)\r\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)\r\nCaused by: java.lang.ClassCastException: java.lang.Byte cannot be cast to java.lang.String\r\n\tat org.pill.repository.local.LocalRepository.getRelease(LocalRepository.java:782)\r\n\tat org.pill.repository.local.LocalRepository.access$500(LocalRepository.java:44)\r\n\tat org.pill.repository.local.LocalRepository$InsertRelease.call(LocalRepository.java:375)\r\n\tat org.pill.repository.local.LocalRepository$InsertRelease.call(LocalRepository.java:263)\r\n\tat org.pill.repository.local.RequestInjector$1.call(RequestInjector.java:50)\r\n\tat com.google.inject.servlet.ServletScopes$4.call(ServletScopes.java:251)\r\n\tat org.pill.repository.local.LocalRepository.insertRelease(LocalRepository.java:233)\r\n\t... 25 more\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/376",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/376/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/376/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/376/events",
  "html_url" : "https://github.com/junit-team/junit/pull/376",
  "id" : 3041825,
  "number" : 376,
  "title" : "Assertions for Comparable (rebased)",
  "user" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2012-01-31T20:10:59Z",
  "updated_at" : "2014-01-24T08:03:49Z",
  "closed_at" : "2012-04-17T13:52:26Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/376",
    "html_url" : "https://github.com/junit-team/junit/pull/376",
    "diff_url" : "https://github.com/junit-team/junit/pull/376.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/376.patch"
  },
  "body" : "Rebased @leet3lite's master branch onto @KentBeck's, resolved conflicts in acknowledgements.txt and AllTests.java.\r\n\r\nSee the original pull request #228 for details."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/377",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/377/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/377/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/377/events",
  "html_url" : "https://github.com/junit-team/junit/pull/377",
  "id" : 3142996,
  "number" : 377,
  "title" : "Enable ExpectedException to match causes more easily",
  "user" : {
    "login" : "pettermahlen",
    "id" : 353687,
    "avatar_url" : "https://avatars.githubusercontent.com/u/353687?",
    "gravatar_id" : "73eadbfe76632e688d2a05dbba9a673a",
    "url" : "https://api.github.com/users/pettermahlen",
    "html_url" : "https://github.com/pettermahlen",
    "followers_url" : "https://api.github.com/users/pettermahlen/followers",
    "following_url" : "https://api.github.com/users/pettermahlen/following{/other_user}",
    "gists_url" : "https://api.github.com/users/pettermahlen/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/pettermahlen/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/pettermahlen/subscriptions",
    "organizations_url" : "https://api.github.com/users/pettermahlen/orgs",
    "repos_url" : "https://api.github.com/users/pettermahlen/repos",
    "events_url" : "https://api.github.com/users/pettermahlen/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/pettermahlen/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 14,
  "created_at" : "2012-02-08T16:22:53Z",
  "updated_at" : "2012-05-22T17:25:45Z",
  "closed_at" : "2012-05-22T17:25:39Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/377",
    "html_url" : "https://github.com/junit-team/junit/pull/377",
    "diff_url" : "https://github.com/junit-team/junit/pull/377.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/377.patch"
  },
  "body" : "When working especially with third-party libraries, it's common to deal with checked exceptions in a way similar to this:\r\n\r\n```java\r\n  try {\r\n     collaborator.something();\r\n  }\r\n  catch (CheckedException e) {\r\n     throw new MyRuntimeException(\"failed to do something\", e);\r\n  }\r\n```\r\n\r\nIt's common for different instances of MyRuntimeException to be thrown from many possible execution branches, so when testing this, I would like to do something like:\r\n\r\n```java\r\n  @Rule\r\n  ExpectedException thrown= ExpectedException.none();\r\n\r\n  @Test\r\n  public void aTest() throws Exception {\r\n    CheckedException expected = new CheckedException(\"expected\");\r\n\r\n    Mockito.when(collaborator.something()).thenThrow(expected);\r\n\r\n    thrown.expect(MyRuntimeException.class);\r\n    thrown.expectMessage(\"failed to do something\");\r\n    thrown.expectCause(expected);\r\n    \r\n    myObject.method();\r\n  }\r\n```\r\n\r\nThe change in this pull request makes that possible. I realise you can do that with a custom matcher as well, but it feels like this is (at least nearly) as fundamental as matching on the message, so it should perhaps be a part of the core framework?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/378",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/378/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/378/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/378/events",
  "html_url" : "https://github.com/junit-team/junit/issues/378",
  "id" : 3189563,
  "number" : 378,
  "title" : "Request to change the generics definition of Assert.assertThat",
  "user" : {
    "login" : "ghost",
    "id" : 10137,
    "avatar_url" : "https://avatars.githubusercontent.com/u/10137?",
    "gravatar_id" : "ac0c4949f8df628b3f77a42a3b814c4d",
    "url" : "https://api.github.com/users/ghost",
    "html_url" : "https://github.com/ghost",
    "followers_url" : "https://api.github.com/users/ghost/followers",
    "following_url" : "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ghost/subscriptions",
    "organizations_url" : "https://api.github.com/users/ghost/orgs",
    "repos_url" : "https://api.github.com/users/ghost/repos",
    "events_url" : "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ghost/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2012-02-12T07:03:41Z",
  "updated_at" : "2013-11-14T19:29:04Z",
  "closed_at" : null,
  "body" : "Here is the current signature of Assert.assertThat:\r\n\r\n    public static <T> void assertThat(T actual, Matcher<? super T> matcher)\r\n\r\nWhich mean you'll get a compilation error if you try the following:\r\n\r\n    CharSequence actual = \"hello\";\r\n    String expected = \"hello\";\r\n    assertThat(actual, is(expected));\r\n\r\nThat failed because `expected` (String) is a subtype of `actual` (CharSequence), which makes the generic requirement on the matcher parameter  `<? super T>` to fail.\r\n\r\nSo here I'm suggesting a solution, change the generics definition of `Assert.assertThat` to something like:\r\n\r\n    public static <T, A extends T, E extends T> void assertThat(A actual, Matcher<E> expected)\r\n\r\nUsing this with the previous example, you get T = CharSequence, A = CharSequence, E = String, and since both CharSequence and String are subtypes of CharSequence, your program will compile fine (just like the old assertEquals).\r\n\r\nI've also raised the same issue with hamcrest: http://code.google.com/p/hamcrest/issues/detail?id=176\r\n\r\n**Updated 2012-02-20:**\r\n\r\nAn even simpler/better version would be this:\r\n\r\n   `public static void assertThat(Object actual, Matcher<?> matcher)`\r\n\r\nwhich removes the generics restriction all together.\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/379",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/379/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/379/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/379/events",
  "html_url" : "https://github.com/junit-team/junit/issues/379",
  "id" : 3192602,
  "number" : 379,
  "title" : "ParameterizedAssertionError in Theory",
  "user" : {
    "login" : "NicoleRauch",
    "id" : 436499,
    "avatar_url" : "https://avatars.githubusercontent.com/u/436499?",
    "gravatar_id" : "820c27382c2be30cf388f319ad28e75b",
    "url" : "https://api.github.com/users/NicoleRauch",
    "html_url" : "https://github.com/NicoleRauch",
    "followers_url" : "https://api.github.com/users/NicoleRauch/followers",
    "following_url" : "https://api.github.com/users/NicoleRauch/following{/other_user}",
    "gists_url" : "https://api.github.com/users/NicoleRauch/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/NicoleRauch/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/NicoleRauch/subscriptions",
    "organizations_url" : "https://api.github.com/users/NicoleRauch/orgs",
    "repos_url" : "https://api.github.com/users/NicoleRauch/repos",
    "events_url" : "https://api.github.com/users/NicoleRauch/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/NicoleRauch/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/bug",
    "name" : "bug",
    "color" : "ff0000"
  }, {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/theories",
    "name" : "theories",
    "color" : "0b02e1"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2012-02-12T19:43:04Z",
  "updated_at" : "2012-09-04T20:33:36Z",
  "closed_at" : "2012-09-04T20:33:36Z",
  "body" : "The following test throws a ParameterizedAssertionError.\r\nIt seems that both parameters of the test method get the same argument, although they are of different types.\r\n\r\n\r\n```java\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ResourceBundle;\r\n\r\nimport org.junit.experimental.theories.DataPoint;\r\nimport org.junit.experimental.theories.DataPoints;\r\nimport org.junit.experimental.theories.Theories;\r\nimport org.junit.experimental.theories.Theory;\r\nimport org.junit.runner.RunWith;\r\n\r\n@RunWith(Theories.class)\r\npublic class ErrorIDsTest {\r\n\r\n\t@DataPoints\r\n\tpublic static Field[] errorIDs() {\r\n\t\treturn ErrorIDs.class.getDeclaredFields();\r\n\t}\r\n\r\n\t@DataPoint\r\n\tpublic static ResourceBundle bundle = null;\r\n\r\n\t@Theory\r\n\tpublic void testThatFails(Field field, ResourceBundle bundle) throws Exception {\r\n\t}\r\n}\r\n\r\n\r\ninterface ErrorIDs {\r\n\t  public final String Fehler = \"ErrorIDs.Fehler\";\r\n}\r\n```\r\n\r\nThe exception is\r\n\r\norg.junit.experimental.theories.internal.ParameterizedAssertionError: testThatFails(errorIDs[0], errorIDs[0])\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(Theories.java:183)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:138)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithCompleteAssignment(Theories.java:119)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:103)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:112)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:101)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:112)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:101)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.evaluate(Theories.java:89)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\r\nCaused by: java.lang.IllegalArgumentException: argument type mismatch\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:592)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$2.evaluate(Theories.java:167)\r\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:133)\r\n\t... 22 more\r\n\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/380",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/380/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/380/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/380/events",
  "html_url" : "https://github.com/junit-team/junit/issues/380",
  "id" : 3207052,
  "number" : 380,
  "title" : "@BeforeClass and @AfterClass methods are still run even if no tests will be run.",
  "user" : {
    "login" : "noel-yap",
    "id" : 1414385,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1414385?",
    "gravatar_id" : "3d940f701f1bc6bf922f910258e19698",
    "url" : "https://api.github.com/users/noel-yap",
    "html_url" : "https://github.com/noel-yap",
    "followers_url" : "https://api.github.com/users/noel-yap/followers",
    "following_url" : "https://api.github.com/users/noel-yap/following{/other_user}",
    "gists_url" : "https://api.github.com/users/noel-yap/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/noel-yap/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/noel-yap/subscriptions",
    "organizations_url" : "https://api.github.com/users/noel-yap/orgs",
    "repos_url" : "https://api.github.com/users/noel-yap/repos",
    "events_url" : "https://api.github.com/users/noel-yap/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/noel-yap/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/lowhanging",
    "name" : "lowhanging",
    "color" : "d4c5f9"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2012-02-13T18:53:00Z",
  "updated_at" : "2013-10-22T00:23:10Z",
  "closed_at" : null,
  "body" : "PASSES:\r\n\r\n```java\r\n@Ignore\r\npublic class NotReallyATest {\r\n    @BeforeClass\r\n    public static void setUpClass() {\r\n        fail(\"setUpClass() should not run\");\r\n    }\r\n\r\n    @AfterClass\r\n    public static void tearDownClass() {\r\n        fail(\"tearDownClass() should not run\");\r\n    }\r\n\r\n    @Test\r\n    public void test() {\r\n        fail(\"test() should not run\");\r\n    }\r\n}\r\n```\r\n\r\nFAILS:\r\n\r\n```java\r\npublic class NotReallyATest {\r\n    @BeforeClass\r\n    public static void setUpClass() {\r\n        fail(\"setUpClass() should not run\"); // fails here\r\n    }\r\n\r\n    @AfterClass\r\n    public static void tearDownClass() {\r\n        fail(\"tearDownClass() should not run\"); // fails here\r\n    }\r\n\r\n    @Ignore\r\n    @Test\r\n    public void test() {\r\n        fail(\"test() should not run\");\r\n    }\r\n}\r\n```\r\n\r\nFAILS (using Request.filterWith() to filter out tests Categorized as DevMachine):\r\n\r\n```java\r\n@Category(DevMachine.class)\r\npublic class NotReallyATest {\r\n    @BeforeClass\r\n    public static void setUpClass() {\r\n        fail(\"setUpClass() should not run\"); // fails here\r\n    }\r\n\r\n    @AfterClass\r\n    public static void tearDownClass() {\r\n        fail(\"tearDownClass() should not run\"); // fails here\r\n    }\r\n\r\n    @Test\r\n    public void test() {\r\n        fail(\"test() should not run\");\r\n    }\r\n}\r\n```\r\n\r\nFAILS (using Request.filterWith() to filter out tests Categorized as DevMachine):\r\n\r\n```java\r\npublic class NotReallyATest {\r\n    @BeforeClass\r\n    public static void setUpClass() {\r\n        fail(\"setUpClass() should not run\"); // fails here\r\n    }\r\n\r\n    @AfterClass\r\n    public static void tearDownClass() {\r\n        fail(\"tearDownClass() should not run\"); // fails here\r\n    }\r\n\r\n    @Category(DevMachine.class)\r\n    @Test\r\n    public void test() {\r\n        fail(\"test() should not run\");\r\n    }\r\n}\r\n```\r\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/381",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/381/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/381/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/381/events",
  "html_url" : "https://github.com/junit-team/junit/issues/381",
  "id" : 3207928,
  "number" : 381,
  "title" : "@Ignore and @Category with Request.filterWith() behave differently",
  "user" : {
    "login" : "noel-yap",
    "id" : 1414385,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1414385?",
    "gravatar_id" : "3d940f701f1bc6bf922f910258e19698",
    "url" : "https://api.github.com/users/noel-yap",
    "html_url" : "https://github.com/noel-yap",
    "followers_url" : "https://api.github.com/users/noel-yap/followers",
    "following_url" : "https://api.github.com/users/noel-yap/following{/other_user}",
    "gists_url" : "https://api.github.com/users/noel-yap/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/noel-yap/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/noel-yap/subscriptions",
    "organizations_url" : "https://api.github.com/users/noel-yap/orgs",
    "repos_url" : "https://api.github.com/users/noel-yap/repos",
    "events_url" : "https://api.github.com/users/noel-yap/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/noel-yap/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 7,
  "created_at" : "2012-02-13T19:51:14Z",
  "updated_at" : "2013-12-28T01:01:08Z",
  "closed_at" : null,
  "body" : "PASSES:\r\n\r\n```java\r\n@Ignore\r\npublic class NotReallyATest {\r\n}\r\n```\r\n\r\nFAILS with \"No runnable methods\" initializationError (using Request.filterWith to filter out tests Categorized as Manual):\r\n\r\n```java\r\n@Category(Manual.class)\r\npublic class NotReallyATest {\r\n}\r\n```"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/382",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/382/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/382/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/382/events",
  "html_url" : "https://github.com/junit-team/junit/issues/382",
  "id" : 3237909,
  "number" : 382,
  "title" : "MethodSorter contains non-compliant @Override annotation",
  "user" : {
    "login" : "peterdemaeyer",
    "id" : 1440594,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1440594?",
    "gravatar_id" : "d295c576018ff01dd5748b659b7564f1",
    "url" : "https://api.github.com/users/peterdemaeyer",
    "html_url" : "https://github.com/peterdemaeyer",
    "followers_url" : "https://api.github.com/users/peterdemaeyer/followers",
    "following_url" : "https://api.github.com/users/peterdemaeyer/following{/other_user}",
    "gists_url" : "https://api.github.com/users/peterdemaeyer/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/peterdemaeyer/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/peterdemaeyer/subscriptions",
    "organizations_url" : "https://api.github.com/users/peterdemaeyer/orgs",
    "repos_url" : "https://api.github.com/users/peterdemaeyer/repos",
    "events_url" : "https://api.github.com/users/peterdemaeyer/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/peterdemaeyer/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2012-02-15T17:19:12Z",
  "updated_at" : "2012-04-21T19:27:49Z",
  "closed_at" : "2012-04-21T19:27:49Z",
  "body" : "`MethodSorter` contains an anonymous inner `Comparator` class which uses an `@Override` annotation which is not Java5 compliant. As a result, the current version (4.10 which I recently pulled) won't compile against Java5.\r\n\r\nCorrect me if I'm wrong, but I was under the impression that JUnit4 is still intended to be Java5 compliant...\r\n\r\nNote that this is the _only_ compile error against Java5...\r\n\r\nFix is trivial: remove the offending annotation."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/383",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/383/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/383/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/383/events",
  "html_url" : "https://github.com/junit-team/junit/issues/383",
  "id" : 3241005,
  "number" : 383,
  "title" : "MethodRule TestRule ordering issue",
  "user" : {
    "login" : "RainerW",
    "id" : 118649,
    "avatar_url" : "https://avatars.githubusercontent.com/u/118649?",
    "gravatar_id" : "b3ae51ffe455df09a0418d84a8905f04",
    "url" : "https://api.github.com/users/RainerW",
    "html_url" : "https://github.com/RainerW",
    "followers_url" : "https://api.github.com/users/RainerW/followers",
    "following_url" : "https://api.github.com/users/RainerW/following{/other_user}",
    "gists_url" : "https://api.github.com/users/RainerW/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/RainerW/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/RainerW/subscriptions",
    "organizations_url" : "https://api.github.com/users/RainerW/orgs",
    "repos_url" : "https://api.github.com/users/RainerW/repos",
    "events_url" : "https://api.github.com/users/RainerW/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/RainerW/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/rules",
    "name" : "rules",
    "color" : "0b02e1"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2012-02-15T20:07:55Z",
  "updated_at" : "2013-10-11T19:21:40Z",
  "closed_at" : null,
  "body" : "Since the new TestRule interface some behaviours have change in the execution order of the @Rules.\r\n\r\nWe have one rule which records Test Results. That Rule implements MethodsRule. Now in some Tests we ues ExpectedException Rule. But with a newer JUnit  the ExpectedExceptino rule now is implemented via TestRule. \r\n\r\nBecause of the interface JUnit seems to group all @Rule fields by there types, so reodering the fields in my Testscase doesn't change the overall order, only within the group. The code at the end should print the rule execution in the same order the fields are defined:\r\n\r\nEXPECTED:\r\n\r\nMethod : rule04\r\nTestRule : rule03\r\nTestRule : rule02\r\nMethod : rule01\r\nThe test\r\n\r\nbut instead it's getting executed in a 'grouped' order :\r\n\r\nACTUAL:\r\n\r\nTestRule : rule03\r\nTestRule : rule02\r\nMethod : rule04\r\nMethod : rule01\r\nThe test\r\n\r\nCODE:\r\n\r\npublic class RuleOrder\r\n{\r\n  @Rule\r\n  public MethodRuleImpl rule01 = new MethodRuleImpl(\"rule01\");\r\n  @Rule\r\n  public TestRuleImpl rule02 = new TestRuleImpl(\"rule02\");\r\n  @Rule\r\n  public TestRuleImpl rule03 = new TestRuleImpl(\"rule03\");\r\n  @Rule\r\n  public MethodRuleImpl rule04 = new MethodRuleImpl(\"rule04\");\r\n\r\n  @Test\r\n  public void aTest() {\r\n    System.out.println(\"The test\");\r\n  }\r\n  class TestRuleImpl implements TestRule {\r\n    String text;\r\n    public TestRuleImpl(String text) { this.text = text; }\r\n    @Override\r\n    public Statement apply(final Statement base, Description description) {\r\n      return new Statement() {\r\n        public void evaluate() throws Throwable {\r\n          System.out.println(\"TestRule : \" + text);\r\n          base.evaluate();\r\n        }\r\n      };\r\n    }\r\n  };\r\n  class MethodRuleImpl implements MethodRule {\r\n    String text; \r\n    public MethodRuleImpl(String text) { this.text = text; }\r\n    public Statement apply(final Statement base, FrameworkMethod method, Object target) {\r\n      return new Statement() {\r\n        @Override\r\n        public void evaluate() throws Throwable\r\n        {\r\n          System.out.println(\"Method : \" + text);\r\n          base.evaluate();\r\n        }\r\n      };\r\n    }\r\n  };\r\n}"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/384",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/384/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/384/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/384/events",
  "html_url" : "https://github.com/junit-team/junit/issues/384",
  "id" : 3241321,
  "number" : 384,
  "title" : "Timeout exception uses wrong stack trace",
  "user" : {
    "login" : "peterdemaeyer",
    "id" : 1440594,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1440594?",
    "gravatar_id" : "d295c576018ff01dd5748b659b7564f1",
    "url" : "https://api.github.com/users/peterdemaeyer",
    "html_url" : "https://github.com/peterdemaeyer",
    "followers_url" : "https://api.github.com/users/peterdemaeyer/followers",
    "following_url" : "https://api.github.com/users/peterdemaeyer/following{/other_user}",
    "gists_url" : "https://api.github.com/users/peterdemaeyer/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/peterdemaeyer/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/peterdemaeyer/subscriptions",
    "organizations_url" : "https://api.github.com/users/peterdemaeyer/orgs",
    "repos_url" : "https://api.github.com/users/peterdemaeyer/repos",
    "events_url" : "https://api.github.com/users/peterdemaeyer/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/peterdemaeyer/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-02-15T20:24:42Z",
  "updated_at" : "2012-05-16T19:13:18Z",
  "closed_at" : "2012-05-16T19:13:18Z",
  "body" : "When a test with `@Test(timeout = <timeout>)` times out, it throws an exception which is supposed to have the stack trace of the method call which is actually stuck. This is not always the case however. More specifically: when the stuck method call is interruptible, the stack trace of the exception is totally wrong. This can be very misleading.\r\n\r\nThe root cause of the problem is in `FailOnTimeout`: the stack trace is grabbed from the stuck thread _after_ it has been interrupted, which is a bug. The stack trace should be recorded _before_ the thread is interrupted, and the recorded stack trace should later be injected in the timeout exception.\r\n\r\nUnit test reproducing the issue:\r\n\r\n```java\r\n\t@Test\r\n\tpublic void stackTraceContainsRealCauseOfTimeout() throws Throwable {\r\n\t\tStuckStatement stuck= new StuckStatement();\r\n\t\tFailOnTimeout stuckTimeout= new FailOnTimeout(stuck, TIMEOUT);\r\n\t\ttry {\r\n\t\t\tstuckTimeout.evaluate();\r\n\t\t\t// We must not get here, we expect a timeout exception\r\n\t\t\tfail(\"Expected timeout exception\");\r\n\t\t} catch (Exception timeoutException) {\r\n\t\t\tStackTraceElement[] stackTrace= timeoutException.getStackTrace();\r\n\t\t\tboolean stackTraceContainsTheRealCauseOfTheTimeout= false;\r\n\t\t\tboolean stackTraceContainsNotTheRealCauseOfTheTimeout= false;\r\n\t\t\tfor (StackTraceElement element : stackTrace) {\r\n\t\t\t\tString methodName= element.getMethodName();\r\n\t\t\t\tif (\"theRealCauseOfTheTimeout\".equals(methodName)) {\r\n\t\t\t\t\tstackTraceContainsTheRealCauseOfTheTimeout= true;\r\n\t\t\t\t}\r\n\t\t\t\tif (\"notTheRealCauseOfTheTimeout\".equals(methodName)) {\r\n\t\t\t\t\tstackTraceContainsNotTheRealCauseOfTheTimeout= true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tassertTrue(\r\n\t\t\t\t\t\"Stack trace does not contain the real cause of the timeout\",\r\n\t\t\t\t\tstackTraceContainsTheRealCauseOfTheTimeout);\r\n\t\t\tassertFalse(\r\n\t\t\t\t\t\"Stack trace contains another than the real cause of the timeout, which can be very misleading\",\r\n\t\t\t\t\tstackTraceContainsNotTheRealCauseOfTheTimeout);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static final class StuckStatement extends Statement {\r\n\r\n\t\t@Override\r\n\t\tpublic void evaluate() throws Throwable {\r\n\t\t\ttry {\r\n\t\t\t\t// Must show up in stack trace\r\n\t\t\t\ttheRealCauseOfTheTimeout();\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t} finally {\r\n\t\t\t\t// Must _not_ show up in stack trace\r\n\t\t\t\tnotTheRealCauseOfTheTimeout();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate void theRealCauseOfTheTimeout() throws InterruptedException {\r\n\t\t\tsleep(MAX_VALUE);\r\n\t\t}\r\n\r\n\t\tprivate void notTheRealCauseOfTheTimeout() {\r\n\t\t\tfor (long now= currentTimeMillis(), eta= now + 1000L; now < eta; now= currentTimeMillis()) {\r\n\t\t\t\t// Doesn't matter, just pretend to be busy\r\n\t\t\t\tatan(now);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/385",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/385/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/385/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/385/events",
  "html_url" : "https://github.com/junit-team/junit/pull/385",
  "id" : 3241450,
  "number" : 385,
  "title" : "Bugfixes for #382 and #384",
  "user" : {
    "login" : "peterdemaeyer",
    "id" : 1440594,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1440594?",
    "gravatar_id" : "d295c576018ff01dd5748b659b7564f1",
    "url" : "https://api.github.com/users/peterdemaeyer",
    "html_url" : "https://github.com/peterdemaeyer",
    "followers_url" : "https://api.github.com/users/peterdemaeyer/followers",
    "following_url" : "https://api.github.com/users/peterdemaeyer/following{/other_user}",
    "gists_url" : "https://api.github.com/users/peterdemaeyer/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/peterdemaeyer/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/peterdemaeyer/subscriptions",
    "organizations_url" : "https://api.github.com/users/peterdemaeyer/orgs",
    "repos_url" : "https://api.github.com/users/peterdemaeyer/repos",
    "events_url" : "https://api.github.com/users/peterdemaeyer/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/peterdemaeyer/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2012-02-15T20:34:20Z",
  "updated_at" : "2012-05-14T19:51:16Z",
  "closed_at" : "2012-05-14T19:51:10Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/385",
    "html_url" : "https://github.com/junit-team/junit/pull/385",
    "diff_url" : "https://github.com/junit-team/junit/pull/385.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/385.patch"
  },
  "body" : "Correct stack trace is now used for timeout exception.\r\n\r\nBeware: the first commit apparently did some code reformatting, even though this was not my intention. Essentially the only change is the removal of the @Override annotation."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/386",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/386/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/386/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/386/events",
  "html_url" : "https://github.com/junit-team/junit/pull/386",
  "id" : 3284090,
  "number" : 386,
  "title" : "SortMethodsWith allows the user to choose the order of execution of the methods within a test class",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 16,
  "created_at" : "2012-02-19T10:44:53Z",
  "updated_at" : "2013-12-30T02:51:55Z",
  "closed_at" : "2012-04-09T13:41:53Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/386",
    "html_url" : "https://github.com/junit-team/junit/pull/386",
    "diff_url" : "https://github.com/junit-team/junit/pull/386.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/386.patch"
  },
  "body" : "The default order of execution of JUnit tests within a class\r\nis deterministic but not predictable. Before 4.11, the\r\nbehaviour was to run the test methods in byte code order,\r\nwhich pre-Java 7 was mostly predictable. Java 7 (and some\r\nprevious versions), does not guaranteee the order of execution,\r\nwhich can change from run to run, so a deterministic sort was introduced.\r\nAs a rule, test method execution should be independent of\r\none another. However, there may be a number of dependent\r\ntests either through error or by design. This class\r\nallows the user to specify the order of execution of test methods.\r\n\r\nThere are four possibilities:\r\n\r\nMethodSorters.DEFAULT: the default value, deterministic, but not predictable\r\nMethodSorters.JVM: the order in which the tests are returned by the JVM, i.e. there is no sorting done\r\nMethodSorters.NAME_ASC: sorted in order of method name, ascending\r\nMethodSorters.NAME_DESC: sorter in order of method name, descending\r\n\r\nThis is an enhancement to the solution for #293 Sort test methods for predictability, in order that users can temporarily 'fix' their broken tests, from https://github.com/KentBeck/junit/pull/293#issuecomment-2095777"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/387",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/387/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/387/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/387/events",
  "html_url" : "https://github.com/junit-team/junit/issues/387",
  "id" : 3304054,
  "number" : 387,
  "title" : "TestRunner for concurrency problems",
  "user" : {
    "login" : "jerolimov",
    "id" : 139310,
    "avatar_url" : "https://avatars.githubusercontent.com/u/139310?",
    "gravatar_id" : "98c30f0c7654b0c20d78da0372fbe715",
    "url" : "https://api.github.com/users/jerolimov",
    "html_url" : "https://github.com/jerolimov",
    "followers_url" : "https://api.github.com/users/jerolimov/followers",
    "following_url" : "https://api.github.com/users/jerolimov/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jerolimov/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jerolimov/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jerolimov/subscriptions",
    "organizations_url" : "https://api.github.com/users/jerolimov/orgs",
    "repos_url" : "https://api.github.com/users/jerolimov/repos",
    "events_url" : "https://api.github.com/users/jerolimov/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jerolimov/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2012-02-21T01:19:14Z",
  "updated_at" : "2013-10-10T21:38:13Z",
  "closed_at" : "2013-10-10T21:38:13Z",
  "body" : "Hello,\r\n\r\ni write an extension for junit to check common concurrency problems,\r\nfor example on parallel SimpleDateFormat or HashMap usage.\r\n\r\nCurrently it's simple enough for my usecases and requires \"only\" a\r\n@RunWith (Runner) configuration and a @Concurrency configuration\r\nannotation.\r\n\r\nIt would be nice if you could a look on it. Feel free to make comments\r\nor wishes for the code. Otherwise you want to take it into the main repo?\r\n\r\nTwo small examples of usage could be found in my junit fork:\r\n\r\nhttps://github.com/jerolimov/junit/commit/68bc6a7982672c5200dd452b3a5d009a873a83aa\r\n\r\nThank you for your feedback"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/388",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/388/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/388/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/388/events",
  "html_url" : "https://github.com/junit-team/junit/issues/388",
  "id" : 3316463,
  "number" : 388,
  "title" : "Potential multi-threading issue in tests with timeouts",
  "user" : {
    "login" : "PhillHenry",
    "id" : 1458470,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1458470?",
    "gravatar_id" : "c21ea27bb08210c7e1b7afd883f60354",
    "url" : "https://api.github.com/users/PhillHenry",
    "html_url" : "https://github.com/PhillHenry",
    "followers_url" : "https://api.github.com/users/PhillHenry/followers",
    "following_url" : "https://api.github.com/users/PhillHenry/following{/other_user}",
    "gists_url" : "https://api.github.com/users/PhillHenry/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/PhillHenry/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/PhillHenry/subscriptions",
    "organizations_url" : "https://api.github.com/users/PhillHenry/orgs",
    "repos_url" : "https://api.github.com/users/PhillHenry/repos",
    "events_url" : "https://api.github.com/users/PhillHenry/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/PhillHenry/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/lowhanging",
    "name" : "lowhanging",
    "color" : "d4c5f9"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2012-02-21T19:04:32Z",
  "updated_at" : "2014-01-29T06:32:56Z",
  "closed_at" : "2014-01-29T06:32:56Z",
  "body" : "FailOnTimeout.StatementThread.fFinished should be volatile since at least 2 threads access it: the main thread and StatementThread (which is started by main).\r\n\r\nThis is \"to ensure that updates to a variable are propagated predictably to other threads\" (Java Concurrency in Practice, 3.1.4, Joshua Bloch)."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/389",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/389/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/389/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/389/events",
  "html_url" : "https://github.com/junit-team/junit/issues/389",
  "id" : 3365361,
  "number" : 389,
  "title" : "ParentRunner#runLeaf useful to override, but final",
  "user" : {
    "login" : "rockwalrus",
    "id" : 177072,
    "avatar_url" : "https://avatars.githubusercontent.com/u/177072?",
    "gravatar_id" : "888dec7bd6481d8099a4d77d05b225df",
    "url" : "https://api.github.com/users/rockwalrus",
    "html_url" : "https://github.com/rockwalrus",
    "followers_url" : "https://api.github.com/users/rockwalrus/followers",
    "following_url" : "https://api.github.com/users/rockwalrus/following{/other_user}",
    "gists_url" : "https://api.github.com/users/rockwalrus/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/rockwalrus/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/rockwalrus/subscriptions",
    "organizations_url" : "https://api.github.com/users/rockwalrus/orgs",
    "repos_url" : "https://api.github.com/users/rockwalrus/repos",
    "events_url" : "https://api.github.com/users/rockwalrus/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/rockwalrus/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-02-23T23:35:47Z",
  "updated_at" : "2013-11-09T19:48:34Z",
  "closed_at" : null,
  "body" : "I'm trying to write a runner that, among other things, needs to handle notifications differently from the standard method.  (It chooses whether to report a failure or not based on the results of other tests.)\r\n\r\nParentRunner#runLeaf is the best place to override this behavior, but since it is final, I have to override all of BlockJUnit4ClassRunner#runChild and duplicate most of its code and runLeaf's code or find some other workaround."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/390",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/390/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/390/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/390/events",
  "html_url" : "https://github.com/junit-team/junit/issues/390",
  "id" : 3365469,
  "number" : 390,
  "title" : "Cannot write code that deals with assumption violation without using internal API",
  "user" : {
    "login" : "rockwalrus",
    "id" : 177072,
    "avatar_url" : "https://avatars.githubusercontent.com/u/177072?",
    "gravatar_id" : "888dec7bd6481d8099a4d77d05b225df",
    "url" : "https://api.github.com/users/rockwalrus",
    "html_url" : "https://github.com/rockwalrus",
    "followers_url" : "https://api.github.com/users/rockwalrus/followers",
    "following_url" : "https://api.github.com/users/rockwalrus/following{/other_user}",
    "gists_url" : "https://api.github.com/users/rockwalrus/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/rockwalrus/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/rockwalrus/subscriptions",
    "organizations_url" : "https://api.github.com/users/rockwalrus/orgs",
    "repos_url" : "https://api.github.com/users/rockwalrus/repos",
    "events_url" : "https://api.github.com/users/rockwalrus/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/rockwalrus/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/lowhanging",
    "name" : "lowhanging",
    "color" : "d4c5f9"
  } ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 8,
  "created_at" : "2012-02-23T23:42:25Z",
  "updated_at" : "2014-02-12T05:54:11Z",
  "closed_at" : null,
  "body" : "Since AssumptionViolatedException is internal API, you cannot write a rule, runner, etc. that react differently to assumption violations than other exceptions without crossing the boundary into internal API."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/391",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/391/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/391/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/391/events",
  "html_url" : "https://github.com/junit-team/junit/pull/391",
  "id" : 3426060,
  "number" : 391,
  "title" : "TestRunner for concurrency problems",
  "user" : {
    "login" : "jerolimov",
    "id" : 139310,
    "avatar_url" : "https://avatars.githubusercontent.com/u/139310?",
    "gravatar_id" : "98c30f0c7654b0c20d78da0372fbe715",
    "url" : "https://api.github.com/users/jerolimov",
    "html_url" : "https://github.com/jerolimov",
    "followers_url" : "https://api.github.com/users/jerolimov/followers",
    "following_url" : "https://api.github.com/users/jerolimov/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jerolimov/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jerolimov/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jerolimov/subscriptions",
    "organizations_url" : "https://api.github.com/users/jerolimov/orgs",
    "repos_url" : "https://api.github.com/users/jerolimov/repos",
    "events_url" : "https://api.github.com/users/jerolimov/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jerolimov/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2012-02-28T21:01:17Z",
  "updated_at" : "2012-03-28T01:18:15Z",
  "closed_at" : "2012-03-28T01:18:14Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/391",
    "html_url" : "https://github.com/junit-team/junit/pull/391",
    "diff_url" : "https://github.com/junit-team/junit/pull/391.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/391.patch"
  },
  "body" : "Hello,\r\n\r\ni write an extension for junit to check common concurrency problems,\r\nfor example on parallel SimpleDateFormat or HashMap usage.\r\nAnd i originally write this already in the issue 387 - but notice now that\r\nit's better to push it to your pull requests. Sorry for the duplication.\r\n\r\nThank you for your feedback here or in the issue 387 where\r\ndifferent people already discussed the theoretically problems behind\r\nconcurrency testing: https://github.com/KentBeck/junit/issues/387\r\n\r\nBut the code is tested in a real project and it's simple enough for all\r\nstandard usecases so i want to push it into the upstream to share\r\nit with other developers. And maybe another dev could use or extend\r\nit anytime...\r\n\r\nIt requires only a @RunWith (Runner) configuration on the test class\r\nand a @Concurrency configuration annotation with options for\r\n* times -- Number of times a single test method will be called.\r\n* parallelThreads -- Number  of threads which will be created for each test method.\r\n* expectAtLeast -- Expected exceptions means \"allowed\" exceptions...\r\n* expectMinimumSuccessRuns -- Number of ...\r\n* expectMaximumSuccessRuns -- Number of ...\r\n\r\nAnnotation source:\r\n\r\nhttps://github.com/jerolimov/junit/blob/master/src/main/java/org/junit/concurrency/Concurrency.java\r\n\r\nExample source:\r\n\r\nhttps://github.com/jerolimov/junit/blob/master/src/test/java/org/junit/concurrency/HashMapTest.java\r\n\r\nAlready some feedback here:\r\n\r\nhttps://github.com/KentBeck/junit/issues/387\r\n\r\n\r\nIt would be nice if you could a look on it. Feel free to make comments\r\nor wishes for the code. Otherwise you want to take it into the main repo?"
} ]