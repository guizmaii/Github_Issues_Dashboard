[ {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/452",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/452/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/452/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/452/events",
  "html_url" : "https://github.com/junit-team/junit/pull/452",
  "id" : 5092790,
  "number" : 452,
  "title" : "TestWatcher exceptions hide test exceptions",
  "user" : {
    "login" : "davidhart82",
    "id" : 1810493,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1810493?",
    "gravatar_id" : "102e396e9b5f5a65dc1e8544b123cd76",
    "url" : "https://api.github.com/users/davidhart82",
    "html_url" : "https://github.com/davidhart82",
    "followers_url" : "https://api.github.com/users/davidhart82/followers",
    "following_url" : "https://api.github.com/users/davidhart82/following{/other_user}",
    "gists_url" : "https://api.github.com/users/davidhart82/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/davidhart82/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/davidhart82/subscriptions",
    "organizations_url" : "https://api.github.com/users/davidhart82/orgs",
    "repos_url" : "https://api.github.com/users/davidhart82/repos",
    "events_url" : "https://api.github.com/users/davidhart82/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/davidhart82/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-06-15T14:05:50Z",
  "updated_at" : "2012-08-02T18:57:38Z",
  "closed_at" : "2012-08-02T18:57:31Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/452",
    "html_url" : "https://github.com/junit-team/junit/pull/452",
    "diff_url" : "https://github.com/junit-team/junit/pull/452.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/452.patch"
  },
  "body" : "Throw MultipleFailureException, so that errors in both test and test watcher are reported"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/453",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/453/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/453/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/453/events",
  "html_url" : "https://github.com/junit-team/junit/issues/453",
  "id" : 5140769,
  "number" : 453,
  "title" : "Please implement  @IgnoreWhen(true) annotation.",
  "user" : {
    "login" : "Jackalx",
    "id" : 555916,
    "avatar_url" : "https://avatars.githubusercontent.com/u/555916?",
    "gravatar_id" : "d83273d400c64931f2ea8124444466cc",
    "url" : "https://api.github.com/users/Jackalx",
    "html_url" : "https://github.com/Jackalx",
    "followers_url" : "https://api.github.com/users/Jackalx/followers",
    "following_url" : "https://api.github.com/users/Jackalx/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Jackalx/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Jackalx/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Jackalx/subscriptions",
    "organizations_url" : "https://api.github.com/users/Jackalx/orgs",
    "repos_url" : "https://api.github.com/users/Jackalx/repos",
    "events_url" : "https://api.github.com/users/Jackalx/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Jackalx/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2012-06-19T07:24:52Z",
  "updated_at" : "2012-06-20T19:52:15Z",
  "closed_at" : "2012-06-19T09:07:19Z",
  "body" : "Will be great to have annotation that can help ignore some tests depending on certain conditions."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/454",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/454/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/454/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/454/events",
  "html_url" : "https://github.com/junit-team/junit/pull/454",
  "id" : 5144613,
  "number" : 454,
  "title" : "Fixes #441 fix for issue 283 (recursive temp folders) caused incompatibility",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-06-19T12:00:46Z",
  "updated_at" : "2012-06-23T16:18:12Z",
  "closed_at" : "2012-06-23T16:17:05Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/454",
    "html_url" : "https://github.com/junit-team/junit/pull/454",
    "diff_url" : "https://github.com/junit-team/junit/pull/454.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/454.patch"
  },
  "body" : "Put back in the method folder.newFolder(String) that\nwas removed in #283. Tests that the method is there using\nreflection."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/455",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/455/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/455/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/455/events",
  "html_url" : "https://github.com/junit-team/junit/issues/455",
  "id" : 5174698,
  "number" : 455,
  "title" : "Using Assume does not mark tests as 'Ignored'",
  "user" : {
    "login" : "davidhart82",
    "id" : 1810493,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1810493?",
    "gravatar_id" : "102e396e9b5f5a65dc1e8544b123cd76",
    "url" : "https://api.github.com/users/davidhart82",
    "html_url" : "https://github.com/davidhart82",
    "followers_url" : "https://api.github.com/users/davidhart82/followers",
    "following_url" : "https://api.github.com/users/davidhart82/following{/other_user}",
    "gists_url" : "https://api.github.com/users/davidhart82/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/davidhart82/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/davidhart82/subscriptions",
    "organizations_url" : "https://api.github.com/users/davidhart82/orgs",
    "repos_url" : "https://api.github.com/users/davidhart82/repos",
    "events_url" : "https://api.github.com/users/davidhart82/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/davidhart82/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-06-20T16:25:49Z",
  "updated_at" : "2012-06-23T19:22:12Z",
  "closed_at" : "2012-06-23T19:22:12Z",
  "body" : "The JavaDoc for org.junit.Assume states that \"The default JUnit runner treats tests with failing assumptions as ignored.\".  This is not the case - they are treated as successful."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/456",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/456/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/456/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/456/events",
  "html_url" : "https://github.com/junit-team/junit/pull/456",
  "id" : 5181662,
  "number" : 456,
  "title" : "Enclosed runner should ignore abstract enclosed classes",
  "user" : {
    "login" : "nicobn",
    "id" : 291103,
    "avatar_url" : "https://avatars.githubusercontent.com/u/291103?",
    "gravatar_id" : "daa28988348f4ac04f4d3876fd14919e",
    "url" : "https://api.github.com/users/nicobn",
    "html_url" : "https://github.com/nicobn",
    "followers_url" : "https://api.github.com/users/nicobn/followers",
    "following_url" : "https://api.github.com/users/nicobn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/nicobn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/nicobn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/nicobn/subscriptions",
    "organizations_url" : "https://api.github.com/users/nicobn/orgs",
    "repos_url" : "https://api.github.com/users/nicobn/repos",
    "events_url" : "https://api.github.com/users/nicobn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/nicobn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 14,
  "created_at" : "2012-06-20T21:51:05Z",
  "updated_at" : "2012-12-04T15:53:49Z",
  "closed_at" : "2012-12-04T15:53:46Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/456",
    "html_url" : "https://github.com/junit-team/junit/pull/456",
    "diff_url" : "https://github.com/junit-team/junit/pull/456.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/456.patch"
  },
  "body" : "This commit adds a filter to the Enclosed runner that filters out abstract classes. Currently, the use of enclosed abstract classes (e.g.: to provide a basic set of functionality to all enclosed tests) causes an exception, as it expects all test classes in a suite to be instantiable. "
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/457",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/457/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/457/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/457/events",
  "html_url" : "https://github.com/junit-team/junit/pull/457",
  "id" : 5255279,
  "number" : 457,
  "title" : "Add trace method \"skipped\" to TestWatcher",
  "user" : {
    "login" : "mmichaelis",
    "id" : 71911,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71911?",
    "gravatar_id" : "ab6f8ad1b1b902313b2273a93efe4e70",
    "url" : "https://api.github.com/users/mmichaelis",
    "html_url" : "https://github.com/mmichaelis",
    "followers_url" : "https://api.github.com/users/mmichaelis/followers",
    "following_url" : "https://api.github.com/users/mmichaelis/following{/other_user}",
    "gists_url" : "https://api.github.com/users/mmichaelis/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/mmichaelis/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/mmichaelis/subscriptions",
    "organizations_url" : "https://api.github.com/users/mmichaelis/orgs",
    "repos_url" : "https://api.github.com/users/mmichaelis/repos",
    "events_url" : "https://api.github.com/users/mmichaelis/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/mmichaelis/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2012-06-25T17:59:26Z",
  "updated_at" : "2012-09-04T20:13:47Z",
  "closed_at" : "2012-09-04T20:13:47Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/457",
    "html_url" : "https://github.com/junit-team/junit/pull/457",
    "diff_url" : "https://github.com/junit-team/junit/pull/457.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/457.patch"
  },
  "body" : "Continues [Issue 296]: TestWatchman.failed should not be invoked for AssumptionViolatedExceptions\n\nThe solution introduced breaks with the general concept of the TestWatcher which is to call a tracing method for any state the test reaches.\n\nThis commit introduces a new method skipped() to the TestWatcher. Quirk: The AssumptionViolatedException is in package \"internal\".\n\n[Issue 296]: <https://github.com/KentBeck/junit/issues/296> \"TestWatchman.failed should not be invoked for AssumptionViolatedExceptions\""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/458",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/458/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/458/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/458/events",
  "html_url" : "https://github.com/junit-team/junit/issues/458",
  "id" : 5438341,
  "number" : 458,
  "title" : "wont login",
  "user" : {
    "login" : "apulsingh",
    "id" : 1925584,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1925584?",
    "gravatar_id" : "57c3df525ea31d3987867c3cff566c52",
    "url" : "https://api.github.com/users/apulsingh",
    "html_url" : "https://github.com/apulsingh",
    "followers_url" : "https://api.github.com/users/apulsingh/followers",
    "following_url" : "https://api.github.com/users/apulsingh/following{/other_user}",
    "gists_url" : "https://api.github.com/users/apulsingh/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/apulsingh/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/apulsingh/subscriptions",
    "organizations_url" : "https://api.github.com/users/apulsingh/orgs",
    "repos_url" : "https://api.github.com/users/apulsingh/repos",
    "events_url" : "https://api.github.com/users/apulsingh/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/apulsingh/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 0,
  "created_at" : "2012-07-05T06:54:28Z",
  "updated_at" : "2012-07-06T00:35:33Z",
  "closed_at" : "2012-07-06T00:35:33Z",
  "body" : "shjdcgskscbsbdcscscc"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/459",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/459/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/459/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/459/events",
  "html_url" : "https://github.com/junit-team/junit/issues/459",
  "id" : 5498645,
  "number" : 459,
  "title" : "AssertEquals error message when comparing numbers",
  "user" : {
    "login" : "eaaltonen",
    "id" : 1905693,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1905693?",
    "gravatar_id" : "044b4a5873ac75a7bde3d51af15fb6c8",
    "url" : "https://api.github.com/users/eaaltonen",
    "html_url" : "https://github.com/eaaltonen",
    "followers_url" : "https://api.github.com/users/eaaltonen/followers",
    "following_url" : "https://api.github.com/users/eaaltonen/following{/other_user}",
    "gists_url" : "https://api.github.com/users/eaaltonen/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/eaaltonen/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/eaaltonen/subscriptions",
    "organizations_url" : "https://api.github.com/users/eaaltonen/orgs",
    "repos_url" : "https://api.github.com/users/eaaltonen/repos",
    "events_url" : "https://api.github.com/users/eaaltonen/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/eaaltonen/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-07-09T13:30:05Z",
  "updated_at" : "2012-07-10T08:38:37Z",
  "closed_at" : "2012-07-10T08:38:37Z",
  "body" : "I got a rather confusing error message when using assertEquals. Below is the sample case\n\n\npublic class Example {\n\t\n\tstatic class MyClass { // Some data structure\n\t\tbyte foo;\n\t\tpublic MyClass(int i) {\n\t\t\tfoo = (byte) i;\n\t\t}\n\t}\n\n\t@Test\n\tpublic void myTest() {\n\t\tMyClass thing = new MyClass(4);\n\t\tassertEquals(thing.foo, 4); // confusing error message\n\t}\n}\n\n\nAnd the error message I got was:\njava.lang.AssertionError: expected:<4> but was:<4>\n   ...\n\n\nIt might be good to state that the failure was due to comparing a byte to an int."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/460",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/460/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/460/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/460/events",
  "html_url" : "https://github.com/junit-team/junit/issues/460",
  "id" : 5504433,
  "number" : 460,
  "title" : "Testing github e-mail notifications",
  "user" : {
    "login" : "dsaff",
    "id" : 46155,
    "avatar_url" : "https://avatars.githubusercontent.com/u/46155?",
    "gravatar_id" : "84fdeb898b5928d3234ff7e19db710f3",
    "url" : "https://api.github.com/users/dsaff",
    "html_url" : "https://github.com/dsaff",
    "followers_url" : "https://api.github.com/users/dsaff/followers",
    "following_url" : "https://api.github.com/users/dsaff/following{/other_user}",
    "gists_url" : "https://api.github.com/users/dsaff/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/dsaff/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/dsaff/subscriptions",
    "organizations_url" : "https://api.github.com/users/dsaff/orgs",
    "repos_url" : "https://api.github.com/users/dsaff/repos",
    "events_url" : "https://api.github.com/users/dsaff/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/dsaff/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2012-07-09T17:48:20Z",
  "updated_at" : "2013-11-15T00:01:17Z",
  "closed_at" : "2013-11-15T00:01:17Z",
  "body" : ""
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/461",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/461/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/461/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/461/events",
  "html_url" : "https://github.com/junit-team/junit/pull/461",
  "id" : 5623025,
  "number" : 461,
  "title" : "IncludeExcludeCategory should accept many categories + configurable",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2012-07-14T21:19:36Z",
  "updated_at" : "2012-08-09T19:21:15Z",
  "closed_at" : "2012-08-07T23:01:27Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/461",
    "html_url" : "https://github.com/junit-team/junit/pull/461",
    "diff_url" : "https://github.com/junit-team/junit/pull/461.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/461.patch"
  },
  "body" : "This pul request was created after I resolved conflicts with KentBeck:master.\nThis is the same #354 + #336 .\nWe discussed this feature in #142 and continued then in #354."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/462",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/462/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/462/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/462/events",
  "html_url" : "https://github.com/junit-team/junit/pull/462",
  "id" : 5626607,
  "number" : 462,
  "title" : "Fix warnings in MethodSorterTest",
  "user" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-07-15T12:22:17Z",
  "updated_at" : "2012-07-15T21:32:58Z",
  "closed_at" : "2012-07-15T21:32:58Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/462",
    "html_url" : "https://github.com/junit-team/junit/pull/462",
    "diff_url" : "https://github.com/junit-team/junit/pull/462.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/462.patch"
  },
  "body" : "There were several compiler warnings due to seemingly unused members of private classes that were only used via reflection."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/463",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/463/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/463/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/463/events",
  "html_url" : "https://github.com/junit-team/junit/issues/463",
  "id" : 5649466,
  "number" : 463,
  "title" : "Add ability for timeout to print full thread stack dump",
  "user" : {
    "login" : "toddlipcon",
    "id" : 14135,
    "avatar_url" : "https://avatars.githubusercontent.com/u/14135?",
    "gravatar_id" : "01e95e6cea74015d7c6231757b88dc4c",
    "url" : "https://api.github.com/users/toddlipcon",
    "html_url" : "https://github.com/toddlipcon",
    "followers_url" : "https://api.github.com/users/toddlipcon/followers",
    "following_url" : "https://api.github.com/users/toddlipcon/following{/other_user}",
    "gists_url" : "https://api.github.com/users/toddlipcon/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/toddlipcon/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/toddlipcon/subscriptions",
    "organizations_url" : "https://api.github.com/users/toddlipcon/orgs",
    "repos_url" : "https://api.github.com/users/toddlipcon/repos",
    "events_url" : "https://api.github.com/users/toddlipcon/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/toddlipcon/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 17,
  "created_at" : "2012-07-16T20:44:21Z",
  "updated_at" : "2013-11-22T19:40:24Z",
  "closed_at" : null,
  "body" : "When using JUnit to run integration-style tests which involve several threads, or to test multi-threaded components, a deadlock or livelock bug can often result in a test timeout. The current behavior only provides the stack trace of the main test thread, which is not always sufficient to understand the true cause of the deadlock (the main thread may just be blocked on another worker thread).\n\nI'd like to add the ability to dump all of the thread stacks to stderr when a timeout is triggered. Does this seem like a reasonable default behavior, or something best enabled via some kind of property/configuration?"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/464",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/464/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/464/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/464/events",
  "html_url" : "https://github.com/junit-team/junit/pull/464",
  "id" : 5722848,
  "number" : 464,
  "title" : "Maven project file for JUnit as OSGi bundle",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 5,
  "created_at" : "2012-07-19T19:40:50Z",
  "updated_at" : "2012-08-08T01:14:22Z",
  "closed_at" : "2012-08-08T01:14:22Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/464",
    "html_url" : "https://github.com/junit-team/junit/pull/464",
    "diff_url" : "https://github.com/junit-team/junit/pull/464.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/464.patch"
  },
  "body" : "Upon discussion #368, I created maven project file.\nOther e.g. maven runtime environment, and script running pom.xml may come if necessary."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/465",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/465/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/465/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/465/events",
  "html_url" : "https://github.com/junit-team/junit/issues/465",
  "id" : 5827881,
  "number" : 465,
  "title" : "support for assertEmpty",
  "user" : {
    "login" : "Barbatruuk",
    "id" : 2039947,
    "avatar_url" : "https://avatars.githubusercontent.com/u/2039947?",
    "gravatar_id" : "525d10f34109113ca237e4def025d5d2",
    "url" : "https://api.github.com/users/Barbatruuk",
    "html_url" : "https://github.com/Barbatruuk",
    "followers_url" : "https://api.github.com/users/Barbatruuk/followers",
    "following_url" : "https://api.github.com/users/Barbatruuk/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Barbatruuk/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Barbatruuk/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Barbatruuk/subscriptions",
    "organizations_url" : "https://api.github.com/users/Barbatruuk/orgs",
    "repos_url" : "https://api.github.com/users/Barbatruuk/repos",
    "events_url" : "https://api.github.com/users/Barbatruuk/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Barbatruuk/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 6,
  "created_at" : "2012-07-25T11:19:47Z",
  "updated_at" : "2012-08-30T13:43:48Z",
  "closed_at" : "2012-08-30T13:43:48Z",
  "body" : "Hello,\n\nSorry if this has been requested/discussed before, I didn't find a reference to a similar request.\n\nI'd like to have an assertEmpty(...) method that tests for instance if a String is empty. I understand that:\nassertEquals(\"\", someString);\nassertTrue(someString.isEmpty());\n\nhave similar effect, but it reads so much easier:\nassertEmpty(someString);\n\nany thoughts on that?\n\nThanks,\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/466",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/466/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/466/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/466/events",
  "html_url" : "https://github.com/junit-team/junit/pull/466",
  "id" : 5834298,
  "number" : 466,
  "title" : "Revert TemporaryFolder#newFolder(String) so it returns the created folder again",
  "user" : {
    "login" : "AlainODea",
    "id" : 16341,
    "avatar_url" : "https://avatars.githubusercontent.com/u/16341?",
    "gravatar_id" : "9367d0448b8fc3e6d7f6cd421940ac62",
    "url" : "https://api.github.com/users/AlainODea",
    "html_url" : "https://github.com/AlainODea",
    "followers_url" : "https://api.github.com/users/AlainODea/followers",
    "following_url" : "https://api.github.com/users/AlainODea/following{/other_user}",
    "gists_url" : "https://api.github.com/users/AlainODea/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/AlainODea/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/AlainODea/subscriptions",
    "organizations_url" : "https://api.github.com/users/AlainODea/orgs",
    "repos_url" : "https://api.github.com/users/AlainODea/repos",
    "events_url" : "https://api.github.com/users/AlainODea/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/AlainODea/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-07-25T16:33:27Z",
  "updated_at" : "2012-07-25T18:33:04Z",
  "closed_at" : "2012-07-25T18:33:04Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/466",
    "html_url" : "https://github.com/junit-team/junit/pull/466",
    "diff_url" : "https://github.com/junit-team/junit/pull/466.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/466.patch"
  },
  "body" : "Pull 283 changed newFolder(String) so that it now returns the root instead of the created folder.  This makes no sense and is an API regression.  It breaks tests that relied on the original return value being the created folder.\n\nThis pull request corrects that by returning newFolder(String) to its pre Pull 283 implementation."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/467",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/467/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/467/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/467/events",
  "html_url" : "https://github.com/junit-team/junit/pull/467",
  "id" : 5837064,
  "number" : 467,
  "title" : "Revert TemporaryFolder#newFolder(String) so it returns the created folder again",
  "user" : {
    "login" : "AlainODea",
    "id" : 16341,
    "avatar_url" : "https://avatars.githubusercontent.com/u/16341?",
    "gravatar_id" : "9367d0448b8fc3e6d7f6cd421940ac62",
    "url" : "https://api.github.com/users/AlainODea",
    "html_url" : "https://github.com/AlainODea",
    "followers_url" : "https://api.github.com/users/AlainODea/followers",
    "following_url" : "https://api.github.com/users/AlainODea/following{/other_user}",
    "gists_url" : "https://api.github.com/users/AlainODea/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/AlainODea/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/AlainODea/subscriptions",
    "organizations_url" : "https://api.github.com/users/AlainODea/orgs",
    "repos_url" : "https://api.github.com/users/AlainODea/repos",
    "events_url" : "https://api.github.com/users/AlainODea/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/AlainODea/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 11,
  "created_at" : "2012-07-25T18:40:24Z",
  "updated_at" : "2012-08-01T21:41:05Z",
  "closed_at" : "2012-08-01T14:17:41Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/467",
    "html_url" : "https://github.com/junit-team/junit/pull/467",
    "diff_url" : "https://github.com/junit-team/junit/pull/467.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/467.patch"
  },
  "body" : "Pull 283 changed newFolder(String) so that it no longer returns the file created, but the root.  This breaks existing tests.\n\nThis commit corrects that by returning newFolder(String) to its pre Pull 283 implementation.  It preserves newFolder(String...) which has a different purpose."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/468",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/468/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/468/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/468/events",
  "html_url" : "https://github.com/junit-team/junit/issues/468",
  "id" : 5935673,
  "number" : 468,
  "title" : "bug in ignore an overriding method",
  "user" : {
    "login" : "inbarsto",
    "id" : 2069057,
    "avatar_url" : "https://avatars.githubusercontent.com/u/2069057?",
    "gravatar_id" : "41a1eff3b7bb2b07aabf9b4835a1010a",
    "url" : "https://api.github.com/users/inbarsto",
    "html_url" : "https://github.com/inbarsto",
    "followers_url" : "https://api.github.com/users/inbarsto/followers",
    "following_url" : "https://api.github.com/users/inbarsto/following{/other_user}",
    "gists_url" : "https://api.github.com/users/inbarsto/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/inbarsto/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/inbarsto/subscriptions",
    "organizations_url" : "https://api.github.com/users/inbarsto/orgs",
    "repos_url" : "https://api.github.com/users/inbarsto/repos",
    "events_url" : "https://api.github.com/users/inbarsto/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/inbarsto/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 13,
  "created_at" : "2012-07-31T04:55:36Z",
  "updated_at" : "2013-11-05T01:48:54Z",
  "closed_at" : null,
  "body" : "i dont know if that is a bug or a \"feature\" but when tring to @Override  a method and then putting that overridden method in @Ignore then the method is not Ignored unless the parent method is also Ignored..."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/469",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/469/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/469/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/469/events",
  "html_url" : "https://github.com/junit-team/junit/pull/469",
  "id" : 5951393,
  "number" : 469,
  "title" : "run single method from command line",
  "user" : {
    "login" : "schaarsc",
    "id" : 2072104,
    "avatar_url" : "https://avatars.githubusercontent.com/u/2072104?",
    "gravatar_id" : "4b8cbd74fe129b958d9ca445c66ffa76",
    "url" : "https://api.github.com/users/schaarsc",
    "html_url" : "https://github.com/schaarsc",
    "followers_url" : "https://api.github.com/users/schaarsc/followers",
    "following_url" : "https://api.github.com/users/schaarsc/following{/other_user}",
    "gists_url" : "https://api.github.com/users/schaarsc/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/schaarsc/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/schaarsc/subscriptions",
    "organizations_url" : "https://api.github.com/users/schaarsc/orgs",
    "repos_url" : "https://api.github.com/users/schaarsc/repos",
    "events_url" : "https://api.github.com/users/schaarsc/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/schaarsc/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 24,
  "created_at" : "2012-07-31T19:12:35Z",
  "updated_at" : "2012-11-27T22:03:19Z",
  "closed_at" : "2012-11-27T22:03:19Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/469",
    "html_url" : "https://github.com/junit-team/junit/pull/469",
    "diff_url" : "https://github.com/junit-team/junit/pull/469.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/469.patch"
  },
  "body" : "most IDE support running single test methods instead of complete test classes. this pull request adds capability to run single test methods from cmd line without IDE using pattern known from maven: ClassName#methodName"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/470",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/470/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/470/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/470/events",
  "html_url" : "https://github.com/junit-team/junit/pull/470",
  "id" : 6003032,
  "number" : 470,
  "title" : "Fix javac build",
  "user" : {
    "login" : "marcphilipp",
    "id" : 214207,
    "avatar_url" : "https://avatars.githubusercontent.com/u/214207?",
    "gravatar_id" : "956c7d246841e8507a1e1b96842994db",
    "url" : "https://api.github.com/users/marcphilipp",
    "html_url" : "https://github.com/marcphilipp",
    "followers_url" : "https://api.github.com/users/marcphilipp/followers",
    "following_url" : "https://api.github.com/users/marcphilipp/following{/other_user}",
    "gists_url" : "https://api.github.com/users/marcphilipp/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/marcphilipp/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/marcphilipp/subscriptions",
    "organizations_url" : "https://api.github.com/users/marcphilipp/orgs",
    "repos_url" : "https://api.github.com/users/marcphilipp/repos",
    "events_url" : "https://api.github.com/users/marcphilipp/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/marcphilipp/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-08-02T21:42:04Z",
  "updated_at" : "2012-08-03T02:13:12Z",
  "closed_at" : "2012-08-03T02:13:12Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/470",
    "html_url" : "https://github.com/junit-team/junit/pull/470",
    "diff_url" : "https://github.com/junit-team/junit/pull/470.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/470.patch"
  },
  "body" : "Replace both() with allOf()\n\n@dsaff This seems to be caused by merging different pull requests in a specific order."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/471",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/471/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/471/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/471/events",
  "html_url" : "https://github.com/junit-team/junit/issues/471",
  "id" : 6056511,
  "number" : 471,
  "title" : "Theories: Enhancement to the way theories handle input test data using @ParametersSuppliedBy",
  "user" : {
    "login" : "anujgandharv",
    "id" : 1678221,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1678221?",
    "gravatar_id" : "b34110b49c1315d42e61b70f6bb5cbf5",
    "url" : "https://api.github.com/users/anujgandharv",
    "html_url" : "https://github.com/anujgandharv",
    "followers_url" : "https://api.github.com/users/anujgandharv/followers",
    "following_url" : "https://api.github.com/users/anujgandharv/following{/other_user}",
    "gists_url" : "https://api.github.com/users/anujgandharv/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/anujgandharv/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/anujgandharv/subscriptions",
    "organizations_url" : "https://api.github.com/users/anujgandharv/orgs",
    "repos_url" : "https://api.github.com/users/anujgandharv/repos",
    "events_url" : "https://api.github.com/users/anujgandharv/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/anujgandharv/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 22,
  "created_at" : "2012-08-06T16:55:41Z",
  "updated_at" : "2013-11-15T17:33:51Z",
  "closed_at" : "2013-11-15T01:09:44Z",
  "body" : "Hi,\n I am working as a designer/architect in my company and recently we decided to move to Data driven Integration testing for some 200 services that we have  in our project. I did some research and Junit Theories looked good to me even though its still in experimental stages. So i started my PoC on the same. I have been working with Junit Theories(and related classes) for quite some time now and even though it promises to be a nice feature set, I have been finding it difficult to actually understand why Theories class handles the data in such an unfriendly way. The data handling of Junit Theories is what is letting us down and move away from Junit. I will give an example of the real world scenario that Junit Theories is not able to handle:\n\nAssume I have a test method that takes 3 arguments and each argument is annotated with an annotation that extends @ParameterSuppliedBy. Something like this :\n\n@Theory\n    public void testMethod(@DataProvider(paramName=\"p0\")String p0,\n        @DataProvider(paramName=\"p1\") String p1 , @DataProvider(paramName=\"p2\") String p2){\n............\nwhere @DataProvider extends @ParameterSuppliedBy annotation.\n\nFurther assume that getValueSources method of ParameterSupplier class returns a List<PotentialAssignment> that contains 3 values for each declared parameter. What this means is I want to call my test method 3 times with 3 different set of data. In such a case, Junit Theories, instead of calling my test method 3 times, will actually call my test method 3*3*3 = 27 times. \n\nIt calls my test method for each and every possible combination of test data which is simply, well, not done. \nI want to be able to specify a set of data that should be taken by Junit and run on my test class. I dont want Junit to apply every possible permutation and combination on my test data because IMHO,that's not what a framework should be doing. \nI had a good look at the code and the reason this is happening is because of the recursive loop in Theories.TheoryAnchor class(well this could have been done in a single method but that's different story) in method runWithIncompleteAssignment which is calling runWithAssignment for every test data value. \n\nI had to rewrite the runWithAssignment so that I could provide 3 set of data for my test method and my test method is called exactly 3 times. Here is the modified code(this is written in 15 min and so may not be entirely clean:)\n\nprotected void runWithAssignment(Assignments parameterAssignment)\n                throws Throwable {\n            while (!parameterAssignment.isComplete()) {\n                List<PotentialAssignment> potentialAssignments = parameterAssignment.potentialsForNextUnassigned();\n                boolean isFirstSetOfArguments = listOfAssignments.isEmpty();\n                for(int i = 0 ; i < potentialAssignments.size() ; i++){\n                    if(isFirstSetOfArguments){\n                        Assignments assignments = Assignments.allUnassigned(fTestMethod.getMethod(), getTestClass());\n                        listOfAssignments.add(assignments.assignNext(potentialAssignments.get(i)));\n                    }else{\n                        Assignments assignments = listOfAssignments.get(i);\n                        listOfAssignments.set(i, assignments.assignNext(potentialAssignments.get(i)));\n                    }\n                    \n                }\n                parameterAssignment = parameterAssignment.assignNext(null);\n            } \n            for(Assignments assignments : listOfAssignments){\n                runWithCompleteAssignment(assignments);\n            }\n        }\n\nwhere listOfAssignments is declared at the class level as follows:\n private List<Assignments> listOfAssignments;\n\nObviously org.junit.experimental.theories.internal.Assignments was not a great helper to my writing this method and I had to find ways around it so that I could achieve what I intended to. \n\nIf somebody in Junit wants, I can write the Theories class such that it behaves in the way above. Or may be have an extension to the existing Theories class behaving in the above manner. I am of the opinion that if Junit Theories gives such a feature, then its adoption by the industry will increase.\n\nThanks,"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/472",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/472/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/472/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/472/events",
  "html_url" : "https://github.com/junit-team/junit/pull/472",
  "id" : 6092277,
  "number" : 472,
  "title" : "Maven project file for JUnit as OSGi bundle",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 74,
  "created_at" : "2012-08-08T00:04:16Z",
  "updated_at" : "2014-04-19T18:10:44Z",
  "closed_at" : "2013-09-17T20:13:35Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/472",
    "html_url" : "https://github.com/junit-team/junit/pull/472",
    "diff_url" : "https://github.com/junit-team/junit/pull/472.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/472.patch"
  },
  "body" : "Upon discussion #368, I created maven project file.\nOther e.g. maven runtime environment, and script running pom.xml may come if necessary."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/473",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/473/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/473/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/473/events",
  "html_url" : "https://github.com/junit-team/junit/issues/473",
  "id" : 6108170,
  "number" : 473,
  "title" : "junit.framework.Assert vs. org.junit.Assert",
  "user" : {
    "login" : "leadVisionary",
    "id" : 640496,
    "avatar_url" : "https://avatars.githubusercontent.com/u/640496?",
    "gravatar_id" : "bfb58616b94d2dd92e9652697e8c5f65",
    "url" : "https://api.github.com/users/leadVisionary",
    "html_url" : "https://github.com/leadVisionary",
    "followers_url" : "https://api.github.com/users/leadVisionary/followers",
    "following_url" : "https://api.github.com/users/leadVisionary/following{/other_user}",
    "gists_url" : "https://api.github.com/users/leadVisionary/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/leadVisionary/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/leadVisionary/subscriptions",
    "organizations_url" : "https://api.github.com/users/leadVisionary/orgs",
    "repos_url" : "https://api.github.com/users/leadVisionary/repos",
    "events_url" : "https://api.github.com/users/leadVisionary/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/leadVisionary/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 9,
  "created_at" : "2012-08-08T17:17:55Z",
  "updated_at" : "2013-12-10T15:46:49Z",
  "closed_at" : "2013-01-22T21:01:50Z",
  "body" : "I think we need some documentation to show the differences between these two. I just tried http://stackoverflow.com/questions/1092219/assertcontains-on-strings-in-junit and was confounded for 15 minutes that it didn't work, until I noticed how wonky wonka can be:\n\n```java\nimport static org.junit.Assert;\nimport static junit.framework.Assert.*;\nimport static org.hamcrest.Matchers.*;\nimport org.junit.Test;\n\n\npublic class WonkyTest {\n\n\t@Test\n\tpublic void testAssertThatWat() {\n\t\tString foo = \"bar\";\n\t\tassertThat(foo, containsString(\"ba\"));\n\t}\n}\n```\nNotice that *I only included the Assert class from org.junit*, but _statically imported junit.framework.Assert_. IDEs and other code completion tools sometimes do this, and the differences between the two are unclear. \n\nThis is really confusing. What framework is and why it's necessary should be documented, and if it's not something end users should use maybe it should be encapsulated. If it's an interface piece for other frameworks (like JBehave and Grails jumping on top of JUnit), that should probably be a separate module that depends on junit-core.\n\nI think this really presses forward the need to Mavenize this project. I see that was done recently, but we need to think POM structure and modules now.\n\nFor a wild stab, something like junit-core should have the standard junit functionality, junit-extend should have things that include hamcrest, junit-experimental could have experimental additions (I've never used a theory, would be nice to keep the src out of my dependency chain unless I'm  explicitly using it)."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/474",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/474/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/474/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/474/events",
  "html_url" : "https://github.com/junit-team/junit/issues/474",
  "id" : 6158437,
  "number" : 474,
  "title" : "Compilation Error in JUnitMatchers#hasItem(Matcher): Matcher",
  "user" : {
    "login" : "Tibor17",
    "id" : 1045063,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1045063?",
    "gravatar_id" : "e5db3e98a858066748db3f817be7bc01",
    "url" : "https://api.github.com/users/Tibor17",
    "html_url" : "https://github.com/Tibor17",
    "followers_url" : "https://api.github.com/users/Tibor17/followers",
    "following_url" : "https://api.github.com/users/Tibor17/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Tibor17/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Tibor17/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Tibor17/subscriptions",
    "organizations_url" : "https://api.github.com/users/Tibor17/orgs",
    "repos_url" : "https://api.github.com/users/Tibor17/repos",
    "events_url" : "https://api.github.com/users/Tibor17/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Tibor17/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 10,
  "created_at" : "2012-08-10T18:03:06Z",
  "updated_at" : "2012-09-04T18:52:06Z",
  "closed_at" : "2012-09-04T18:52:06Z",
  "body" : "src\\main\\java\\org\\junit\\matchers\\JUnitMatchers.java:[34,29] type parameters of < T >org.hamcrest.Matcher<java.lang.Iterable<? super T>> cannot be determined; no unique maximal instance exists for type variable T with upper bounds T,java.lang.Object\n\nThe problem is on the line:\nreturn CoreMatchers.hasItem(elementMatcher);\n\nand can be fixed by specifying generic type:\nreturn CoreMatchers.< T >hasItem(elementMatcher);\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/479",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/479/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/479/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/479/events",
  "html_url" : "https://github.com/junit-team/junit/pull/479",
  "id" : 6175497,
  "number" : 479,
  "title" : "Issue 478: Throw an IllegalArgumentException when the folder already exists",
  "user" : {
    "login" : "awulder",
    "id" : 1449959,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1449959?",
    "gravatar_id" : "fcc627acc4139764658cf3a43c987648",
    "url" : "https://api.github.com/users/awulder",
    "html_url" : "https://github.com/awulder",
    "followers_url" : "https://api.github.com/users/awulder/followers",
    "following_url" : "https://api.github.com/users/awulder/following{/other_user}",
    "gists_url" : "https://api.github.com/users/awulder/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/awulder/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/awulder/subscriptions",
    "organizations_url" : "https://api.github.com/users/awulder/orgs",
    "repos_url" : "https://api.github.com/users/awulder/repos",
    "events_url" : "https://api.github.com/users/awulder/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/awulder/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 2,
  "created_at" : "2012-08-12T07:28:10Z",
  "updated_at" : "2012-08-13T19:03:14Z",
  "closed_at" : "2012-08-13T19:03:14Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/479",
    "html_url" : "https://github.com/junit-team/junit/pull/479",
    "diff_url" : "https://github.com/junit-team/junit/pull/479.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/479.patch"
  },
  "body" : "Changed the code so it behaves like it is described in the documentation for #478."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/480",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/480/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/480/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/480/events",
  "html_url" : "https://github.com/junit-team/junit/issues/480",
  "id" : 6205047,
  "number" : 480,
  "title" : "Assert.assertArrayEquals terrible performance",
  "user" : {
    "login" : "amichair",
    "id" : 1410200,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1410200?",
    "gravatar_id" : "aa4cbe4316b24f6f204acbd1fea09668",
    "url" : "https://api.github.com/users/amichair",
    "html_url" : "https://github.com/amichair",
    "followers_url" : "https://api.github.com/users/amichair/followers",
    "following_url" : "https://api.github.com/users/amichair/following{/other_user}",
    "gists_url" : "https://api.github.com/users/amichair/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/amichair/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/amichair/subscriptions",
    "organizations_url" : "https://api.github.com/users/amichair/orgs",
    "repos_url" : "https://api.github.com/users/amichair/repos",
    "events_url" : "https://api.github.com/users/amichair/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/amichair/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "open",
  "assignee" : null,
  "milestone" : null,
  "comments" : 7,
  "created_at" : "2012-08-13T23:33:55Z",
  "updated_at" : "2014-01-26T00:38:21Z",
  "closed_at" : null,
  "body" : "Using Assert.assertArrayEquals for comparing e.g. a byte array (in JUnit 4.10, OpenJDK 1.7.0_03 on Ubuntu) has unacceptably slow performance, between one and two orders of magnitude slower than a trivial implementation of the method with the exact same contract. The difference is likely due to the fact that it uses reflection (Array.get) to get every single element of the array, boxing and all, do some irrelevant checks on the element (e.g. is it an array) etc. Instantiating a new ExactComparisonCriteria for each call even though it's a stateless class that can be reused is unnecessary as well (though likely not as bad for performance, since it's once per call, whereas the reflection stuff is once per array element per call).\n\nIn one particular test of mine that uses this assertion on byte arrays, using the built-in assertArrayEquals it takes over 15 seconds to run, whereas using a custom version of the method that does the null and length checks and just compares the arrays using a trivial loop, it runs in far less than a second. The difference is huge!\n\nThis naturally holds for all primitive arrays. float/double might be a tad longer to implement due to delta checks, but it should still be easy enough and far faster than the generic reflective implementation.\n"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/481",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/481/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/481/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/481/events",
  "html_url" : "https://github.com/junit-team/junit/pull/481",
  "id" : 6254331,
  "number" : 481,
  "title" : "Altering the behaviour of the buildRunner",
  "user" : {
    "login" : "hasanein",
    "id" : 776139,
    "avatar_url" : "https://avatars.githubusercontent.com/u/776139?",
    "gravatar_id" : "92d68fb16c3499e8ba137bab5e3b05e2",
    "url" : "https://api.github.com/users/hasanein",
    "html_url" : "https://github.com/hasanein",
    "followers_url" : "https://api.github.com/users/hasanein/followers",
    "following_url" : "https://api.github.com/users/hasanein/following{/other_user}",
    "gists_url" : "https://api.github.com/users/hasanein/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/hasanein/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/hasanein/subscriptions",
    "organizations_url" : "https://api.github.com/users/hasanein/orgs",
    "repos_url" : "https://api.github.com/users/hasanein/repos",
    "events_url" : "https://api.github.com/users/hasanein/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/hasanein/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2012-08-16T00:05:04Z",
  "updated_at" : "2012-10-09T14:07:22Z",
  "closed_at" : "2012-10-09T14:07:22Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/481",
    "html_url" : "https://github.com/junit-team/junit/pull/481",
    "diff_url" : "https://github.com/junit-team/junit/pull/481.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/481.patch"
  },
  "body" : "This pull request alter the behaviour of the buildRunner() method in the MaxCore.java to properly determine if the given description is a suite that contains 0 tests."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/482",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/482/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/482/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/482/events",
  "html_url" : "https://github.com/junit-team/junit/issues/482",
  "id" : 6262442,
  "number" : 482,
  "title" : "Master does not build: type parameters of <T>org.hamcrest.Matcher<java.lang.Iterable<? super T>> cannot be determined",
  "user" : {
    "login" : "matthewfarwell",
    "id" : 71668,
    "avatar_url" : "https://avatars.githubusercontent.com/u/71668?",
    "gravatar_id" : "01c4bb8048409cf0238a6518b96d8e05",
    "url" : "https://api.github.com/users/matthewfarwell",
    "html_url" : "https://github.com/matthewfarwell",
    "followers_url" : "https://api.github.com/users/matthewfarwell/followers",
    "following_url" : "https://api.github.com/users/matthewfarwell/following{/other_user}",
    "gists_url" : "https://api.github.com/users/matthewfarwell/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/matthewfarwell/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/matthewfarwell/subscriptions",
    "organizations_url" : "https://api.github.com/users/matthewfarwell/orgs",
    "repos_url" : "https://api.github.com/users/matthewfarwell/repos",
    "events_url" : "https://api.github.com/users/matthewfarwell/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/matthewfarwell/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-08-16T11:42:09Z",
  "updated_at" : "2012-08-18T06:19:03Z",
  "closed_at" : "2012-08-18T06:19:03Z",
  "body" : "When I try and build master (using ant dist), I get:\n\n    build:\n        [mkdir] Created dir: d:\\code\\junit\\d\\junit\\target\\main\n        [javac] Compiling 164 source files to d:\\code\\junit\\d\\junit\\target\\main\n        [javac] d:\\code\\junit\\d\\junit\\src\\main\\java\\org\\junit\\matchers\\JUnitMatchers.java:34: type parameters of <T>org.hamcrest.Matcher<java.lang.Iterable<? super T>> cannot be determined; no unique maximal instance exists for type variable T with upper bounds T,java.lang.Object\n        [javac] \t\treturn CoreMatchers.hasItem(elementMatcher);\n         [javac] \t\t                           ^\n        [javac] Note: Some input files use or override a deprecated API.\n        [javac] Note: Recompile with -Xlint:deprecation for details.\n        [javac] 1 error\n\nAlso, when I remove this error, there are a lot of warnings when building the javadoc (can't find org.hamcrest.*).\n\nThis is on Windows jdk1.6.0_22, ant 1.8.1."
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/483",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/483/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/483/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/483/events",
  "html_url" : "https://github.com/junit-team/junit/pull/483",
  "id" : 6283987,
  "number" : 483,
  "title" : "[Enhancement] for parameterized JUnit test, Parameter annotation - V2",
  "user" : {
    "login" : "jherault",
    "id" : 262878,
    "avatar_url" : "https://avatars.githubusercontent.com/u/262878?",
    "gravatar_id" : "85bc99399d2c807b788ea1279d1d3df7",
    "url" : "https://api.github.com/users/jherault",
    "html_url" : "https://github.com/jherault",
    "followers_url" : "https://api.github.com/users/jherault/followers",
    "following_url" : "https://api.github.com/users/jherault/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jherault/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jherault/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jherault/subscriptions",
    "organizations_url" : "https://api.github.com/users/jherault/orgs",
    "repos_url" : "https://api.github.com/users/jherault/repos",
    "events_url" : "https://api.github.com/users/jherault/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jherault/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 1,
  "created_at" : "2012-08-17T07:41:02Z",
  "updated_at" : "2014-02-12T15:19:43Z",
  "closed_at" : "2012-08-17T13:02:19Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/483",
    "html_url" : "https://github.com/junit-team/junit/pull/483",
    "diff_url" : "https://github.com/junit-team/junit/pull/483.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/483.patch"
  },
  "body" : "Hi,\n\nI added the new annotation @parameter in your framework for JUnit tests that are ran with the Parameterized runner. With this new annotation, no constructor for the test classes. When a field parameter is annoted with @parameter, this field is reflectively set.\n\nLet me know what do you think about it.\n\nThank you.\n\nBest,\n\nJérémy Hérault"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/484",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/484/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/484/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/484/events",
  "html_url" : "https://github.com/junit-team/junit/pull/484",
  "id" : 6288755,
  "number" : 484,
  "title" : "[Enhancement] for parameterized JUnit test, Parameter annotation - V3",
  "user" : {
    "login" : "jherault",
    "id" : 262878,
    "avatar_url" : "https://avatars.githubusercontent.com/u/262878?",
    "gravatar_id" : "85bc99399d2c807b788ea1279d1d3df7",
    "url" : "https://api.github.com/users/jherault",
    "html_url" : "https://github.com/jherault",
    "followers_url" : "https://api.github.com/users/jherault/followers",
    "following_url" : "https://api.github.com/users/jherault/following{/other_user}",
    "gists_url" : "https://api.github.com/users/jherault/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/jherault/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/jherault/subscriptions",
    "organizations_url" : "https://api.github.com/users/jherault/orgs",
    "repos_url" : "https://api.github.com/users/jherault/repos",
    "events_url" : "https://api.github.com/users/jherault/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/jherault/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ {
    "url" : "https://api.github.com/repos/junit-team/junit/labels/parameterized",
    "name" : "parameterized",
    "color" : "0052cc"
  } ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 4,
  "created_at" : "2012-08-17T13:09:57Z",
  "updated_at" : "2014-02-12T15:19:28Z",
  "closed_at" : "2012-08-21T17:22:22Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/484",
    "html_url" : "https://github.com/junit-team/junit/pull/484",
    "diff_url" : "https://github.com/junit-team/junit/pull/484.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/484.patch"
  },
  "body" : "Hi,\n\nSorry but I don't know what I'm doing wrong each time I try to merge with the remote or squash commits, but I'm always wrong. I hope this pull request will be the good one.\n\nI added the new annotation &#64; Parameter in your framework for JUnit tests that are ran with the Parameterized runner. With this new annotation, no constructor for the test classes. When a field parameter is annoted with &#64; Parameter, this field is reflectively set.\n\nThank you.\n\nBest,\n\nJérémy Hérault"
}, {
  "url" : "https://api.github.com/repos/junit-team/junit/issues/485",
  "labels_url" : "https://api.github.com/repos/junit-team/junit/issues/485/labels{/name}",
  "comments_url" : "https://api.github.com/repos/junit-team/junit/issues/485/comments",
  "events_url" : "https://api.github.com/repos/junit-team/junit/issues/485/events",
  "html_url" : "https://github.com/junit-team/junit/pull/485",
  "id" : 6300034,
  "number" : 485,
  "title" : "Fix for issue #55",
  "user" : {
    "login" : "awulder",
    "id" : 1449959,
    "avatar_url" : "https://avatars.githubusercontent.com/u/1449959?",
    "gravatar_id" : "fcc627acc4139764658cf3a43c987648",
    "url" : "https://api.github.com/users/awulder",
    "html_url" : "https://github.com/awulder",
    "followers_url" : "https://api.github.com/users/awulder/followers",
    "following_url" : "https://api.github.com/users/awulder/following{/other_user}",
    "gists_url" : "https://api.github.com/users/awulder/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/awulder/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/awulder/subscriptions",
    "organizations_url" : "https://api.github.com/users/awulder/orgs",
    "repos_url" : "https://api.github.com/users/awulder/repos",
    "events_url" : "https://api.github.com/users/awulder/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/awulder/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "labels" : [ ],
  "state" : "closed",
  "assignee" : null,
  "milestone" : null,
  "comments" : 3,
  "created_at" : "2012-08-17T21:58:49Z",
  "updated_at" : "2012-08-21T17:36:47Z",
  "closed_at" : "2012-08-20T21:47:33Z",
  "pull_request" : {
    "url" : "https://api.github.com/repos/junit-team/junit/pulls/485",
    "html_url" : "https://github.com/junit-team/junit/pull/485",
    "diff_url" : "https://github.com/junit-team/junit/pull/485.diff",
    "patch_url" : "https://github.com/junit-team/junit/pull/485.patch"
  },
  "body" : "Added Type check for MultiPointsMethod"
} ]